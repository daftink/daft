{"ast":null,"code":"import { useMessageComposer } from './useMessageComposer';\nimport { useStateStore } from '../../../store';\nconst stateSelector = state => ({\n  attachments: state.attachments\n});\nexport const useAttachmentManagerState = () => {\n  const {\n    attachmentManager\n  } = useMessageComposer();\n  const {\n    attachments\n  } = useStateStore(attachmentManager.state, stateSelector);\n  return {\n    attachments,\n    availableUploadSlots: attachmentManager.availableUploadSlots,\n    blockedUploadsCount: attachmentManager.blockedUploadsCount,\n    failedUploadsCount: attachmentManager.failedUploadsCount,\n    isUploadEnabled: attachmentManager.isUploadEnabled,\n    pendingUploadsCount: attachmentManager.pendingUploadsCount,\n    successfulUploadsCount: attachmentManager.successfulUploadsCount,\n    uploadsInProgressCount: attachmentManager.uploadsInProgressCount\n  };\n};","map":{"version":3,"names":["useMessageComposer","useStateStore","stateSelector","state","attachments","useAttachmentManagerState","attachmentManager","availableUploadSlots","blockedUploadsCount","failedUploadsCount","isUploadEnabled","pendingUploadsCount","successfulUploadsCount","uploadsInProgressCount"],"sources":["/tmp/daft-chat-temp/node_modules/stream-chat-react/dist/components/MessageInput/hooks/useAttachmentManagerState.js"],"sourcesContent":["import { useMessageComposer } from './useMessageComposer';\nimport { useStateStore } from '../../../store';\nconst stateSelector = (state) => ({\n    attachments: state.attachments,\n});\nexport const useAttachmentManagerState = () => {\n    const { attachmentManager } = useMessageComposer();\n    const { attachments } = useStateStore(attachmentManager.state, stateSelector);\n    return {\n        attachments,\n        availableUploadSlots: attachmentManager.availableUploadSlots,\n        blockedUploadsCount: attachmentManager.blockedUploadsCount,\n        failedUploadsCount: attachmentManager.failedUploadsCount,\n        isUploadEnabled: attachmentManager.isUploadEnabled,\n        pendingUploadsCount: attachmentManager.pendingUploadsCount,\n        successfulUploadsCount: attachmentManager.successfulUploadsCount,\n        uploadsInProgressCount: attachmentManager.uploadsInProgressCount,\n    };\n};\n"],"mappings":"AAAA,SAASA,kBAAkB,QAAQ,sBAAsB;AACzD,SAASC,aAAa,QAAQ,gBAAgB;AAC9C,MAAMC,aAAa,GAAIC,KAAK,KAAM;EAC9BC,WAAW,EAAED,KAAK,CAACC;AACvB,CAAC,CAAC;AACF,OAAO,MAAMC,yBAAyB,GAAGA,CAAA,KAAM;EAC3C,MAAM;IAAEC;EAAkB,CAAC,GAAGN,kBAAkB,CAAC,CAAC;EAClD,MAAM;IAAEI;EAAY,CAAC,GAAGH,aAAa,CAACK,iBAAiB,CAACH,KAAK,EAAED,aAAa,CAAC;EAC7E,OAAO;IACHE,WAAW;IACXG,oBAAoB,EAAED,iBAAiB,CAACC,oBAAoB;IAC5DC,mBAAmB,EAAEF,iBAAiB,CAACE,mBAAmB;IAC1DC,kBAAkB,EAAEH,iBAAiB,CAACG,kBAAkB;IACxDC,eAAe,EAAEJ,iBAAiB,CAACI,eAAe;IAClDC,mBAAmB,EAAEL,iBAAiB,CAACK,mBAAmB;IAC1DC,sBAAsB,EAAEN,iBAAiB,CAACM,sBAAsB;IAChEC,sBAAsB,EAAEP,iBAAiB,CAACO;EAC9C,CAAC;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}