{"ast":null,"code":"import { useEffect } from 'react';\nimport { useChatContext } from '../../../context/ChatContext';\nexport const useConnectionRecoveredListener = forceUpdate => {\n  const {\n    client\n  } = useChatContext('useConnectionRecoveredListener');\n  useEffect(() => {\n    const handleEvent = () => {\n      if (forceUpdate) {\n        forceUpdate();\n      }\n    };\n    client.on('connection.recovered', handleEvent);\n    return () => {\n      client.off('connection.recovered', handleEvent);\n    };\n  }, [client, forceUpdate]);\n};","map":{"version":3,"names":["useEffect","useChatContext","useConnectionRecoveredListener","forceUpdate","client","handleEvent","on","off"],"sources":["/tmp/daft-chat-temp/node_modules/stream-chat-react/dist/components/ChannelList/hooks/useConnectionRecoveredListener.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { useChatContext } from '../../../context/ChatContext';\nexport const useConnectionRecoveredListener = (forceUpdate) => {\n    const { client } = useChatContext('useConnectionRecoveredListener');\n    useEffect(() => {\n        const handleEvent = () => {\n            if (forceUpdate) {\n                forceUpdate();\n            }\n        };\n        client.on('connection.recovered', handleEvent);\n        return () => {\n            client.off('connection.recovered', handleEvent);\n        };\n    }, [client, forceUpdate]);\n};\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,cAAc,QAAQ,8BAA8B;AAC7D,OAAO,MAAMC,8BAA8B,GAAIC,WAAW,IAAK;EAC3D,MAAM;IAAEC;EAAO,CAAC,GAAGH,cAAc,CAAC,gCAAgC,CAAC;EACnED,SAAS,CAAC,MAAM;IACZ,MAAMK,WAAW,GAAGA,CAAA,KAAM;MACtB,IAAIF,WAAW,EAAE;QACbA,WAAW,CAAC,CAAC;MACjB;IACJ,CAAC;IACDC,MAAM,CAACE,EAAE,CAAC,sBAAsB,EAAED,WAAW,CAAC;IAC9C,OAAO,MAAM;MACTD,MAAM,CAACG,GAAG,CAAC,sBAAsB,EAAEF,WAAW,CAAC;IACnD,CAAC;EACL,CAAC,EAAE,CAACD,MAAM,EAAED,WAAW,CAAC,CAAC;AAC7B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}