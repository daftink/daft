{"ast":null,"code":"import React,{useEffect,useState}from'react';import{StreamChat}from'stream-chat';import{Chat,ChannelList,Channel,ChannelHeader,MessageList,MessageInput,Thread,Window}from'stream-chat-react';// ← change this:\nimport'stream-chat-css/dist/css/index.css';import'./App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const API_KEY='3nkn6wg7k7zt';const USER_ID='daftuser';export default function App(){const[client,setClient]=useState(null);useEffect(()=>{(async()=>{const res=await fetch('/token',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({userId:USER_ID})});if(!res.ok)throw new Error('Token fetch failed: '+res.status);const{token}=await res.json();const c=StreamChat.getInstance(API_KEY);await c.connectUser({id:USER_ID,name:'Daft User'},token);setClient(c);})();},[]);if(!client)return/*#__PURE__*/_jsx(\"div\",{children:\"Loading chat\\u2026\"});const channel=client.channel('messaging','daft-channel',{name:'Daft Chat'});return/*#__PURE__*/_jsx(Chat,{client:client,theme:\"messaging light\",children:/*#__PURE__*/_jsxs(Channel,{channel:channel,children:[/*#__PURE__*/_jsx(ChannelHeader,{}),/*#__PURE__*/_jsx(MessageList,{}),/*#__PURE__*/_jsx(MessageInput,{})]})});}","map":{"version":3,"names":["React","useEffect","useState","StreamChat","Chat","ChannelList","Channel","ChannelHeader","MessageList","MessageInput","Thread","Window","jsx","_jsx","jsxs","_jsxs","API_KEY","USER_ID","App","client","setClient","res","fetch","method","headers","body","JSON","stringify","userId","ok","Error","status","token","json","c","getInstance","connectUser","id","name","children","channel","theme"],"sources":["/tmp/daft-chat-temp/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { StreamChat } from 'stream-chat';\nimport {\n  Chat,\n  ChannelList,\n  Channel,\n  ChannelHeader,\n  MessageList,\n  MessageInput,\n  Thread,\n  Window,\n} from 'stream-chat-react';\n// ← change this:\nimport 'stream-chat-css/dist/css/index.css';\nimport './App.css';\n\nconst API_KEY = '3nkn6wg7k7zt';\nconst USER_ID = 'daftuser';\n\nexport default function App() {\n  const [client, setClient] = useState(null);\n\n  useEffect(() => {\n    (async () => {\n      const res = await fetch('/token', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ userId: USER_ID }),\n      });\n      if (!res.ok) throw new Error('Token fetch failed: ' + res.status);\n      const { token } = await res.json();\n\n      const c = StreamChat.getInstance(API_KEY);\n      await c.connectUser({ id: USER_ID, name: 'Daft User' }, token);\n      setClient(c);\n    })();\n  }, []);\n\n  if (!client) return <div>Loading chat…</div>;\n\n  const channel = client.channel('messaging', 'daft-channel', { name: 'Daft Chat' });\n\n  return (\n    <Chat client={client} theme=\"messaging light\">\n      <Channel channel={channel}>\n        <ChannelHeader />\n        <MessageList />\n        <MessageInput />\n      </Channel>\n    </Chat>\n  );\n}\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,UAAU,KAAQ,aAAa,CACxC,OACEC,IAAI,CACJC,WAAW,CACXC,OAAO,CACPC,aAAa,CACbC,WAAW,CACXC,YAAY,CACZC,MAAM,CACNC,MAAM,KACD,mBAAmB,CAC1B;AACA,MAAO,oCAAoC,CAC3C,MAAO,WAAW,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnB,KAAM,CAAAC,OAAO,CAAG,cAAc,CAC9B,KAAM,CAAAC,OAAO,CAAG,UAAU,CAE1B,cAAe,SAAS,CAAAC,GAAGA,CAAA,CAAG,CAC5B,KAAM,CAACC,MAAM,CAAEC,SAAS,CAAC,CAAGlB,QAAQ,CAAC,IAAI,CAAC,CAE1CD,SAAS,CAAC,IAAM,CACd,CAAC,SAAY,CACX,KAAM,CAAAoB,GAAG,CAAG,KAAM,CAAAC,KAAK,CAAC,QAAQ,CAAE,CAChCC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEC,MAAM,CAAEX,OAAQ,CAAC,CAC1C,CAAC,CAAC,CACF,GAAI,CAACI,GAAG,CAACQ,EAAE,CAAE,KAAM,IAAI,CAAAC,KAAK,CAAC,sBAAsB,CAAGT,GAAG,CAACU,MAAM,CAAC,CACjE,KAAM,CAAEC,KAAM,CAAC,CAAG,KAAM,CAAAX,GAAG,CAACY,IAAI,CAAC,CAAC,CAElC,KAAM,CAAAC,CAAC,CAAG/B,UAAU,CAACgC,WAAW,CAACnB,OAAO,CAAC,CACzC,KAAM,CAAAkB,CAAC,CAACE,WAAW,CAAC,CAAEC,EAAE,CAAEpB,OAAO,CAAEqB,IAAI,CAAE,WAAY,CAAC,CAAEN,KAAK,CAAC,CAC9DZ,SAAS,CAACc,CAAC,CAAC,CACd,CAAC,EAAE,CAAC,CACN,CAAC,CAAE,EAAE,CAAC,CAEN,GAAI,CAACf,MAAM,CAAE,mBAAON,IAAA,QAAA0B,QAAA,CAAK,oBAAa,CAAK,CAAC,CAE5C,KAAM,CAAAC,OAAO,CAAGrB,MAAM,CAACqB,OAAO,CAAC,WAAW,CAAE,cAAc,CAAE,CAAEF,IAAI,CAAE,WAAY,CAAC,CAAC,CAElF,mBACEzB,IAAA,CAACT,IAAI,EAACe,MAAM,CAAEA,MAAO,CAACsB,KAAK,CAAC,iBAAiB,CAAAF,QAAA,cAC3CxB,KAAA,CAACT,OAAO,EAACkC,OAAO,CAAEA,OAAQ,CAAAD,QAAA,eACxB1B,IAAA,CAACN,aAAa,GAAE,CAAC,cACjBM,IAAA,CAACL,WAAW,GAAE,CAAC,cACfK,IAAA,CAACJ,YAAY,GAAE,CAAC,EACT,CAAC,CACN,CAAC,CAEX","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}