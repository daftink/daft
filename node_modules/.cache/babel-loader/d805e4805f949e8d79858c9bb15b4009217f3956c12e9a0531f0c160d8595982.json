{"ast":null,"code":"import { useTextareaRef } from './useTextareaRef';\nimport { useSubmitHandler } from './useSubmitHandler';\nimport { usePasteHandler } from './usePasteHandler';\nimport { useMediaRecorder } from '../../MediaRecorder/hooks/useMediaRecorder';\nexport const useMessageInputControls = props => {\n  const {\n    asyncMessagesMultiSendEnabled,\n    audioRecordingConfig,\n    audioRecordingEnabled\n  } = props;\n  const {\n    textareaRef\n  } = useTextareaRef(props);\n  const {\n    handleSubmit\n  } = useSubmitHandler(props);\n  const recordingController = useMediaRecorder({\n    asyncMessagesMultiSendEnabled,\n    enabled: !!audioRecordingEnabled,\n    handleSubmit,\n    recordingConfig: audioRecordingConfig\n  });\n  const {\n    onPaste\n  } = usePasteHandler();\n  return {\n    handleSubmit,\n    onPaste,\n    recordingController,\n    textareaRef\n  };\n};","map":{"version":3,"names":["useTextareaRef","useSubmitHandler","usePasteHandler","useMediaRecorder","useMessageInputControls","props","asyncMessagesMultiSendEnabled","audioRecordingConfig","audioRecordingEnabled","textareaRef","handleSubmit","recordingController","enabled","recordingConfig","onPaste"],"sources":["/tmp/daft-chat-temp/node_modules/stream-chat-react/dist/components/MessageInput/hooks/useMessageInputControls.js"],"sourcesContent":["import { useTextareaRef } from './useTextareaRef';\nimport { useSubmitHandler } from './useSubmitHandler';\nimport { usePasteHandler } from './usePasteHandler';\nimport { useMediaRecorder } from '../../MediaRecorder/hooks/useMediaRecorder';\nexport const useMessageInputControls = (props) => {\n    const { asyncMessagesMultiSendEnabled, audioRecordingConfig, audioRecordingEnabled } = props;\n    const { textareaRef } = useTextareaRef(props);\n    const { handleSubmit } = useSubmitHandler(props);\n    const recordingController = useMediaRecorder({\n        asyncMessagesMultiSendEnabled,\n        enabled: !!audioRecordingEnabled,\n        handleSubmit,\n        recordingConfig: audioRecordingConfig,\n    });\n    const { onPaste } = usePasteHandler();\n    return {\n        handleSubmit,\n        onPaste,\n        recordingController,\n        textareaRef,\n    };\n};\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,SAASC,gBAAgB,QAAQ,oBAAoB;AACrD,SAASC,eAAe,QAAQ,mBAAmB;AACnD,SAASC,gBAAgB,QAAQ,4CAA4C;AAC7E,OAAO,MAAMC,uBAAuB,GAAIC,KAAK,IAAK;EAC9C,MAAM;IAAEC,6BAA6B;IAAEC,oBAAoB;IAAEC;EAAsB,CAAC,GAAGH,KAAK;EAC5F,MAAM;IAAEI;EAAY,CAAC,GAAGT,cAAc,CAACK,KAAK,CAAC;EAC7C,MAAM;IAAEK;EAAa,CAAC,GAAGT,gBAAgB,CAACI,KAAK,CAAC;EAChD,MAAMM,mBAAmB,GAAGR,gBAAgB,CAAC;IACzCG,6BAA6B;IAC7BM,OAAO,EAAE,CAAC,CAACJ,qBAAqB;IAChCE,YAAY;IACZG,eAAe,EAAEN;EACrB,CAAC,CAAC;EACF,MAAM;IAAEO;EAAQ,CAAC,GAAGZ,eAAe,CAAC,CAAC;EACrC,OAAO;IACHQ,YAAY;IACZI,OAAO;IACPH,mBAAmB;IACnBF;EACJ,CAAC;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}