{"ast":null,"code":"import _objectWithoutProperties from \"/tmp/daft-chat-temp/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"handleReaction\"];\nimport React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { useMessageContext } from '../../context/MessageContext';\nimport { useProcessReactions } from './hooks/useProcessReactions';\nimport { useEnterLeaveHandlers } from '../Tooltip/hooks';\nimport { PopperTooltip } from '../Tooltip';\nconst WithTooltip = _ref => {\n  let {\n    children,\n    onMouseEnter,\n    onMouseLeave,\n    title\n  } = _ref;\n  const [referenceElement, setReferenceElement] = useState(null);\n  const {\n    handleEnter,\n    handleLeave,\n    tooltipVisible\n  } = useEnterLeaveHandlers({\n    onMouseEnter,\n    onMouseLeave\n  });\n  return React.createElement(React.Fragment, null, React.createElement(PopperTooltip, {\n    referenceElement: referenceElement,\n    visible: tooltipVisible\n  }, title), React.createElement(\"span\", {\n    onMouseEnter: handleEnter,\n    onMouseLeave: handleLeave,\n    ref: setReferenceElement\n  }, children));\n};\nconst UnMemoizedSimpleReactionsList = props => {\n  const {\n      handleReaction: propHandleReaction\n    } = props,\n    rest = _objectWithoutProperties(props, _excluded);\n  const {\n    handleReaction: contextHandleReaction\n  } = useMessageContext('SimpleReactionsList');\n  const {\n    existingReactions,\n    hasReactions,\n    totalReactionCount\n  } = useProcessReactions(rest);\n  const handleReaction = propHandleReaction || contextHandleReaction;\n  if (!hasReactions) return null;\n  return React.createElement(\"div\", {\n    className: 'str-chat__message-reactions-container'\n  }, React.createElement(\"ul\", {\n    className: 'str-chat__simple-reactions-list str-chat__message-reactions',\n    \"data-testid\": 'simple-reaction-list'\n  }, existingReactions.map(_ref2 => {\n    let {\n      EmojiComponent,\n      isOwnReaction,\n      latestReactedUserNames,\n      reactionType\n    } = _ref2;\n    const tooltipContent = latestReactedUserNames.join(', ');\n    return EmojiComponent && React.createElement(\"li\", {\n      className: clsx('str-chat__simple-reactions-list-item', {\n        'str-chat__message-reaction-own': isOwnReaction\n      }),\n      key: reactionType,\n      onClick: event => handleReaction(reactionType, event),\n      onKeyUp: event => handleReaction(reactionType, event)\n    }, React.createElement(WithTooltip, {\n      title: tooltipContent\n    }, React.createElement(EmojiComponent, null)));\n  }), React.createElement(\"li\", {\n    className: 'str-chat__simple-reactions-list-item--last-number'\n  }, totalReactionCount)));\n};\nexport const SimpleReactionsList = React.memo(UnMemoizedSimpleReactionsList);","map":{"version":3,"names":["React","useState","clsx","useMessageContext","useProcessReactions","useEnterLeaveHandlers","PopperTooltip","WithTooltip","_ref","children","onMouseEnter","onMouseLeave","title","referenceElement","setReferenceElement","handleEnter","handleLeave","tooltipVisible","createElement","Fragment","visible","ref","UnMemoizedSimpleReactionsList","props","handleReaction","propHandleReaction","rest","_objectWithoutProperties","_excluded","contextHandleReaction","existingReactions","hasReactions","totalReactionCount","className","map","_ref2","EmojiComponent","isOwnReaction","latestReactedUserNames","reactionType","tooltipContent","join","key","onClick","event","onKeyUp","SimpleReactionsList","memo"],"sources":["/tmp/daft-chat-temp/node_modules/stream-chat-react/dist/components/Reactions/SimpleReactionsList.js"],"sourcesContent":["import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { useMessageContext } from '../../context/MessageContext';\nimport { useProcessReactions } from './hooks/useProcessReactions';\nimport { useEnterLeaveHandlers } from '../Tooltip/hooks';\nimport { PopperTooltip } from '../Tooltip';\nconst WithTooltip = ({ children, onMouseEnter, onMouseLeave, title, }) => {\n    const [referenceElement, setReferenceElement] = useState(null);\n    const { handleEnter, handleLeave, tooltipVisible } = useEnterLeaveHandlers({\n        onMouseEnter,\n        onMouseLeave,\n    });\n    return (React.createElement(React.Fragment, null,\n        React.createElement(PopperTooltip, { referenceElement: referenceElement, visible: tooltipVisible }, title),\n        React.createElement(\"span\", { onMouseEnter: handleEnter, onMouseLeave: handleLeave, ref: setReferenceElement }, children)));\n};\nconst UnMemoizedSimpleReactionsList = (props) => {\n    const { handleReaction: propHandleReaction, ...rest } = props;\n    const { handleReaction: contextHandleReaction } = useMessageContext('SimpleReactionsList');\n    const { existingReactions, hasReactions, totalReactionCount } = useProcessReactions(rest);\n    const handleReaction = propHandleReaction || contextHandleReaction;\n    if (!hasReactions)\n        return null;\n    return (React.createElement(\"div\", { className: 'str-chat__message-reactions-container' },\n        React.createElement(\"ul\", { className: 'str-chat__simple-reactions-list str-chat__message-reactions', \"data-testid\": 'simple-reaction-list' },\n            existingReactions.map(({ EmojiComponent, isOwnReaction, latestReactedUserNames, reactionType }) => {\n                const tooltipContent = latestReactedUserNames.join(', ');\n                return (EmojiComponent && (React.createElement(\"li\", { className: clsx('str-chat__simple-reactions-list-item', {\n                        'str-chat__message-reaction-own': isOwnReaction,\n                    }), key: reactionType, onClick: (event) => handleReaction(reactionType, event), onKeyUp: (event) => handleReaction(reactionType, event) },\n                    React.createElement(WithTooltip, { title: tooltipContent },\n                        React.createElement(EmojiComponent, null)))));\n            }),\n            React.createElement(\"li\", { className: 'str-chat__simple-reactions-list-item--last-number' }, totalReactionCount))));\n};\nexport const SimpleReactionsList = React.memo(UnMemoizedSimpleReactionsList);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}