{"ast":null,"code":"import { Observable } from './Observable';\nimport { Subscription } from './Subscription';\nimport { createObserver } from './Observer';\nexport class Subject extends Observable {\n  constructor() {\n    super();\n    this._observers = new Map();\n    this._observerCounter = 0;\n  }\n  get observers() {\n    return Array.from(this._observers.values());\n  }\n  next(value) {\n    if (this.closed) return;\n    const observers = this.observers;\n    for (let i = 0; i < observers.length; i++) {\n      observers[i].next(value);\n    }\n  }\n  error(err) {\n    if (this.closed) return;\n    this.thrownError = err;\n    const {\n      observers\n    } = this;\n    for (let i = 0; i < observers.length; i++) {\n      var _observers$i$error, _observers$i;\n      (_observers$i$error = (_observers$i = observers[i]).error) === null || _observers$i$error === void 0 || _observers$i$error.call(_observers$i, err);\n    }\n    this._observers.clear();\n  }\n  complete() {\n    if (this.closed) return;\n    this._closed = true;\n    const {\n      observers\n    } = this;\n    for (let i = 0; i < observers.length; i++) {\n      var _observers$i$complete, _observers$i2;\n      (_observers$i$complete = (_observers$i2 = observers[i]).complete) === null || _observers$i$complete === void 0 || _observers$i$complete.call(_observers$i2);\n    }\n    this._observers.clear();\n  }\n  subscribe(observerOrNext) {\n    const observer = createObserver(observerOrNext);\n    if (this.thrownError || this.closed) {\n      const subscription = new Subscription();\n      subscription.closed = true;\n      return subscription;\n    }\n    const observerId = this._observerCounter++;\n    this._observers.set(observerId, observer);\n    return new Subscription(() => {\n      this._observers.delete(observerId);\n    });\n  }\n  unsubscribe() {\n    this._closed = true;\n    this._observers.clear();\n  }\n}","map":{"version":3,"names":["Observable","Subscription","createObserver","Subject","constructor","_observers","Map","_observerCounter","observers","Array","from","values","next","value","closed","i","length","error","err","thrownError","_observers$i$error","_observers$i","call","clear","complete","_closed","_observers$i$complete","_observers$i2","subscribe","observerOrNext","observer","subscription","observerId","set","delete","unsubscribe"],"sources":["/tmp/daft-chat-temp/node_modules/stream-chat-react/dist/components/MediaRecorder/observable/Subject.js"],"sourcesContent":["import { Observable } from './Observable';\nimport { Subscription } from './Subscription';\nimport { createObserver } from './Observer';\nexport class Subject extends Observable {\n    constructor() {\n        super();\n        this._observers = new Map();\n        this._observerCounter = 0;\n    }\n    get observers() {\n        return Array.from(this._observers.values());\n    }\n    next(value) {\n        if (this.closed)\n            return;\n        const observers = this.observers;\n        for (let i = 0; i < observers.length; i++) {\n            observers[i].next(value);\n        }\n    }\n    error(err) {\n        if (this.closed)\n            return;\n        this.thrownError = err;\n        const { observers } = this;\n        for (let i = 0; i < observers.length; i++) {\n            observers[i].error?.(err);\n        }\n        this._observers.clear();\n    }\n    complete() {\n        if (this.closed)\n            return;\n        this._closed = true;\n        const { observers } = this;\n        for (let i = 0; i < observers.length; i++) {\n            observers[i].complete?.();\n        }\n        this._observers.clear();\n    }\n    subscribe(observerOrNext) {\n        const observer = createObserver(observerOrNext);\n        if (this.thrownError || this.closed) {\n            const subscription = new Subscription();\n            subscription.closed = true;\n            return subscription;\n        }\n        const observerId = this._observerCounter++;\n        this._observers.set(observerId, observer);\n        return new Subscription(() => {\n            this._observers.delete(observerId);\n        });\n    }\n    unsubscribe() {\n        this._closed = true;\n        this._observers.clear();\n    }\n}\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,cAAc;AACzC,SAASC,YAAY,QAAQ,gBAAgB;AAC7C,SAASC,cAAc,QAAQ,YAAY;AAC3C,OAAO,MAAMC,OAAO,SAASH,UAAU,CAAC;EACpCI,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC,CAAC;IACP,IAAI,CAACC,UAAU,GAAG,IAAIC,GAAG,CAAC,CAAC;IAC3B,IAAI,CAACC,gBAAgB,GAAG,CAAC;EAC7B;EACA,IAAIC,SAASA,CAAA,EAAG;IACZ,OAAOC,KAAK,CAACC,IAAI,CAAC,IAAI,CAACL,UAAU,CAACM,MAAM,CAAC,CAAC,CAAC;EAC/C;EACAC,IAAIA,CAACC,KAAK,EAAE;IACR,IAAI,IAAI,CAACC,MAAM,EACX;IACJ,MAAMN,SAAS,GAAG,IAAI,CAACA,SAAS;IAChC,KAAK,IAAIO,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,SAAS,CAACQ,MAAM,EAAED,CAAC,EAAE,EAAE;MACvCP,SAAS,CAACO,CAAC,CAAC,CAACH,IAAI,CAACC,KAAK,CAAC;IAC5B;EACJ;EACAI,KAAKA,CAACC,GAAG,EAAE;IACP,IAAI,IAAI,CAACJ,MAAM,EACX;IACJ,IAAI,CAACK,WAAW,GAAGD,GAAG;IACtB,MAAM;MAAEV;IAAU,CAAC,GAAG,IAAI;IAC1B,KAAK,IAAIO,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,SAAS,CAACQ,MAAM,EAAED,CAAC,EAAE,EAAE;MAAA,IAAAK,kBAAA,EAAAC,YAAA;MACvC,CAAAD,kBAAA,IAAAC,YAAA,GAAAb,SAAS,CAACO,CAAC,CAAC,EAACE,KAAK,cAAAG,kBAAA,eAAlBA,kBAAA,CAAAE,IAAA,CAAAD,YAAA,EAAqBH,GAAG,CAAC;IAC7B;IACA,IAAI,CAACb,UAAU,CAACkB,KAAK,CAAC,CAAC;EAC3B;EACAC,QAAQA,CAAA,EAAG;IACP,IAAI,IAAI,CAACV,MAAM,EACX;IACJ,IAAI,CAACW,OAAO,GAAG,IAAI;IACnB,MAAM;MAAEjB;IAAU,CAAC,GAAG,IAAI;IAC1B,KAAK,IAAIO,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,SAAS,CAACQ,MAAM,EAAED,CAAC,EAAE,EAAE;MAAA,IAAAW,qBAAA,EAAAC,aAAA;MACvC,CAAAD,qBAAA,IAAAC,aAAA,GAAAnB,SAAS,CAACO,CAAC,CAAC,EAACS,QAAQ,cAAAE,qBAAA,eAArBA,qBAAA,CAAAJ,IAAA,CAAAK,aAAwB,CAAC;IAC7B;IACA,IAAI,CAACtB,UAAU,CAACkB,KAAK,CAAC,CAAC;EAC3B;EACAK,SAASA,CAACC,cAAc,EAAE;IACtB,MAAMC,QAAQ,GAAG5B,cAAc,CAAC2B,cAAc,CAAC;IAC/C,IAAI,IAAI,CAACV,WAAW,IAAI,IAAI,CAACL,MAAM,EAAE;MACjC,MAAMiB,YAAY,GAAG,IAAI9B,YAAY,CAAC,CAAC;MACvC8B,YAAY,CAACjB,MAAM,GAAG,IAAI;MAC1B,OAAOiB,YAAY;IACvB;IACA,MAAMC,UAAU,GAAG,IAAI,CAACzB,gBAAgB,EAAE;IAC1C,IAAI,CAACF,UAAU,CAAC4B,GAAG,CAACD,UAAU,EAAEF,QAAQ,CAAC;IACzC,OAAO,IAAI7B,YAAY,CAAC,MAAM;MAC1B,IAAI,CAACI,UAAU,CAAC6B,MAAM,CAACF,UAAU,CAAC;IACtC,CAAC,CAAC;EACN;EACAG,WAAWA,CAAA,EAAG;IACV,IAAI,CAACV,OAAO,GAAG,IAAI;IACnB,IAAI,CAACpB,UAAU,CAACkB,KAAK,CAAC,CAAC;EAC3B;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}