{"ast":null,"code":"import { useChannelActionContext } from '../../../context/ChannelActionContext';\nfunction createEventHandler(fn, message) {\n  return event => {\n    var _message$mentioned_us;\n    if (typeof fn !== 'function' || !(message !== null && message !== void 0 && (_message$mentioned_us = message.mentioned_users) !== null && _message$mentioned_us !== void 0 && _message$mentioned_us.length)) {\n      return;\n    }\n    fn(event, message.mentioned_users);\n  };\n}\nexport const useMentionsHandler = (message, customMentionHandler) => {\n  const {\n    onMentionsClick: contextOnMentionsClick,\n    onMentionsHover: contextOnMentionsHover\n  } = useChannelActionContext('useMentionsHandler');\n  const onMentionsClick = (customMentionHandler === null || customMentionHandler === void 0 ? void 0 : customMentionHandler.onMentionsClick) || contextOnMentionsClick || (() => null);\n  const onMentionsHover = (customMentionHandler === null || customMentionHandler === void 0 ? void 0 : customMentionHandler.onMentionsHover) || contextOnMentionsHover || (() => null);\n  return {\n    onMentionsClick: createEventHandler(onMentionsClick, message),\n    onMentionsHover: createEventHandler(onMentionsHover, message)\n  };\n};","map":{"version":3,"names":["useChannelActionContext","createEventHandler","fn","message","event","_message$mentioned_us","mentioned_users","length","useMentionsHandler","customMentionHandler","onMentionsClick","contextOnMentionsClick","onMentionsHover","contextOnMentionsHover"],"sources":["/tmp/daft-chat-temp/node_modules/stream-chat-react/dist/components/Message/hooks/useMentionsHandler.js"],"sourcesContent":["import { useChannelActionContext } from '../../../context/ChannelActionContext';\nfunction createEventHandler(fn, message) {\n    return (event) => {\n        if (typeof fn !== 'function' || !message?.mentioned_users?.length) {\n            return;\n        }\n        fn(event, message.mentioned_users);\n    };\n}\nexport const useMentionsHandler = (message, customMentionHandler) => {\n    const { onMentionsClick: contextOnMentionsClick, onMentionsHover: contextOnMentionsHover, } = useChannelActionContext('useMentionsHandler');\n    const onMentionsClick = customMentionHandler?.onMentionsClick || contextOnMentionsClick || (() => null);\n    const onMentionsHover = customMentionHandler?.onMentionsHover || contextOnMentionsHover || (() => null);\n    return {\n        onMentionsClick: createEventHandler(onMentionsClick, message),\n        onMentionsHover: createEventHandler(onMentionsHover, message),\n    };\n};\n"],"mappings":"AAAA,SAASA,uBAAuB,QAAQ,uCAAuC;AAC/E,SAASC,kBAAkBA,CAACC,EAAE,EAAEC,OAAO,EAAE;EACrC,OAAQC,KAAK,IAAK;IAAA,IAAAC,qBAAA;IACd,IAAI,OAAOH,EAAE,KAAK,UAAU,IAAI,EAACC,OAAO,aAAPA,OAAO,gBAAAE,qBAAA,GAAPF,OAAO,CAAEG,eAAe,cAAAD,qBAAA,eAAxBA,qBAAA,CAA0BE,MAAM,GAAE;MAC/D;IACJ;IACAL,EAAE,CAACE,KAAK,EAAED,OAAO,CAACG,eAAe,CAAC;EACtC,CAAC;AACL;AACA,OAAO,MAAME,kBAAkB,GAAGA,CAACL,OAAO,EAAEM,oBAAoB,KAAK;EACjE,MAAM;IAAEC,eAAe,EAAEC,sBAAsB;IAAEC,eAAe,EAAEC;EAAwB,CAAC,GAAGb,uBAAuB,CAAC,oBAAoB,CAAC;EAC3I,MAAMU,eAAe,GAAG,CAAAD,oBAAoB,aAApBA,oBAAoB,uBAApBA,oBAAoB,CAAEC,eAAe,KAAIC,sBAAsB,KAAK,MAAM,IAAI,CAAC;EACvG,MAAMC,eAAe,GAAG,CAAAH,oBAAoB,aAApBA,oBAAoB,uBAApBA,oBAAoB,CAAEG,eAAe,KAAIC,sBAAsB,KAAK,MAAM,IAAI,CAAC;EACvG,OAAO;IACHH,eAAe,EAAET,kBAAkB,CAACS,eAAe,EAAEP,OAAO,CAAC;IAC7DS,eAAe,EAAEX,kBAAkB,CAACW,eAAe,EAAET,OAAO;EAChE,CAAC;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}