{"ast":null,"code":"import React from 'react';\nimport clsx from 'clsx';\nimport { useChannelMembershipState } from '../ChannelList';\nimport { Icon } from './icons';\nimport { useTranslationContext } from '../../context';\nexport function ChannelPreviewActionButtons(_ref) {\n  let {\n    channel\n  } = _ref;\n  const membership = useChannelMembershipState(channel);\n  const {\n    t\n  } = useTranslationContext();\n  return React.createElement(\"div\", {\n    className: 'str-chat__channel-preview__action-buttons'\n  }, React.createElement(\"button\", {\n    \"aria-label\": membership.pinned_at ? t('Unpin') : t('Pin'),\n    className: clsx('str-chat__channel-preview__action-button', 'str-chat__channel-preview__action-button--pin', membership.pinned_at && 'str-chat__channel-preview__action-button--active'),\n    onClick: e => {\n      e.stopPropagation();\n      if (membership.pinned_at) {\n        channel.unpin();\n      } else {\n        channel.pin();\n      }\n    },\n    title: membership.pinned_at ? t('Unpin') : t('Pin')\n  }, React.createElement(Icon.Pin, null)), React.createElement(\"button\", {\n    \"aria-label\": membership.archived_at ? t('Unarchive') : t('Archive'),\n    className: clsx('str-chat__channel-preview__action-button', 'str-chat__channel-preview__action-button--archive', membership.archived_at && 'str-chat__channel-preview__action-button--active'),\n    onClick: e => {\n      e.stopPropagation();\n      if (membership.archived_at) {\n        channel.unarchive();\n      } else {\n        channel.archive();\n      }\n    },\n    title: membership.archived_at ? t('Unarchive') : t('Archive')\n  }, React.createElement(Icon.ArchiveBox, null)));\n}","map":{"version":3,"names":["React","clsx","useChannelMembershipState","Icon","useTranslationContext","ChannelPreviewActionButtons","_ref","channel","membership","t","createElement","className","pinned_at","onClick","e","stopPropagation","unpin","pin","title","Pin","archived_at","unarchive","archive","ArchiveBox"],"sources":["/tmp/daft-chat-temp/node_modules/stream-chat-react/dist/components/ChannelPreview/ChannelPreviewActionButtons.js"],"sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport { useChannelMembershipState } from '../ChannelList';\nimport { Icon } from './icons';\nimport { useTranslationContext } from '../../context';\nexport function ChannelPreviewActionButtons({ channel, }) {\n    const membership = useChannelMembershipState(channel);\n    const { t } = useTranslationContext();\n    return (React.createElement(\"div\", { className: 'str-chat__channel-preview__action-buttons' },\n        React.createElement(\"button\", { \"aria-label\": membership.pinned_at ? t('Unpin') : t('Pin'), className: clsx('str-chat__channel-preview__action-button', 'str-chat__channel-preview__action-button--pin', membership.pinned_at && 'str-chat__channel-preview__action-button--active'), onClick: (e) => {\n                e.stopPropagation();\n                if (membership.pinned_at) {\n                    channel.unpin();\n                }\n                else {\n                    channel.pin();\n                }\n            }, title: membership.pinned_at ? t('Unpin') : t('Pin') },\n            React.createElement(Icon.Pin, null)),\n        React.createElement(\"button\", { \"aria-label\": membership.archived_at ? t('Unarchive') : t('Archive'), className: clsx('str-chat__channel-preview__action-button', 'str-chat__channel-preview__action-button--archive', membership.archived_at && 'str-chat__channel-preview__action-button--active'), onClick: (e) => {\n                e.stopPropagation();\n                if (membership.archived_at) {\n                    channel.unarchive();\n                }\n                else {\n                    channel.archive();\n                }\n            }, title: membership.archived_at ? t('Unarchive') : t('Archive') },\n            React.createElement(Icon.ArchiveBox, null))));\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,MAAM;AACvB,SAASC,yBAAyB,QAAQ,gBAAgB;AAC1D,SAASC,IAAI,QAAQ,SAAS;AAC9B,SAASC,qBAAqB,QAAQ,eAAe;AACrD,OAAO,SAASC,2BAA2BA,CAAAC,IAAA,EAAe;EAAA,IAAd;IAAEC;EAAS,CAAC,GAAAD,IAAA;EACpD,MAAME,UAAU,GAAGN,yBAAyB,CAACK,OAAO,CAAC;EACrD,MAAM;IAAEE;EAAE,CAAC,GAAGL,qBAAqB,CAAC,CAAC;EACrC,OAAQJ,KAAK,CAACU,aAAa,CAAC,KAAK,EAAE;IAAEC,SAAS,EAAE;EAA4C,CAAC,EACzFX,KAAK,CAACU,aAAa,CAAC,QAAQ,EAAE;IAAE,YAAY,EAAEF,UAAU,CAACI,SAAS,GAAGH,CAAC,CAAC,OAAO,CAAC,GAAGA,CAAC,CAAC,KAAK,CAAC;IAAEE,SAAS,EAAEV,IAAI,CAAC,0CAA0C,EAAE,+CAA+C,EAAEO,UAAU,CAACI,SAAS,IAAI,kDAAkD,CAAC;IAAEC,OAAO,EAAGC,CAAC,IAAK;MAC9RA,CAAC,CAACC,eAAe,CAAC,CAAC;MACnB,IAAIP,UAAU,CAACI,SAAS,EAAE;QACtBL,OAAO,CAACS,KAAK,CAAC,CAAC;MACnB,CAAC,MACI;QACDT,OAAO,CAACU,GAAG,CAAC,CAAC;MACjB;IACJ,CAAC;IAAEC,KAAK,EAAEV,UAAU,CAACI,SAAS,GAAGH,CAAC,CAAC,OAAO,CAAC,GAAGA,CAAC,CAAC,KAAK;EAAE,CAAC,EACxDT,KAAK,CAACU,aAAa,CAACP,IAAI,CAACgB,GAAG,EAAE,IAAI,CAAC,CAAC,EACxCnB,KAAK,CAACU,aAAa,CAAC,QAAQ,EAAE;IAAE,YAAY,EAAEF,UAAU,CAACY,WAAW,GAAGX,CAAC,CAAC,WAAW,CAAC,GAAGA,CAAC,CAAC,SAAS,CAAC;IAAEE,SAAS,EAAEV,IAAI,CAAC,0CAA0C,EAAE,mDAAmD,EAAEO,UAAU,CAACY,WAAW,IAAI,kDAAkD,CAAC;IAAEP,OAAO,EAAGC,CAAC,IAAK;MAC9SA,CAAC,CAACC,eAAe,CAAC,CAAC;MACnB,IAAIP,UAAU,CAACY,WAAW,EAAE;QACxBb,OAAO,CAACc,SAAS,CAAC,CAAC;MACvB,CAAC,MACI;QACDd,OAAO,CAACe,OAAO,CAAC,CAAC;MACrB;IACJ,CAAC;IAAEJ,KAAK,EAAEV,UAAU,CAACY,WAAW,GAAGX,CAAC,CAAC,WAAW,CAAC,GAAGA,CAAC,CAAC,SAAS;EAAE,CAAC,EAClET,KAAK,CAACU,aAAa,CAACP,IAAI,CAACoB,UAAU,EAAE,IAAI,CAAC,CAAC,CAAC;AACxD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}