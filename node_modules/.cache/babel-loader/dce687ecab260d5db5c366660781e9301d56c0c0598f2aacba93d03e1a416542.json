{"ast":null,"code":"import React, { useCallback, useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { SearchIcon } from './icons';\nimport { ChannelPreview } from '../ChannelPreview';\nimport { isChannel } from './utils';\nimport { Avatar } from '../Avatar';\nimport { useTranslationContext } from '../../context';\nconst DefaultSearchEmpty = () => {\n  const {\n    t\n  } = useTranslationContext('SearchResults');\n  return React.createElement(\"div\", {\n    \"aria-live\": 'polite',\n    className: 'str-chat__channel-search-container-empty'\n  }, React.createElement(SearchIcon, null), t('No results found'));\n};\nconst DefaultSearchResultsHeader = _ref => {\n  let {\n    results\n  } = _ref;\n  const {\n    t\n  } = useTranslationContext('SearchResultsHeader');\n  return React.createElement(\"div\", {\n    className: 'str-chat__channel-search-results-header',\n    \"data-testid\": 'channel-search-results-header'\n  }, t('searchResultsCount', {\n    count: results.length\n  }));\n};\nconst DefaultSearchResultsList = props => {\n  const {\n    focusedUser,\n    results,\n    SearchResultItem,\n    selectResult\n  } = props;\n  return React.createElement(React.Fragment, null, results.map((result, index) => React.createElement(SearchResultItem, {\n    focusedUser: focusedUser,\n    index: index,\n    key: index,\n    result: result,\n    selectResult: selectResult\n  })));\n};\nconst DefaultSearchResultItem = props => {\n  const {\n    focusedUser,\n    index,\n    result,\n    selectResult\n  } = props;\n  const focused = focusedUser === index;\n  const className = clsx('str-chat__channel-search-result', focused && 'str-chat__channel-search-result--focused');\n  if (isChannel(result)) {\n    const channel = result;\n    return React.createElement(ChannelPreview, {\n      channel: channel,\n      className: className,\n      onSelect: () => selectResult(channel)\n    });\n  } else {\n    return React.createElement(\"button\", {\n      \"aria-label\": \"Select User Channel: \".concat(result.name || ''),\n      className: className,\n      \"data-testid\": 'channel-search-result-user',\n      onClick: () => selectResult(result),\n      role: 'option'\n    }, React.createElement(Avatar, {\n      className: 'str-chat__avatar--channel-preview',\n      image: result.image,\n      name: result.name || result.id,\n      user: result\n    }), React.createElement(\"div\", {\n      className: 'str-chat__channel-search-result--display-name'\n    }, result.name || result.id));\n  }\n};\nconst ResultsContainer = _ref2 => {\n  let {\n    children,\n    popupResults\n  } = _ref2;\n  const {\n    t\n  } = useTranslationContext('ResultsContainer');\n  return React.createElement(\"div\", {\n    \"aria-label\": t('aria/Channel search results'),\n    className: clsx(\"str-chat__channel-search-result-list\", popupResults ? 'popup' : 'inline')\n  }, children);\n};\nexport const SearchResults = props => {\n  const {\n    popupResults,\n    results,\n    SearchEmpty = DefaultSearchEmpty,\n    searching,\n    SearchLoading,\n    SearchResultItem = DefaultSearchResultItem,\n    SearchResultsHeader = DefaultSearchResultsHeader,\n    SearchResultsList = DefaultSearchResultsList,\n    selectResult\n  } = props;\n  const {\n    t\n  } = useTranslationContext('SearchResults');\n  const [focusedResult, setFocusedResult] = useState();\n  const handleKeyDown = useCallback(event => {\n    if (event.key === 'ArrowUp') {\n      setFocusedResult(prevFocused => {\n        if (prevFocused === undefined) return 0;\n        return prevFocused === 0 ? results.length - 1 : prevFocused - 1;\n      });\n    }\n    if (event.key === 'ArrowDown') {\n      setFocusedResult(prevFocused => {\n        if (prevFocused === undefined) return 0;\n        return prevFocused === results.length - 1 ? 0 : prevFocused + 1;\n      });\n    }\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      setFocusedResult(prevFocused => {\n        if (typeof prevFocused !== 'undefined') {\n          selectResult(results[prevFocused]);\n          return undefined;\n        }\n        return prevFocused;\n      });\n    }\n  }, [results, selectResult]);\n  useEffect(() => {\n    document.addEventListener('keydown', handleKeyDown, false);\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [handleKeyDown]);\n  if (searching) {\n    return React.createElement(ResultsContainer, {\n      popupResults: popupResults\n    }, SearchLoading ? React.createElement(SearchLoading, null) : React.createElement(\"div\", {\n      className: 'str-chat__channel-search-container-searching',\n      \"data-testid\": 'search-in-progress-indicator'\n    }, t('Searching...')));\n  }\n  if (!results.length) {\n    return React.createElement(ResultsContainer, {\n      popupResults: popupResults\n    }, React.createElement(SearchEmpty, null));\n  }\n  return React.createElement(ResultsContainer, {\n    popupResults: popupResults\n  }, React.createElement(SearchResultsHeader, {\n    results: results\n  }), React.createElement(SearchResultsList, {\n    focusedUser: focusedResult,\n    results: results,\n    SearchResultItem: SearchResultItem,\n    selectResult: selectResult\n  }));\n};","map":{"version":3,"names":["React","useCallback","useEffect","useState","clsx","SearchIcon","ChannelPreview","isChannel","Avatar","useTranslationContext","DefaultSearchEmpty","t","createElement","className","DefaultSearchResultsHeader","_ref","results","count","length","DefaultSearchResultsList","props","focusedUser","SearchResultItem","selectResult","Fragment","map","result","index","key","DefaultSearchResultItem","focused","channel","onSelect","concat","name","onClick","role","image","id","user","ResultsContainer","_ref2","children","popupResults","SearchResults","SearchEmpty","searching","SearchLoading","SearchResultsHeader","SearchResultsList","focusedResult","setFocusedResult","handleKeyDown","event","prevFocused","undefined","preventDefault","document","addEventListener","removeEventListener"],"sources":["/tmp/daft-chat-temp/node_modules/stream-chat-react/dist/components/ChannelSearch/SearchResults.js"],"sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { SearchIcon } from './icons';\nimport { ChannelPreview } from '../ChannelPreview';\nimport { isChannel } from './utils';\nimport { Avatar } from '../Avatar';\nimport { useTranslationContext } from '../../context';\nconst DefaultSearchEmpty = () => {\n    const { t } = useTranslationContext('SearchResults');\n    return (React.createElement(\"div\", { \"aria-live\": 'polite', className: 'str-chat__channel-search-container-empty' },\n        React.createElement(SearchIcon, null),\n        t('No results found')));\n};\nconst DefaultSearchResultsHeader = ({ results }) => {\n    const { t } = useTranslationContext('SearchResultsHeader');\n    return (React.createElement(\"div\", { className: 'str-chat__channel-search-results-header', \"data-testid\": 'channel-search-results-header' }, t('searchResultsCount', {\n        count: results.length,\n    })));\n};\nconst DefaultSearchResultsList = (props) => {\n    const { focusedUser, results, SearchResultItem, selectResult } = props;\n    return (React.createElement(React.Fragment, null, results.map((result, index) => (React.createElement(SearchResultItem, { focusedUser: focusedUser, index: index, key: index, result: result, selectResult: selectResult })))));\n};\nconst DefaultSearchResultItem = (props) => {\n    const { focusedUser, index, result, selectResult } = props;\n    const focused = focusedUser === index;\n    const className = clsx('str-chat__channel-search-result', focused && 'str-chat__channel-search-result--focused');\n    if (isChannel(result)) {\n        const channel = result;\n        return (React.createElement(ChannelPreview, { channel: channel, className: className, onSelect: () => selectResult(channel) }));\n    }\n    else {\n        return (React.createElement(\"button\", { \"aria-label\": `Select User Channel: ${result.name || ''}`, className: className, \"data-testid\": 'channel-search-result-user', onClick: () => selectResult(result), role: 'option' },\n            React.createElement(Avatar, { className: 'str-chat__avatar--channel-preview', image: result.image, name: result.name || result.id, user: result }),\n            React.createElement(\"div\", { className: 'str-chat__channel-search-result--display-name' }, result.name || result.id)));\n    }\n};\nconst ResultsContainer = ({ children, popupResults, }) => {\n    const { t } = useTranslationContext('ResultsContainer');\n    return (React.createElement(\"div\", { \"aria-label\": t('aria/Channel search results'), className: clsx(`str-chat__channel-search-result-list`, popupResults ? 'popup' : 'inline') }, children));\n};\nexport const SearchResults = (props) => {\n    const { popupResults, results, SearchEmpty = DefaultSearchEmpty, searching, SearchLoading, SearchResultItem = DefaultSearchResultItem, SearchResultsHeader = DefaultSearchResultsHeader, SearchResultsList = DefaultSearchResultsList, selectResult, } = props;\n    const { t } = useTranslationContext('SearchResults');\n    const [focusedResult, setFocusedResult] = useState();\n    const handleKeyDown = useCallback((event) => {\n        if (event.key === 'ArrowUp') {\n            setFocusedResult((prevFocused) => {\n                if (prevFocused === undefined)\n                    return 0;\n                return prevFocused === 0 ? results.length - 1 : prevFocused - 1;\n            });\n        }\n        if (event.key === 'ArrowDown') {\n            setFocusedResult((prevFocused) => {\n                if (prevFocused === undefined)\n                    return 0;\n                return prevFocused === results.length - 1 ? 0 : prevFocused + 1;\n            });\n        }\n        if (event.key === 'Enter') {\n            event.preventDefault();\n            setFocusedResult((prevFocused) => {\n                if (typeof prevFocused !== 'undefined') {\n                    selectResult(results[prevFocused]);\n                    return undefined;\n                }\n                return prevFocused;\n            });\n        }\n    }, [results, selectResult]);\n    useEffect(() => {\n        document.addEventListener('keydown', handleKeyDown, false);\n        return () => document.removeEventListener('keydown', handleKeyDown);\n    }, [handleKeyDown]);\n    if (searching) {\n        return (React.createElement(ResultsContainer, { popupResults: popupResults }, SearchLoading ? (React.createElement(SearchLoading, null)) : (React.createElement(\"div\", { className: 'str-chat__channel-search-container-searching', \"data-testid\": 'search-in-progress-indicator' }, t('Searching...')))));\n    }\n    if (!results.length) {\n        return (React.createElement(ResultsContainer, { popupResults: popupResults },\n            React.createElement(SearchEmpty, null)));\n    }\n    return (React.createElement(ResultsContainer, { popupResults: popupResults },\n        React.createElement(SearchResultsHeader, { results: results }),\n        React.createElement(SearchResultsList, { focusedUser: focusedResult, results: results, SearchResultItem: SearchResultItem, selectResult: selectResult })));\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}