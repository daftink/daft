{"ast":null,"code":"import { useCallback, useLayoutEffect, useRef, useState } from 'react';\nimport { useMessageListScrollManager } from './useMessageListScrollManager';\nexport const useScrollLocationLogic = params => {\n  const {\n    hasMoreNewer,\n    listElement,\n    loadMoreScrollThreshold,\n    messages = [],\n    scrolledUpThreshold = 200,\n    suppressAutoscroll\n  } = params;\n  const [hasNewMessages, setHasNewMessages] = useState(false);\n  const [wrapperRect, setWrapperRect] = useState();\n  const [isMessageListScrolledToBottom, setIsMessageListScrolledToBottom] = useState(true);\n  const closeToBottom = useRef(false);\n  const closeToTop = useRef(false);\n  const scrollToBottom = useCallback(() => {\n    if (!(listElement !== null && listElement !== void 0 && listElement.scrollTo) || hasMoreNewer || suppressAutoscroll) {\n      return;\n    }\n    listElement.scrollTo({\n      top: listElement.scrollHeight\n    });\n    setHasNewMessages(false);\n  }, [listElement, hasMoreNewer, suppressAutoscroll]);\n  useLayoutEffect(() => {\n    if (listElement) {\n      setWrapperRect(listElement.getBoundingClientRect());\n      scrollToBottom();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [listElement, hasMoreNewer]);\n  const updateScrollTop = useMessageListScrollManager({\n    loadMoreScrollThreshold,\n    messages,\n    onScrollBy: scrollBy => {\n      listElement === null || listElement === void 0 || listElement.scrollBy({\n        top: scrollBy\n      });\n    },\n    scrollContainerMeasures: () => ({\n      offsetHeight: (listElement === null || listElement === void 0 ? void 0 : listElement.offsetHeight) || 0,\n      scrollHeight: (listElement === null || listElement === void 0 ? void 0 : listElement.scrollHeight) || 0\n    }),\n    scrolledUpThreshold,\n    scrollToBottom,\n    showNewMessages: () => setHasNewMessages(true)\n  });\n  const onScroll = useCallback(event => {\n    const element = event.target;\n    const scrollTop = element.scrollTop;\n    updateScrollTop(scrollTop);\n    const offsetHeight = element.offsetHeight;\n    const scrollHeight = element.scrollHeight;\n    const prevCloseToBottom = closeToBottom.current;\n    closeToBottom.current = scrollHeight - (scrollTop + offsetHeight) < scrolledUpThreshold;\n    closeToTop.current = scrollTop < scrolledUpThreshold;\n    if (closeToBottom.current) {\n      setHasNewMessages(false);\n    }\n    if (prevCloseToBottom && !closeToBottom.current) {\n      setIsMessageListScrolledToBottom(false);\n    } else if (!prevCloseToBottom && closeToBottom.current) {\n      setIsMessageListScrolledToBottom(true);\n    }\n  }, [updateScrollTop, closeToTop, closeToBottom, scrolledUpThreshold]);\n  return {\n    hasNewMessages,\n    isMessageListScrolledToBottom,\n    onScroll,\n    scrollToBottom,\n    wrapperRect\n  };\n};","map":{"version":3,"names":["useCallback","useLayoutEffect","useRef","useState","useMessageListScrollManager","useScrollLocationLogic","params","hasMoreNewer","listElement","loadMoreScrollThreshold","messages","scrolledUpThreshold","suppressAutoscroll","hasNewMessages","setHasNewMessages","wrapperRect","setWrapperRect","isMessageListScrolledToBottom","setIsMessageListScrolledToBottom","closeToBottom","closeToTop","scrollToBottom","scrollTo","top","scrollHeight","getBoundingClientRect","updateScrollTop","onScrollBy","scrollBy","scrollContainerMeasures","offsetHeight","showNewMessages","onScroll","event","element","target","scrollTop","prevCloseToBottom","current"],"sources":["/tmp/daft-chat-temp/node_modules/stream-chat-react/dist/components/MessageList/hooks/MessageList/useScrollLocationLogic.js"],"sourcesContent":["import { useCallback, useLayoutEffect, useRef, useState } from 'react';\nimport { useMessageListScrollManager } from './useMessageListScrollManager';\nexport const useScrollLocationLogic = (params) => {\n    const { hasMoreNewer, listElement, loadMoreScrollThreshold, messages = [], scrolledUpThreshold = 200, suppressAutoscroll, } = params;\n    const [hasNewMessages, setHasNewMessages] = useState(false);\n    const [wrapperRect, setWrapperRect] = useState();\n    const [isMessageListScrolledToBottom, setIsMessageListScrolledToBottom] = useState(true);\n    const closeToBottom = useRef(false);\n    const closeToTop = useRef(false);\n    const scrollToBottom = useCallback(() => {\n        if (!listElement?.scrollTo || hasMoreNewer || suppressAutoscroll) {\n            return;\n        }\n        listElement.scrollTo({\n            top: listElement.scrollHeight,\n        });\n        setHasNewMessages(false);\n    }, [listElement, hasMoreNewer, suppressAutoscroll]);\n    useLayoutEffect(() => {\n        if (listElement) {\n            setWrapperRect(listElement.getBoundingClientRect());\n            scrollToBottom();\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [listElement, hasMoreNewer]);\n    const updateScrollTop = useMessageListScrollManager({\n        loadMoreScrollThreshold,\n        messages,\n        onScrollBy: (scrollBy) => {\n            listElement?.scrollBy({ top: scrollBy });\n        },\n        scrollContainerMeasures: () => ({\n            offsetHeight: listElement?.offsetHeight || 0,\n            scrollHeight: listElement?.scrollHeight || 0,\n        }),\n        scrolledUpThreshold,\n        scrollToBottom,\n        showNewMessages: () => setHasNewMessages(true),\n    });\n    const onScroll = useCallback((event) => {\n        const element = event.target;\n        const scrollTop = element.scrollTop;\n        updateScrollTop(scrollTop);\n        const offsetHeight = element.offsetHeight;\n        const scrollHeight = element.scrollHeight;\n        const prevCloseToBottom = closeToBottom.current;\n        closeToBottom.current =\n            scrollHeight - (scrollTop + offsetHeight) < scrolledUpThreshold;\n        closeToTop.current = scrollTop < scrolledUpThreshold;\n        if (closeToBottom.current) {\n            setHasNewMessages(false);\n        }\n        if (prevCloseToBottom && !closeToBottom.current) {\n            setIsMessageListScrolledToBottom(false);\n        }\n        else if (!prevCloseToBottom && closeToBottom.current) {\n            setIsMessageListScrolledToBottom(true);\n        }\n    }, [updateScrollTop, closeToTop, closeToBottom, scrolledUpThreshold]);\n    return {\n        hasNewMessages,\n        isMessageListScrolledToBottom,\n        onScroll,\n        scrollToBottom,\n        wrapperRect,\n    };\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}