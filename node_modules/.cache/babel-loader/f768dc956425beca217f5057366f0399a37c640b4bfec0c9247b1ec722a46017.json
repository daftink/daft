{"ast":null,"code":"import React, { useEffect } from 'react';\nimport { LoadingIndicator } from '../Loading';\nimport { deprecationAndReplacementWarning } from '../../utils/deprecationWarning';\nimport { useTranslationContext } from '../../context';\nconst UnMemoizedLoadMoreButton = _ref => {\n  let {\n    children,\n    isLoading,\n    onClick,\n    refreshing\n  } = _ref;\n  const {\n    t\n  } = useTranslationContext('UnMemoizedLoadMoreButton');\n  const childrenOrDefaultString = children !== null && children !== void 0 ? children : t('Load more');\n  const loading = typeof isLoading !== 'undefined' ? isLoading : refreshing;\n  useEffect(() => {\n    deprecationAndReplacementWarning([[{\n      refreshing\n    }, {\n      isLoading\n    }]], 'LoadMoreButton');\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return React.createElement(\"div\", {\n    className: 'str-chat__load-more-button'\n  }, React.createElement(\"button\", {\n    \"aria-label\": t('aria/Load More Channels'),\n    className: 'str-chat__load-more-button__button str-chat__cta-button',\n    \"data-testid\": 'load-more-button',\n    disabled: loading,\n    onClick: onClick\n  }, loading ? React.createElement(LoadingIndicator, null) : childrenOrDefaultString));\n};\nexport const LoadMoreButton = React.memo(UnMemoizedLoadMoreButton);","map":{"version":3,"names":["React","useEffect","LoadingIndicator","deprecationAndReplacementWarning","useTranslationContext","UnMemoizedLoadMoreButton","_ref","children","isLoading","onClick","refreshing","t","childrenOrDefaultString","loading","createElement","className","disabled","LoadMoreButton","memo"],"sources":["/tmp/daft-chat-temp/node_modules/stream-chat-react/dist/components/LoadMore/LoadMoreButton.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { LoadingIndicator } from '../Loading';\nimport { deprecationAndReplacementWarning } from '../../utils/deprecationWarning';\nimport { useTranslationContext } from '../../context';\nconst UnMemoizedLoadMoreButton = ({ children, isLoading, onClick, refreshing, }) => {\n    const { t } = useTranslationContext('UnMemoizedLoadMoreButton');\n    const childrenOrDefaultString = children ?? t('Load more');\n    const loading = typeof isLoading !== 'undefined' ? isLoading : refreshing;\n    useEffect(() => {\n        deprecationAndReplacementWarning([[{ refreshing }, { isLoading }]], 'LoadMoreButton');\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    return (React.createElement(\"div\", { className: 'str-chat__load-more-button' },\n        React.createElement(\"button\", { \"aria-label\": t('aria/Load More Channels'), className: 'str-chat__load-more-button__button str-chat__cta-button', \"data-testid\": 'load-more-button', disabled: loading, onClick: onClick }, loading ? React.createElement(LoadingIndicator, null) : childrenOrDefaultString)));\n};\nexport const LoadMoreButton = React.memo(UnMemoizedLoadMoreButton);\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,gBAAgB,QAAQ,YAAY;AAC7C,SAASC,gCAAgC,QAAQ,gCAAgC;AACjF,SAASC,qBAAqB,QAAQ,eAAe;AACrD,MAAMC,wBAAwB,GAAGC,IAAA,IAAmD;EAAA,IAAlD;IAAEC,QAAQ;IAAEC,SAAS;IAAEC,OAAO;IAAEC;EAAY,CAAC,GAAAJ,IAAA;EAC3E,MAAM;IAAEK;EAAE,CAAC,GAAGP,qBAAqB,CAAC,0BAA0B,CAAC;EAC/D,MAAMQ,uBAAuB,GAAGL,QAAQ,aAARA,QAAQ,cAARA,QAAQ,GAAII,CAAC,CAAC,WAAW,CAAC;EAC1D,MAAME,OAAO,GAAG,OAAOL,SAAS,KAAK,WAAW,GAAGA,SAAS,GAAGE,UAAU;EACzET,SAAS,CAAC,MAAM;IACZE,gCAAgC,CAAC,CAAC,CAAC;MAAEO;IAAW,CAAC,EAAE;MAAEF;IAAU,CAAC,CAAC,CAAC,EAAE,gBAAgB,CAAC;IACrF;EACJ,CAAC,EAAE,EAAE,CAAC;EACN,OAAQR,KAAK,CAACc,aAAa,CAAC,KAAK,EAAE;IAAEC,SAAS,EAAE;EAA6B,CAAC,EAC1Ef,KAAK,CAACc,aAAa,CAAC,QAAQ,EAAE;IAAE,YAAY,EAAEH,CAAC,CAAC,yBAAyB,CAAC;IAAEI,SAAS,EAAE,yDAAyD;IAAE,aAAa,EAAE,kBAAkB;IAAEC,QAAQ,EAAEH,OAAO;IAAEJ,OAAO,EAAEA;EAAQ,CAAC,EAAEI,OAAO,GAAGb,KAAK,CAACc,aAAa,CAACZ,gBAAgB,EAAE,IAAI,CAAC,GAAGU,uBAAuB,CAAC,CAAC;AACrT,CAAC;AACD,OAAO,MAAMK,cAAc,GAAGjB,KAAK,CAACkB,IAAI,CAACb,wBAAwB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}