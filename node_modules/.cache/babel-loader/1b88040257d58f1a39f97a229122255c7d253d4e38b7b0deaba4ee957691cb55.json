{"ast":null,"code":"import React from 'react';\nimport { DownloadButton, FileSizeIndicator, PlayButton, ProgressBar } from './components';\nimport { useAudioController } from './hooks/useAudioController';\nconst UnMemoizedAudio = props => {\n  const {\n    og: {\n      asset_url,\n      file_size,\n      mime_type,\n      title\n    }\n  } = props;\n  const {\n    audioRef,\n    isPlaying,\n    progress,\n    seek,\n    togglePlay\n  } = useAudioController({\n    mimeType: mime_type\n  });\n  if (!asset_url) return null;\n  const dataTestId = 'audio-widget';\n  const rootClassName = 'str-chat__message-attachment-audio-widget';\n  return React.createElement(\"div\", {\n    className: rootClassName,\n    \"data-testid\": dataTestId\n  }, React.createElement(\"audio\", {\n    ref: audioRef\n  }, React.createElement(\"source\", {\n    \"data-testid\": 'audio-source',\n    src: asset_url,\n    type: 'audio/mp3'\n  })), React.createElement(\"div\", {\n    className: 'str-chat__message-attachment-audio-widget--play-controls'\n  }, React.createElement(PlayButton, {\n    isPlaying: isPlaying,\n    onClick: togglePlay\n  })), React.createElement(\"div\", {\n    className: 'str-chat__message-attachment-audio-widget--text'\n  }, React.createElement(\"div\", {\n    className: 'str-chat__message-attachment-audio-widget--text-first-row'\n  }, React.createElement(\"div\", {\n    className: 'str-chat__message-attachment-audio-widget--title'\n  }, title), React.createElement(DownloadButton, {\n    assetUrl: asset_url\n  })), React.createElement(\"div\", {\n    className: 'str-chat__message-attachment-audio-widget--text-second-row'\n  }, React.createElement(FileSizeIndicator, {\n    fileSize: file_size\n  }), React.createElement(ProgressBar, {\n    onClick: seek,\n    progress: progress\n  }))));\n};\n/**\n * Audio attachment with play/pause button and progress bar\n */\nexport const Audio = React.memo(UnMemoizedAudio);","map":{"version":3,"names":["React","DownloadButton","FileSizeIndicator","PlayButton","ProgressBar","useAudioController","UnMemoizedAudio","props","og","asset_url","file_size","mime_type","title","audioRef","isPlaying","progress","seek","togglePlay","mimeType","dataTestId","rootClassName","createElement","className","ref","src","type","onClick","assetUrl","fileSize","Audio","memo"],"sources":["/tmp/daft-chat-temp/node_modules/stream-chat-react/dist/components/Attachment/Audio.js"],"sourcesContent":["import React from 'react';\nimport { DownloadButton, FileSizeIndicator, PlayButton, ProgressBar } from './components';\nimport { useAudioController } from './hooks/useAudioController';\nconst UnMemoizedAudio = (props) => {\n    const { og: { asset_url, file_size, mime_type, title }, } = props;\n    const { audioRef, isPlaying, progress, seek, togglePlay } = useAudioController({\n        mimeType: mime_type,\n    });\n    if (!asset_url)\n        return null;\n    const dataTestId = 'audio-widget';\n    const rootClassName = 'str-chat__message-attachment-audio-widget';\n    return (React.createElement(\"div\", { className: rootClassName, \"data-testid\": dataTestId },\n        React.createElement(\"audio\", { ref: audioRef },\n            React.createElement(\"source\", { \"data-testid\": 'audio-source', src: asset_url, type: 'audio/mp3' })),\n        React.createElement(\"div\", { className: 'str-chat__message-attachment-audio-widget--play-controls' },\n            React.createElement(PlayButton, { isPlaying: isPlaying, onClick: togglePlay })),\n        React.createElement(\"div\", { className: 'str-chat__message-attachment-audio-widget--text' },\n            React.createElement(\"div\", { className: 'str-chat__message-attachment-audio-widget--text-first-row' },\n                React.createElement(\"div\", { className: 'str-chat__message-attachment-audio-widget--title' }, title),\n                React.createElement(DownloadButton, { assetUrl: asset_url })),\n            React.createElement(\"div\", { className: 'str-chat__message-attachment-audio-widget--text-second-row' },\n                React.createElement(FileSizeIndicator, { fileSize: file_size }),\n                React.createElement(ProgressBar, { onClick: seek, progress: progress })))));\n};\n/**\n * Audio attachment with play/pause button and progress bar\n */\nexport const Audio = React.memo(UnMemoizedAudio);\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,EAAEC,iBAAiB,EAAEC,UAAU,EAAEC,WAAW,QAAQ,cAAc;AACzF,SAASC,kBAAkB,QAAQ,4BAA4B;AAC/D,MAAMC,eAAe,GAAIC,KAAK,IAAK;EAC/B,MAAM;IAAEC,EAAE,EAAE;MAAEC,SAAS;MAAEC,SAAS;MAAEC,SAAS;MAAEC;IAAM;EAAG,CAAC,GAAGL,KAAK;EACjE,MAAM;IAAEM,QAAQ;IAAEC,SAAS;IAAEC,QAAQ;IAAEC,IAAI;IAAEC;EAAW,CAAC,GAAGZ,kBAAkB,CAAC;IAC3Ea,QAAQ,EAAEP;EACd,CAAC,CAAC;EACF,IAAI,CAACF,SAAS,EACV,OAAO,IAAI;EACf,MAAMU,UAAU,GAAG,cAAc;EACjC,MAAMC,aAAa,GAAG,2CAA2C;EACjE,OAAQpB,KAAK,CAACqB,aAAa,CAAC,KAAK,EAAE;IAAEC,SAAS,EAAEF,aAAa;IAAE,aAAa,EAAED;EAAW,CAAC,EACtFnB,KAAK,CAACqB,aAAa,CAAC,OAAO,EAAE;IAAEE,GAAG,EAAEV;EAAS,CAAC,EAC1Cb,KAAK,CAACqB,aAAa,CAAC,QAAQ,EAAE;IAAE,aAAa,EAAE,cAAc;IAAEG,GAAG,EAAEf,SAAS;IAAEgB,IAAI,EAAE;EAAY,CAAC,CAAC,CAAC,EACxGzB,KAAK,CAACqB,aAAa,CAAC,KAAK,EAAE;IAAEC,SAAS,EAAE;EAA2D,CAAC,EAChGtB,KAAK,CAACqB,aAAa,CAAClB,UAAU,EAAE;IAAEW,SAAS,EAAEA,SAAS;IAAEY,OAAO,EAAET;EAAW,CAAC,CAAC,CAAC,EACnFjB,KAAK,CAACqB,aAAa,CAAC,KAAK,EAAE;IAAEC,SAAS,EAAE;EAAkD,CAAC,EACvFtB,KAAK,CAACqB,aAAa,CAAC,KAAK,EAAE;IAAEC,SAAS,EAAE;EAA4D,CAAC,EACjGtB,KAAK,CAACqB,aAAa,CAAC,KAAK,EAAE;IAAEC,SAAS,EAAE;EAAmD,CAAC,EAAEV,KAAK,CAAC,EACpGZ,KAAK,CAACqB,aAAa,CAACpB,cAAc,EAAE;IAAE0B,QAAQ,EAAElB;EAAU,CAAC,CAAC,CAAC,EACjET,KAAK,CAACqB,aAAa,CAAC,KAAK,EAAE;IAAEC,SAAS,EAAE;EAA6D,CAAC,EAClGtB,KAAK,CAACqB,aAAa,CAACnB,iBAAiB,EAAE;IAAE0B,QAAQ,EAAElB;EAAU,CAAC,CAAC,EAC/DV,KAAK,CAACqB,aAAa,CAACjB,WAAW,EAAE;IAAEsB,OAAO,EAAEV,IAAI;IAAED,QAAQ,EAAEA;EAAS,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1F,CAAC;AACD;AACA;AACA;AACA,OAAO,MAAMc,KAAK,GAAG7B,KAAK,CAAC8B,IAAI,CAACxB,eAAe,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}