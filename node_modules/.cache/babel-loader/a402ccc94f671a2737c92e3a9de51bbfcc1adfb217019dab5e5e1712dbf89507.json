{"ast":null,"code":"import _objectSpread from \"/tmp/daft-chat-temp/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/tmp/daft-chat-temp/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"message\", \"open\"];\nimport React from 'react';\nimport clsx from 'clsx';\nimport { useComponentContext, useMessageContext, useTranslationContext } from '../../context';\nimport { Timestamp as DefaultTimestamp } from './Timestamp';\nimport { isMessageEdited } from './utils';\nexport function MessageEditedTimestamp(_ref) {\n  let {\n      message: propMessage,\n      open\n    } = _ref,\n    timestampProps = _objectWithoutProperties(_ref, _excluded);\n  const {\n    t\n  } = useTranslationContext('MessageEditedTimestamp');\n  const {\n    message: contextMessage\n  } = useMessageContext('MessageEditedTimestamp');\n  const {\n    Timestamp = DefaultTimestamp\n  } = useComponentContext('MessageEditedTimestamp');\n  const message = propMessage || contextMessage;\n  if (!isMessageEdited(message)) {\n    return null;\n  }\n  return React.createElement(\"div\", {\n    className: clsx('str-chat__message-edited-timestamp', open ? 'str-chat__message-edited-timestamp--open' : 'str-chat__message-edited-timestamp--collapsed'),\n    \"data-testid\": 'message-edited-timestamp'\n  }, t('Edited'), ' ', React.createElement(Timestamp, _objectSpread({\n    timestamp: message.message_text_updated_at\n  }, timestampProps)));\n}","map":{"version":3,"names":["React","clsx","useComponentContext","useMessageContext","useTranslationContext","Timestamp","DefaultTimestamp","isMessageEdited","MessageEditedTimestamp","_ref","message","propMessage","open","timestampProps","_objectWithoutProperties","_excluded","t","contextMessage","createElement","className","_objectSpread","timestamp","message_text_updated_at"],"sources":["/tmp/daft-chat-temp/node_modules/stream-chat-react/dist/components/Message/MessageEditedTimestamp.js"],"sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport { useComponentContext, useMessageContext, useTranslationContext, } from '../../context';\nimport { Timestamp as DefaultTimestamp } from './Timestamp';\nimport { isMessageEdited } from './utils';\nexport function MessageEditedTimestamp({ message: propMessage, open, ...timestampProps }) {\n    const { t } = useTranslationContext('MessageEditedTimestamp');\n    const { message: contextMessage } = useMessageContext('MessageEditedTimestamp');\n    const { Timestamp = DefaultTimestamp } = useComponentContext('MessageEditedTimestamp');\n    const message = propMessage || contextMessage;\n    if (!isMessageEdited(message)) {\n        return null;\n    }\n    return (React.createElement(\"div\", { className: clsx('str-chat__message-edited-timestamp', open\n            ? 'str-chat__message-edited-timestamp--open'\n            : 'str-chat__message-edited-timestamp--collapsed'), \"data-testid\": 'message-edited-timestamp' },\n        t('Edited'),\n        ' ',\n        React.createElement(Timestamp, { timestamp: message.message_text_updated_at, ...timestampProps })));\n}\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,MAAM;AACvB,SAASC,mBAAmB,EAAEC,iBAAiB,EAAEC,qBAAqB,QAAS,eAAe;AAC9F,SAASC,SAAS,IAAIC,gBAAgB,QAAQ,aAAa;AAC3D,SAASC,eAAe,QAAQ,SAAS;AACzC,OAAO,SAASC,sBAAsBA,CAAAC,IAAA,EAAoD;EAAA,IAAnD;MAAEC,OAAO,EAAEC,WAAW;MAAEC;IAAwB,CAAC,GAAAH,IAAA;IAAhBI,cAAc,GAAAC,wBAAA,CAAAL,IAAA,EAAAM,SAAA;EAClF,MAAM;IAAEC;EAAE,CAAC,GAAGZ,qBAAqB,CAAC,wBAAwB,CAAC;EAC7D,MAAM;IAAEM,OAAO,EAAEO;EAAe,CAAC,GAAGd,iBAAiB,CAAC,wBAAwB,CAAC;EAC/E,MAAM;IAAEE,SAAS,GAAGC;EAAiB,CAAC,GAAGJ,mBAAmB,CAAC,wBAAwB,CAAC;EACtF,MAAMQ,OAAO,GAAGC,WAAW,IAAIM,cAAc;EAC7C,IAAI,CAACV,eAAe,CAACG,OAAO,CAAC,EAAE;IAC3B,OAAO,IAAI;EACf;EACA,OAAQV,KAAK,CAACkB,aAAa,CAAC,KAAK,EAAE;IAAEC,SAAS,EAAElB,IAAI,CAAC,oCAAoC,EAAEW,IAAI,GACrF,0CAA0C,GAC1C,+CAA+C,CAAC;IAAE,aAAa,EAAE;EAA2B,CAAC,EACnGI,CAAC,CAAC,QAAQ,CAAC,EACX,GAAG,EACHhB,KAAK,CAACkB,aAAa,CAACb,SAAS,EAAAe,aAAA;IAAIC,SAAS,EAAEX,OAAO,CAACY;EAAuB,GAAKT,cAAc,CAAE,CAAC,CAAC;AAC1G","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}