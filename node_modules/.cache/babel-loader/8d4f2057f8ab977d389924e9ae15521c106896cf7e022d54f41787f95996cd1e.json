{"ast":null,"code":"import _objectWithoutProperties from \"/tmp/daft-chat-temp/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"AppMenu\", \"ClearInputIcon\", \"ExitSearchIcon\", \"MenuIcon\", \"placeholder\", \"popupResults\", \"SearchBar\", \"SearchEmpty\", \"SearchInput\", \"SearchInputIcon\", \"SearchLoading\", \"SearchResultItem\", \"SearchResultsHeader\", \"SearchResultsList\"];\nimport clsx from 'clsx';\nimport React from 'react';\nimport { useChannelSearch } from './hooks/useChannelSearch';\nimport { SearchBar as DefaultSearchBar } from './SearchBar';\nimport { SearchInput as DefaultSearchInput } from './SearchInput';\nimport { SearchResults } from './SearchResults';\nconst UnMemoizedChannelSearch = props => {\n  const {\n      AppMenu,\n      ClearInputIcon,\n      ExitSearchIcon,\n      MenuIcon,\n      placeholder,\n      popupResults = false,\n      SearchBar = DefaultSearchBar,\n      SearchEmpty,\n      SearchInput = DefaultSearchInput,\n      SearchInputIcon,\n      SearchLoading,\n      SearchResultItem,\n      SearchResultsHeader,\n      SearchResultsList\n    } = props,\n    channelSearchParams = _objectWithoutProperties(props, _excluded);\n  const {\n    activateSearch,\n    clearState,\n    exitSearch,\n    inputIsFocused,\n    inputRef,\n    onSearch,\n    query,\n    results,\n    searchBarRef,\n    searching,\n    selectResult\n  } = useChannelSearch(channelSearchParams);\n  return React.createElement(\"div\", {\n    className: clsx('str-chat__channel-search', popupResults ? 'str-chat__channel-search--popup' : 'str-chat__channel-search--inline', {\n      'str-chat__channel-search--with-results': results.length > 0\n    }),\n    \"data-testid\": 'channel-search'\n  }, React.createElement(SearchBar, {\n    activateSearch: activateSearch,\n    AppMenu: AppMenu,\n    ClearInputIcon: ClearInputIcon,\n    clearState: clearState,\n    disabled: channelSearchParams.disabled,\n    exitSearch: exitSearch,\n    ExitSearchIcon: ExitSearchIcon,\n    inputIsFocused: inputIsFocused,\n    inputRef: inputRef,\n    MenuIcon: MenuIcon,\n    onSearch: onSearch,\n    placeholder: placeholder,\n    query: query,\n    searchBarRef: searchBarRef,\n    SearchInput: SearchInput,\n    SearchInputIcon: SearchInputIcon\n  }), query && React.createElement(SearchResults, {\n    popupResults: popupResults,\n    results: results,\n    SearchEmpty: SearchEmpty,\n    searching: searching,\n    SearchLoading: SearchLoading,\n    SearchResultItem: SearchResultItem,\n    SearchResultsHeader: SearchResultsHeader,\n    SearchResultsList: SearchResultsList,\n    selectResult: selectResult\n  }));\n};\n/**\n * The ChannelSearch component makes a query users call and displays the results in a list.\n * Clicking on a list item will navigate you into a channel with the selected user. It can be used\n * on its own or added to the ChannelList component by setting the `showChannelSearch` prop to true.\n */\nexport const ChannelSearch = React.memo(UnMemoizedChannelSearch);","map":{"version":3,"names":["clsx","React","useChannelSearch","SearchBar","DefaultSearchBar","SearchInput","DefaultSearchInput","SearchResults","UnMemoizedChannelSearch","props","AppMenu","ClearInputIcon","ExitSearchIcon","MenuIcon","placeholder","popupResults","SearchEmpty","SearchInputIcon","SearchLoading","SearchResultItem","SearchResultsHeader","SearchResultsList","channelSearchParams","_objectWithoutProperties","_excluded","activateSearch","clearState","exitSearch","inputIsFocused","inputRef","onSearch","query","results","searchBarRef","searching","selectResult","createElement","className","length","disabled","ChannelSearch","memo"],"sources":["/tmp/daft-chat-temp/node_modules/stream-chat-react/dist/components/ChannelSearch/ChannelSearch.js"],"sourcesContent":["import clsx from 'clsx';\nimport React from 'react';\nimport { useChannelSearch } from './hooks/useChannelSearch';\nimport { SearchBar as DefaultSearchBar } from './SearchBar';\nimport { SearchInput as DefaultSearchInput } from './SearchInput';\nimport { SearchResults } from './SearchResults';\nconst UnMemoizedChannelSearch = (props) => {\n    const { AppMenu, ClearInputIcon, ExitSearchIcon, MenuIcon, placeholder, popupResults = false, SearchBar = DefaultSearchBar, SearchEmpty, SearchInput = DefaultSearchInput, SearchInputIcon, SearchLoading, SearchResultItem, SearchResultsHeader, SearchResultsList, ...channelSearchParams } = props;\n    const { activateSearch, clearState, exitSearch, inputIsFocused, inputRef, onSearch, query, results, searchBarRef, searching, selectResult, } = useChannelSearch(channelSearchParams);\n    return (React.createElement(\"div\", { className: clsx('str-chat__channel-search', popupResults\n            ? 'str-chat__channel-search--popup'\n            : 'str-chat__channel-search--inline', {\n            'str-chat__channel-search--with-results': results.length > 0,\n        }), \"data-testid\": 'channel-search' },\n        React.createElement(SearchBar, { activateSearch: activateSearch, AppMenu: AppMenu, ClearInputIcon: ClearInputIcon, clearState: clearState, disabled: channelSearchParams.disabled, exitSearch: exitSearch, ExitSearchIcon: ExitSearchIcon, inputIsFocused: inputIsFocused, inputRef: inputRef, MenuIcon: MenuIcon, onSearch: onSearch, placeholder: placeholder, query: query, searchBarRef: searchBarRef, SearchInput: SearchInput, SearchInputIcon: SearchInputIcon }),\n        query && (React.createElement(SearchResults, { popupResults: popupResults, results: results, SearchEmpty: SearchEmpty, searching: searching, SearchLoading: SearchLoading, SearchResultItem: SearchResultItem, SearchResultsHeader: SearchResultsHeader, SearchResultsList: SearchResultsList, selectResult: selectResult }))));\n};\n/**\n * The ChannelSearch component makes a query users call and displays the results in a list.\n * Clicking on a list item will navigate you into a channel with the selected user. It can be used\n * on its own or added to the ChannelList component by setting the `showChannelSearch` prop to true.\n */\nexport const ChannelSearch = React.memo(UnMemoizedChannelSearch);\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,MAAM;AACvB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,gBAAgB,QAAQ,0BAA0B;AAC3D,SAASC,SAAS,IAAIC,gBAAgB,QAAQ,aAAa;AAC3D,SAASC,WAAW,IAAIC,kBAAkB,QAAQ,eAAe;AACjE,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,MAAMC,uBAAuB,GAAIC,KAAK,IAAK;EACvC,MAAM;MAAEC,OAAO;MAAEC,cAAc;MAAEC,cAAc;MAAEC,QAAQ;MAAEC,WAAW;MAAEC,YAAY,GAAG,KAAK;MAAEZ,SAAS,GAAGC,gBAAgB;MAAEY,WAAW;MAAEX,WAAW,GAAGC,kBAAkB;MAAEW,eAAe;MAAEC,aAAa;MAAEC,gBAAgB;MAAEC,mBAAmB;MAAEC;IAA0C,CAAC,GAAGZ,KAAK;IAA7Ba,mBAAmB,GAAAC,wBAAA,CAAKd,KAAK,EAAAe,SAAA;EACrS,MAAM;IAAEC,cAAc;IAAEC,UAAU;IAAEC,UAAU;IAAEC,cAAc;IAAEC,QAAQ;IAAEC,QAAQ;IAAEC,KAAK;IAAEC,OAAO;IAAEC,YAAY;IAAEC,SAAS;IAAEC;EAAc,CAAC,GAAGjC,gBAAgB,CAACoB,mBAAmB,CAAC;EACpL,OAAQrB,KAAK,CAACmC,aAAa,CAAC,KAAK,EAAE;IAAEC,SAAS,EAAErC,IAAI,CAAC,0BAA0B,EAAEe,YAAY,GACnF,iCAAiC,GACjC,kCAAkC,EAAE;MACtC,wCAAwC,EAAEiB,OAAO,CAACM,MAAM,GAAG;IAC/D,CAAC,CAAC;IAAE,aAAa,EAAE;EAAiB,CAAC,EACrCrC,KAAK,CAACmC,aAAa,CAACjC,SAAS,EAAE;IAAEsB,cAAc,EAAEA,cAAc;IAAEf,OAAO,EAAEA,OAAO;IAAEC,cAAc,EAAEA,cAAc;IAAEe,UAAU,EAAEA,UAAU;IAAEa,QAAQ,EAAEjB,mBAAmB,CAACiB,QAAQ;IAAEZ,UAAU,EAAEA,UAAU;IAAEf,cAAc,EAAEA,cAAc;IAAEgB,cAAc,EAAEA,cAAc;IAAEC,QAAQ,EAAEA,QAAQ;IAAEhB,QAAQ,EAAEA,QAAQ;IAAEiB,QAAQ,EAAEA,QAAQ;IAAEhB,WAAW,EAAEA,WAAW;IAAEiB,KAAK,EAAEA,KAAK;IAAEE,YAAY,EAAEA,YAAY;IAAE5B,WAAW,EAAEA,WAAW;IAAEY,eAAe,EAAEA;EAAgB,CAAC,CAAC,EACxcc,KAAK,IAAK9B,KAAK,CAACmC,aAAa,CAAC7B,aAAa,EAAE;IAAEQ,YAAY,EAAEA,YAAY;IAAEiB,OAAO,EAAEA,OAAO;IAAEhB,WAAW,EAAEA,WAAW;IAAEkB,SAAS,EAAEA,SAAS;IAAEhB,aAAa,EAAEA,aAAa;IAAEC,gBAAgB,EAAEA,gBAAgB;IAAEC,mBAAmB,EAAEA,mBAAmB;IAAEC,iBAAiB,EAAEA,iBAAiB;IAAEc,YAAY,EAAEA;EAAa,CAAC,CAAE,CAAC;AACtU,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMK,aAAa,GAAGvC,KAAK,CAACwC,IAAI,CAACjC,uBAAuB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}