{"ast":null,"code":"export const isMutableRef = ref => {\n  if (ref) {\n    return ref.current !== undefined;\n  }\n  return false;\n};\nexport const getImageDimensions = source => new Promise((resolve, reject) => {\n  const image = new Image();\n  image.addEventListener('load', () => {\n    resolve([image.width, image.height]);\n  }, {\n    once: true\n  });\n  image.addEventListener('error', () => reject(\"Couldn't load image from \".concat(source)), {\n    once: true\n  });\n  image.src = source;\n});","map":{"version":3,"names":["isMutableRef","ref","current","undefined","getImageDimensions","source","Promise","resolve","reject","image","Image","addEventListener","width","height","once","concat","src"],"sources":["/tmp/daft-chat-temp/node_modules/stream-chat-react/dist/components/Reactions/utils/utils.js"],"sourcesContent":["export const isMutableRef = (ref) => {\n    if (ref) {\n        return ref.current !== undefined;\n    }\n    return false;\n};\nexport const getImageDimensions = (source) => new Promise((resolve, reject) => {\n    const image = new Image();\n    image.addEventListener('load', () => {\n        resolve([image.width, image.height]);\n    }, { once: true });\n    image.addEventListener('error', () => reject(`Couldn't load image from ${source}`), {\n        once: true,\n    });\n    image.src = source;\n});\n"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAIC,GAAG,IAAK;EACjC,IAAIA,GAAG,EAAE;IACL,OAAOA,GAAG,CAACC,OAAO,KAAKC,SAAS;EACpC;EACA,OAAO,KAAK;AAChB,CAAC;AACD,OAAO,MAAMC,kBAAkB,GAAIC,MAAM,IAAK,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;EAC3E,MAAMC,KAAK,GAAG,IAAIC,KAAK,CAAC,CAAC;EACzBD,KAAK,CAACE,gBAAgB,CAAC,MAAM,EAAE,MAAM;IACjCJ,OAAO,CAAC,CAACE,KAAK,CAACG,KAAK,EAAEH,KAAK,CAACI,MAAM,CAAC,CAAC;EACxC,CAAC,EAAE;IAAEC,IAAI,EAAE;EAAK,CAAC,CAAC;EAClBL,KAAK,CAACE,gBAAgB,CAAC,OAAO,EAAE,MAAMH,MAAM,6BAAAO,MAAA,CAA6BV,MAAM,CAAE,CAAC,EAAE;IAChFS,IAAI,EAAE;EACV,CAAC,CAAC;EACFL,KAAK,CAACO,GAAG,GAAGX,MAAM;AACtB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}