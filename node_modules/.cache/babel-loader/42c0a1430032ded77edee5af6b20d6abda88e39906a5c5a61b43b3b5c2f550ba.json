{"ast":null,"code":"import { useEffect } from 'react';\nimport { useChatContext } from '../../../context/ChatContext';\nexport const useChannelDeletedListener = (setChannels, customHandler) => {\n  const {\n    client\n  } = useChatContext('useChannelDeletedListener');\n  useEffect(() => {\n    const handleEvent = event => {\n      if (customHandler && typeof customHandler === 'function') {\n        customHandler(setChannels, event);\n      } else {\n        setChannels(channels => {\n          const channelIndex = channels.findIndex(channel => channel.cid === event.cid);\n          if (channelIndex < 0) return [...channels];\n          // Remove the deleted channel from the list\n          channels.splice(channelIndex, 1);\n          return [...channels];\n        });\n      }\n    };\n    client.on('channel.deleted', handleEvent);\n    return () => {\n      client.off('channel.deleted', handleEvent);\n    };\n  }, [client, customHandler, setChannels]);\n};","map":{"version":3,"names":["useEffect","useChatContext","useChannelDeletedListener","setChannels","customHandler","client","handleEvent","event","channels","channelIndex","findIndex","channel","cid","splice","on","off"],"sources":["/tmp/daft-chat-temp/node_modules/stream-chat-react/dist/components/ChannelList/hooks/useChannelDeletedListener.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { useChatContext } from '../../../context/ChatContext';\nexport const useChannelDeletedListener = (setChannels, customHandler) => {\n    const { client } = useChatContext('useChannelDeletedListener');\n    useEffect(() => {\n        const handleEvent = (event) => {\n            if (customHandler && typeof customHandler === 'function') {\n                customHandler(setChannels, event);\n            }\n            else {\n                setChannels((channels) => {\n                    const channelIndex = channels.findIndex((channel) => channel.cid === event.cid);\n                    if (channelIndex < 0)\n                        return [...channels];\n                    // Remove the deleted channel from the list\n                    channels.splice(channelIndex, 1);\n                    return [...channels];\n                });\n            }\n        };\n        client.on('channel.deleted', handleEvent);\n        return () => {\n            client.off('channel.deleted', handleEvent);\n        };\n    }, [client, customHandler, setChannels]);\n};\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,cAAc,QAAQ,8BAA8B;AAC7D,OAAO,MAAMC,yBAAyB,GAAGA,CAACC,WAAW,EAAEC,aAAa,KAAK;EACrE,MAAM;IAAEC;EAAO,CAAC,GAAGJ,cAAc,CAAC,2BAA2B,CAAC;EAC9DD,SAAS,CAAC,MAAM;IACZ,MAAMM,WAAW,GAAIC,KAAK,IAAK;MAC3B,IAAIH,aAAa,IAAI,OAAOA,aAAa,KAAK,UAAU,EAAE;QACtDA,aAAa,CAACD,WAAW,EAAEI,KAAK,CAAC;MACrC,CAAC,MACI;QACDJ,WAAW,CAAEK,QAAQ,IAAK;UACtB,MAAMC,YAAY,GAAGD,QAAQ,CAACE,SAAS,CAAEC,OAAO,IAAKA,OAAO,CAACC,GAAG,KAAKL,KAAK,CAACK,GAAG,CAAC;UAC/E,IAAIH,YAAY,GAAG,CAAC,EAChB,OAAO,CAAC,GAAGD,QAAQ,CAAC;UACxB;UACAA,QAAQ,CAACK,MAAM,CAACJ,YAAY,EAAE,CAAC,CAAC;UAChC,OAAO,CAAC,GAAGD,QAAQ,CAAC;QACxB,CAAC,CAAC;MACN;IACJ,CAAC;IACDH,MAAM,CAACS,EAAE,CAAC,iBAAiB,EAAER,WAAW,CAAC;IACzC,OAAO,MAAM;MACTD,MAAM,CAACU,GAAG,CAAC,iBAAiB,EAAET,WAAW,CAAC;IAC9C,CAAC;EACL,CAAC,EAAE,CAACD,MAAM,EAAED,aAAa,EAAED,WAAW,CAAC,CAAC;AAC5C,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}