{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport { isVoteAnswer } from 'stream-chat';\nimport { useChatContext } from '../../../context';\nexport function useManagePollVotesRealtime(managedVoteType, cursorPaginatorState, optionId) {\n  var _cursorPaginatorState;\n  const {\n    client\n  } = useChatContext();\n  const [votesInRealtime, setVotesInRealtime] = useState((_cursorPaginatorState = cursorPaginatorState === null || cursorPaginatorState === void 0 ? void 0 : cursorPaginatorState.getLatestValue().items) !== null && _cursorPaginatorState !== void 0 ? _cursorPaginatorState : []);\n  useEffect(() => cursorPaginatorState === null || cursorPaginatorState === void 0 ? void 0 : cursorPaginatorState.subscribeWithSelector(state => [state.latestPageItems], _ref => {\n    let [latestPageItems] = _ref;\n    return setVotesInRealtime(prev => [...prev, ...latestPageItems]);\n  }), [cursorPaginatorState]);\n  useEffect(() => {\n    const handleVoteEvent = event => {\n      if (!event.poll_vote) return;\n      const isAnswer = isVoteAnswer(event.poll_vote);\n      if (managedVoteType === 'answer' && !isAnswer || managedVoteType === 'vote' && (isAnswer || event.poll_vote.option_id !== optionId)) return;\n      if (event.type === 'poll.vote_removed') {\n        setVotesInRealtime(prev => event.poll_vote ? prev.filter(vote => vote.id !== event.poll_vote.id) : prev);\n      }\n      if (event.type === 'poll.vote_changed') {\n        setVotesInRealtime(prev => event.poll_vote ? prev.filter(vote => vote.id !== event.poll_vote.id) : prev);\n      }\n      if (['poll.vote_casted', 'poll.vote_changed'].includes(event.type)) {\n        setVotesInRealtime(prev => event.poll_vote ? [event.poll_vote, ...prev] : prev);\n      }\n    };\n    const voteCastedSubscription = client.on('poll.vote_casted', handleVoteEvent);\n    const voteRemovedSubscription = client.on('poll.vote_removed', handleVoteEvent);\n    const voteChangedSubscription = client.on('poll.vote_changed', handleVoteEvent);\n    return () => {\n      voteCastedSubscription.unsubscribe();\n      voteRemovedSubscription.unsubscribe();\n      voteChangedSubscription.unsubscribe();\n    };\n  }, [client, optionId, managedVoteType]);\n  return votesInRealtime;\n}","map":{"version":3,"names":["useEffect","useState","isVoteAnswer","useChatContext","useManagePollVotesRealtime","managedVoteType","cursorPaginatorState","optionId","_cursorPaginatorState","client","votesInRealtime","setVotesInRealtime","getLatestValue","items","subscribeWithSelector","state","latestPageItems","_ref","prev","handleVoteEvent","event","poll_vote","isAnswer","option_id","type","filter","vote","id","includes","voteCastedSubscription","on","voteRemovedSubscription","voteChangedSubscription","unsubscribe"],"sources":["/tmp/daft-chat-temp/node_modules/stream-chat-react/dist/components/Poll/hooks/useManagePollVotesRealtime.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { isVoteAnswer } from 'stream-chat';\nimport { useChatContext } from '../../../context';\nexport function useManagePollVotesRealtime(managedVoteType, cursorPaginatorState, optionId) {\n    const { client } = useChatContext();\n    const [votesInRealtime, setVotesInRealtime] = useState(cursorPaginatorState?.getLatestValue().items ?? []);\n    useEffect(() => cursorPaginatorState?.subscribeWithSelector((state) => [state.latestPageItems], ([latestPageItems]) => setVotesInRealtime((prev) => [...prev, ...latestPageItems])), [cursorPaginatorState]);\n    useEffect(() => {\n        const handleVoteEvent = (event) => {\n            if (!event.poll_vote)\n                return;\n            const isAnswer = isVoteAnswer(event.poll_vote);\n            if ((managedVoteType === 'answer' && !isAnswer) ||\n                (managedVoteType === 'vote' &&\n                    (isAnswer || event.poll_vote.option_id !== optionId)))\n                return;\n            if (event.type === 'poll.vote_removed') {\n                setVotesInRealtime((prev) => event.poll_vote\n                    ? prev.filter((vote) => vote.id !== event.poll_vote.id)\n                    : prev);\n            }\n            if (event.type === 'poll.vote_changed') {\n                setVotesInRealtime((prev) => event.poll_vote\n                    ? prev.filter((vote) => vote.id !== event.poll_vote.id)\n                    : prev);\n            }\n            if (['poll.vote_casted', 'poll.vote_changed'].includes(event.type)) {\n                setVotesInRealtime((prev) => event.poll_vote ? [event.poll_vote, ...prev] : prev);\n            }\n        };\n        const voteCastedSubscription = client.on('poll.vote_casted', handleVoteEvent);\n        const voteRemovedSubscription = client.on('poll.vote_removed', handleVoteEvent);\n        const voteChangedSubscription = client.on('poll.vote_changed', handleVoteEvent);\n        return () => {\n            voteCastedSubscription.unsubscribe();\n            voteRemovedSubscription.unsubscribe();\n            voteChangedSubscription.unsubscribe();\n        };\n    }, [client, optionId, managedVoteType]);\n    return votesInRealtime;\n}\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,YAAY,QAAQ,aAAa;AAC1C,SAASC,cAAc,QAAQ,kBAAkB;AACjD,OAAO,SAASC,0BAA0BA,CAACC,eAAe,EAAEC,oBAAoB,EAAEC,QAAQ,EAAE;EAAA,IAAAC,qBAAA;EACxF,MAAM;IAAEC;EAAO,CAAC,GAAGN,cAAc,CAAC,CAAC;EACnC,MAAM,CAACO,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,EAAAO,qBAAA,GAACF,oBAAoB,aAApBA,oBAAoB,uBAApBA,oBAAoB,CAAEM,cAAc,CAAC,CAAC,CAACC,KAAK,cAAAL,qBAAA,cAAAA,qBAAA,GAAI,EAAE,CAAC;EAC1GR,SAAS,CAAC,MAAMM,oBAAoB,aAApBA,oBAAoB,uBAApBA,oBAAoB,CAAEQ,qBAAqB,CAAEC,KAAK,IAAK,CAACA,KAAK,CAACC,eAAe,CAAC,EAAEC,IAAA;IAAA,IAAC,CAACD,eAAe,CAAC,GAAAC,IAAA;IAAA,OAAKN,kBAAkB,CAAEO,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE,GAAGF,eAAe,CAAC,CAAC;EAAA,EAAC,EAAE,CAACV,oBAAoB,CAAC,CAAC;EAC5MN,SAAS,CAAC,MAAM;IACZ,MAAMmB,eAAe,GAAIC,KAAK,IAAK;MAC/B,IAAI,CAACA,KAAK,CAACC,SAAS,EAChB;MACJ,MAAMC,QAAQ,GAAGpB,YAAY,CAACkB,KAAK,CAACC,SAAS,CAAC;MAC9C,IAAKhB,eAAe,KAAK,QAAQ,IAAI,CAACiB,QAAQ,IACzCjB,eAAe,KAAK,MAAM,KACtBiB,QAAQ,IAAIF,KAAK,CAACC,SAAS,CAACE,SAAS,KAAKhB,QAAQ,CAAE,EACzD;MACJ,IAAIa,KAAK,CAACI,IAAI,KAAK,mBAAmB,EAAE;QACpCb,kBAAkB,CAAEO,IAAI,IAAKE,KAAK,CAACC,SAAS,GACtCH,IAAI,CAACO,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKP,KAAK,CAACC,SAAS,CAACM,EAAE,CAAC,GACrDT,IAAI,CAAC;MACf;MACA,IAAIE,KAAK,CAACI,IAAI,KAAK,mBAAmB,EAAE;QACpCb,kBAAkB,CAAEO,IAAI,IAAKE,KAAK,CAACC,SAAS,GACtCH,IAAI,CAACO,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKP,KAAK,CAACC,SAAS,CAACM,EAAE,CAAC,GACrDT,IAAI,CAAC;MACf;MACA,IAAI,CAAC,kBAAkB,EAAE,mBAAmB,CAAC,CAACU,QAAQ,CAACR,KAAK,CAACI,IAAI,CAAC,EAAE;QAChEb,kBAAkB,CAAEO,IAAI,IAAKE,KAAK,CAACC,SAAS,GAAG,CAACD,KAAK,CAACC,SAAS,EAAE,GAAGH,IAAI,CAAC,GAAGA,IAAI,CAAC;MACrF;IACJ,CAAC;IACD,MAAMW,sBAAsB,GAAGpB,MAAM,CAACqB,EAAE,CAAC,kBAAkB,EAAEX,eAAe,CAAC;IAC7E,MAAMY,uBAAuB,GAAGtB,MAAM,CAACqB,EAAE,CAAC,mBAAmB,EAAEX,eAAe,CAAC;IAC/E,MAAMa,uBAAuB,GAAGvB,MAAM,CAACqB,EAAE,CAAC,mBAAmB,EAAEX,eAAe,CAAC;IAC/E,OAAO,MAAM;MACTU,sBAAsB,CAACI,WAAW,CAAC,CAAC;MACpCF,uBAAuB,CAACE,WAAW,CAAC,CAAC;MACrCD,uBAAuB,CAACC,WAAW,CAAC,CAAC;IACzC,CAAC;EACL,CAAC,EAAE,CAACxB,MAAM,EAAEF,QAAQ,EAAEF,eAAe,CAAC,CAAC;EACvC,OAAOK,eAAe;AAC1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}