{"ast":null,"code":"import React from 'react';\nimport { useChannelPreviewInfo } from '../ChannelPreview/hooks/useChannelPreviewInfo';\nimport { CloseIcon } from './icons';\nimport { useChannelStateContext } from '../../context/ChannelStateContext';\nimport { useTranslationContext } from '../../context/TranslationContext';\nexport const ThreadHeader = props => {\n  const {\n    closeThread,\n    overrideImage,\n    overrideTitle\n  } = props;\n  const {\n    t\n  } = useTranslationContext('ThreadHeader');\n  const {\n    channel\n  } = useChannelStateContext('');\n  const {\n    displayTitle\n  } = useChannelPreviewInfo({\n    channel,\n    overrideImage,\n    overrideTitle\n  });\n  return React.createElement(\"div\", {\n    className: 'str-chat__thread-header'\n  }, React.createElement(\"div\", {\n    className: 'str-chat__thread-header-details'\n  }, React.createElement(\"div\", {\n    className: 'str-chat__thread-header-title'\n  }, t('Thread')), React.createElement(\"div\", {\n    className: 'str-chat__thread-header-subtitle'\n  }, displayTitle)), React.createElement(\"button\", {\n    \"aria-label\": t('aria/Close thread'),\n    className: 'str-chat__close-thread-button',\n    \"data-testid\": 'close-button',\n    onClick: closeThread\n  }, React.createElement(CloseIcon, null)));\n};","map":{"version":3,"names":["React","useChannelPreviewInfo","CloseIcon","useChannelStateContext","useTranslationContext","ThreadHeader","props","closeThread","overrideImage","overrideTitle","t","channel","displayTitle","createElement","className","onClick"],"sources":["/tmp/daft-chat-temp/node_modules/stream-chat-react/dist/components/Thread/ThreadHeader.js"],"sourcesContent":["import React from 'react';\nimport { useChannelPreviewInfo } from '../ChannelPreview/hooks/useChannelPreviewInfo';\nimport { CloseIcon } from './icons';\nimport { useChannelStateContext } from '../../context/ChannelStateContext';\nimport { useTranslationContext } from '../../context/TranslationContext';\nexport const ThreadHeader = (props) => {\n    const { closeThread, overrideImage, overrideTitle } = props;\n    const { t } = useTranslationContext('ThreadHeader');\n    const { channel } = useChannelStateContext('');\n    const { displayTitle } = useChannelPreviewInfo({\n        channel,\n        overrideImage,\n        overrideTitle,\n    });\n    return (React.createElement(\"div\", { className: 'str-chat__thread-header' },\n        React.createElement(\"div\", { className: 'str-chat__thread-header-details' },\n            React.createElement(\"div\", { className: 'str-chat__thread-header-title' }, t('Thread')),\n            React.createElement(\"div\", { className: 'str-chat__thread-header-subtitle' }, displayTitle)),\n        React.createElement(\"button\", { \"aria-label\": t('aria/Close thread'), className: 'str-chat__close-thread-button', \"data-testid\": 'close-button', onClick: closeThread },\n            React.createElement(CloseIcon, null))));\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,qBAAqB,QAAQ,+CAA+C;AACrF,SAASC,SAAS,QAAQ,SAAS;AACnC,SAASC,sBAAsB,QAAQ,mCAAmC;AAC1E,SAASC,qBAAqB,QAAQ,kCAAkC;AACxE,OAAO,MAAMC,YAAY,GAAIC,KAAK,IAAK;EACnC,MAAM;IAAEC,WAAW;IAAEC,aAAa;IAAEC;EAAc,CAAC,GAAGH,KAAK;EAC3D,MAAM;IAAEI;EAAE,CAAC,GAAGN,qBAAqB,CAAC,cAAc,CAAC;EACnD,MAAM;IAAEO;EAAQ,CAAC,GAAGR,sBAAsB,CAAC,EAAE,CAAC;EAC9C,MAAM;IAAES;EAAa,CAAC,GAAGX,qBAAqB,CAAC;IAC3CU,OAAO;IACPH,aAAa;IACbC;EACJ,CAAC,CAAC;EACF,OAAQT,KAAK,CAACa,aAAa,CAAC,KAAK,EAAE;IAAEC,SAAS,EAAE;EAA0B,CAAC,EACvEd,KAAK,CAACa,aAAa,CAAC,KAAK,EAAE;IAAEC,SAAS,EAAE;EAAkC,CAAC,EACvEd,KAAK,CAACa,aAAa,CAAC,KAAK,EAAE;IAAEC,SAAS,EAAE;EAAgC,CAAC,EAAEJ,CAAC,CAAC,QAAQ,CAAC,CAAC,EACvFV,KAAK,CAACa,aAAa,CAAC,KAAK,EAAE;IAAEC,SAAS,EAAE;EAAmC,CAAC,EAAEF,YAAY,CAAC,CAAC,EAChGZ,KAAK,CAACa,aAAa,CAAC,QAAQ,EAAE;IAAE,YAAY,EAAEH,CAAC,CAAC,mBAAmB,CAAC;IAAEI,SAAS,EAAE,+BAA+B;IAAE,aAAa,EAAE,cAAc;IAAEC,OAAO,EAAER;EAAY,CAAC,EACnKP,KAAK,CAACa,aAAa,CAACX,SAAS,EAAE,IAAI,CAAC,CAAC,CAAC;AAClD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}