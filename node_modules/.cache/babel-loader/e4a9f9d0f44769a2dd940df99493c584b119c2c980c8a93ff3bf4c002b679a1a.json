{"ast":null,"code":"import React from 'react';\nimport { MenuIcon as DefaultMenuIcon } from './icons';\nimport { Avatar as DefaultAvatar } from '../Avatar';\nimport { useChannelPreviewInfo } from '../ChannelPreview/hooks/useChannelPreviewInfo';\nimport { useChannelStateContext } from '../../context/ChannelStateContext';\nimport { useChatContext } from '../../context/ChatContext';\nimport { useTranslationContext } from '../../context/TranslationContext';\n/**\n * The ChannelHeader component renders some basic information about a Channel.\n */\nexport const ChannelHeader = props => {\n  const {\n    Avatar = DefaultAvatar,\n    image: overrideImage,\n    live,\n    MenuIcon = DefaultMenuIcon,\n    title: overrideTitle\n  } = props;\n  const {\n    channel,\n    watcher_count\n  } = useChannelStateContext('ChannelHeader');\n  const {\n    openMobileNav\n  } = useChatContext('ChannelHeader');\n  const {\n    t\n  } = useTranslationContext('ChannelHeader');\n  const {\n    displayImage,\n    displayTitle,\n    groupChannelDisplayInfo\n  } = useChannelPreviewInfo({\n    channel,\n    overrideImage,\n    overrideTitle\n  });\n  const {\n    member_count,\n    subtitle\n  } = (channel === null || channel === void 0 ? void 0 : channel.data) || {};\n  return React.createElement(\"div\", {\n    className: 'str-chat__channel-header'\n  }, React.createElement(\"button\", {\n    \"aria-label\": t('aria/Menu'),\n    className: 'str-chat__header-hamburger',\n    onClick: openMobileNav\n  }, React.createElement(MenuIcon, null)), React.createElement(Avatar, {\n    className: 'str-chat__avatar--channel-header',\n    groupChannelDisplayInfo: groupChannelDisplayInfo,\n    image: displayImage,\n    name: displayTitle\n  }), React.createElement(\"div\", {\n    className: 'str-chat__channel-header-end'\n  }, React.createElement(\"p\", {\n    className: 'str-chat__channel-header-title'\n  }, displayTitle, ' ', live && React.createElement(\"span\", {\n    className: 'str-chat__header-livestream-livelabel'\n  }, t('live'))), subtitle && React.createElement(\"p\", {\n    className: 'str-chat__channel-header-subtitle'\n  }, subtitle), React.createElement(\"p\", {\n    className: 'str-chat__channel-header-info'\n  }, !live && !!member_count && member_count > 0 && React.createElement(React.Fragment, null, t('{{ memberCount }} members', {\n    memberCount: member_count\n  }), \",\", ' '), t('{{ watcherCount }} online', {\n    watcherCount: watcher_count\n  }))));\n};","map":{"version":3,"names":["React","MenuIcon","DefaultMenuIcon","Avatar","DefaultAvatar","useChannelPreviewInfo","useChannelStateContext","useChatContext","useTranslationContext","ChannelHeader","props","image","overrideImage","live","title","overrideTitle","channel","watcher_count","openMobileNav","t","displayImage","displayTitle","groupChannelDisplayInfo","member_count","subtitle","data","createElement","className","onClick","name","Fragment","memberCount","watcherCount"],"sources":["/tmp/daft-chat-temp/node_modules/stream-chat-react/dist/components/ChannelHeader/ChannelHeader.js"],"sourcesContent":["import React from 'react';\nimport { MenuIcon as DefaultMenuIcon } from './icons';\nimport { Avatar as DefaultAvatar } from '../Avatar';\nimport { useChannelPreviewInfo } from '../ChannelPreview/hooks/useChannelPreviewInfo';\nimport { useChannelStateContext } from '../../context/ChannelStateContext';\nimport { useChatContext } from '../../context/ChatContext';\nimport { useTranslationContext } from '../../context/TranslationContext';\n/**\n * The ChannelHeader component renders some basic information about a Channel.\n */\nexport const ChannelHeader = (props) => {\n    const { Avatar = DefaultAvatar, image: overrideImage, live, MenuIcon = DefaultMenuIcon, title: overrideTitle, } = props;\n    const { channel, watcher_count } = useChannelStateContext('ChannelHeader');\n    const { openMobileNav } = useChatContext('ChannelHeader');\n    const { t } = useTranslationContext('ChannelHeader');\n    const { displayImage, displayTitle, groupChannelDisplayInfo } = useChannelPreviewInfo({\n        channel,\n        overrideImage,\n        overrideTitle,\n    });\n    const { member_count, subtitle } = channel?.data || {};\n    return (React.createElement(\"div\", { className: 'str-chat__channel-header' },\n        React.createElement(\"button\", { \"aria-label\": t('aria/Menu'), className: 'str-chat__header-hamburger', onClick: openMobileNav },\n            React.createElement(MenuIcon, null)),\n        React.createElement(Avatar, { className: 'str-chat__avatar--channel-header', groupChannelDisplayInfo: groupChannelDisplayInfo, image: displayImage, name: displayTitle }),\n        React.createElement(\"div\", { className: 'str-chat__channel-header-end' },\n            React.createElement(\"p\", { className: 'str-chat__channel-header-title' },\n                displayTitle,\n                ' ',\n                live && (React.createElement(\"span\", { className: 'str-chat__header-livestream-livelabel' }, t('live')))),\n            subtitle && React.createElement(\"p\", { className: 'str-chat__channel-header-subtitle' }, subtitle),\n            React.createElement(\"p\", { className: 'str-chat__channel-header-info' },\n                !live && !!member_count && member_count > 0 && (React.createElement(React.Fragment, null,\n                    t('{{ memberCount }} members', {\n                        memberCount: member_count,\n                    }),\n                    \",\",\n                    ' ')),\n                t('{{ watcherCount }} online', { watcherCount: watcher_count })))));\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,IAAIC,eAAe,QAAQ,SAAS;AACrD,SAASC,MAAM,IAAIC,aAAa,QAAQ,WAAW;AACnD,SAASC,qBAAqB,QAAQ,+CAA+C;AACrF,SAASC,sBAAsB,QAAQ,mCAAmC;AAC1E,SAASC,cAAc,QAAQ,2BAA2B;AAC1D,SAASC,qBAAqB,QAAQ,kCAAkC;AACxE;AACA;AACA;AACA,OAAO,MAAMC,aAAa,GAAIC,KAAK,IAAK;EACpC,MAAM;IAAEP,MAAM,GAAGC,aAAa;IAAEO,KAAK,EAAEC,aAAa;IAAEC,IAAI;IAAEZ,QAAQ,GAAGC,eAAe;IAAEY,KAAK,EAAEC;EAAe,CAAC,GAAGL,KAAK;EACvH,MAAM;IAAEM,OAAO;IAAEC;EAAc,CAAC,GAAGX,sBAAsB,CAAC,eAAe,CAAC;EAC1E,MAAM;IAAEY;EAAc,CAAC,GAAGX,cAAc,CAAC,eAAe,CAAC;EACzD,MAAM;IAAEY;EAAE,CAAC,GAAGX,qBAAqB,CAAC,eAAe,CAAC;EACpD,MAAM;IAAEY,YAAY;IAAEC,YAAY;IAAEC;EAAwB,CAAC,GAAGjB,qBAAqB,CAAC;IAClFW,OAAO;IACPJ,aAAa;IACbG;EACJ,CAAC,CAAC;EACF,MAAM;IAAEQ,YAAY;IAAEC;EAAS,CAAC,GAAG,CAAAR,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAES,IAAI,KAAI,CAAC,CAAC;EACtD,OAAQzB,KAAK,CAAC0B,aAAa,CAAC,KAAK,EAAE;IAAEC,SAAS,EAAE;EAA2B,CAAC,EACxE3B,KAAK,CAAC0B,aAAa,CAAC,QAAQ,EAAE;IAAE,YAAY,EAAEP,CAAC,CAAC,WAAW,CAAC;IAAEQ,SAAS,EAAE,4BAA4B;IAAEC,OAAO,EAAEV;EAAc,CAAC,EAC3HlB,KAAK,CAAC0B,aAAa,CAACzB,QAAQ,EAAE,IAAI,CAAC,CAAC,EACxCD,KAAK,CAAC0B,aAAa,CAACvB,MAAM,EAAE;IAAEwB,SAAS,EAAE,kCAAkC;IAAEL,uBAAuB,EAAEA,uBAAuB;IAAEX,KAAK,EAAES,YAAY;IAAES,IAAI,EAAER;EAAa,CAAC,CAAC,EACzKrB,KAAK,CAAC0B,aAAa,CAAC,KAAK,EAAE;IAAEC,SAAS,EAAE;EAA+B,CAAC,EACpE3B,KAAK,CAAC0B,aAAa,CAAC,GAAG,EAAE;IAAEC,SAAS,EAAE;EAAiC,CAAC,EACpEN,YAAY,EACZ,GAAG,EACHR,IAAI,IAAKb,KAAK,CAAC0B,aAAa,CAAC,MAAM,EAAE;IAAEC,SAAS,EAAE;EAAwC,CAAC,EAAER,CAAC,CAAC,MAAM,CAAC,CAAE,CAAC,EAC7GK,QAAQ,IAAIxB,KAAK,CAAC0B,aAAa,CAAC,GAAG,EAAE;IAAEC,SAAS,EAAE;EAAoC,CAAC,EAAEH,QAAQ,CAAC,EAClGxB,KAAK,CAAC0B,aAAa,CAAC,GAAG,EAAE;IAAEC,SAAS,EAAE;EAAgC,CAAC,EACnE,CAACd,IAAI,IAAI,CAAC,CAACU,YAAY,IAAIA,YAAY,GAAG,CAAC,IAAKvB,KAAK,CAAC0B,aAAa,CAAC1B,KAAK,CAAC8B,QAAQ,EAAE,IAAI,EACpFX,CAAC,CAAC,2BAA2B,EAAE;IAC3BY,WAAW,EAAER;EACjB,CAAC,CAAC,EACF,GAAG,EACH,GAAG,CAAE,EACTJ,CAAC,CAAC,2BAA2B,EAAE;IAAEa,YAAY,EAAEf;EAAc,CAAC,CAAC,CAAC,CAAC,CAAC;AAClF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}