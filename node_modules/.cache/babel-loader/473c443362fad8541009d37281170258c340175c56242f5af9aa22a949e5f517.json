{"ast":null,"code":"import _objectSpread from \"/tmp/daft-chat-temp/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/tmp/daft-chat-temp/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"handleFetchReactions\", \"onSelectedReactionTypeChange\", \"reactionDetailsSort\", \"reactions\", \"selectedReactionType\", \"sortReactionDetails\"];\nimport React, { useMemo } from 'react';\nimport clsx from 'clsx';\nimport { Modal } from '../Modal';\nimport { useFetchReactions } from './hooks/useFetchReactions';\nimport { LoadingIndicator } from '../Loading';\nimport { Avatar } from '../Avatar';\nimport { useMessageContext } from '../../context';\nconst defaultReactionDetailsSort = {\n  created_at: -1\n};\nexport function ReactionsListModal(_ref) {\n  var _selectedReaction$Emo, _ref3;\n  let {\n      handleFetchReactions,\n      onSelectedReactionTypeChange,\n      reactionDetailsSort: propReactionDetailsSort,\n      reactions,\n      selectedReactionType,\n      sortReactionDetails: propSortReactionDetails\n    } = _ref,\n    modalProps = _objectWithoutProperties(_ref, _excluded);\n  const selectedReaction = reactions.find(_ref2 => {\n    let {\n      reactionType\n    } = _ref2;\n    return reactionType === selectedReactionType;\n  });\n  const SelectedEmojiComponent = (_selectedReaction$Emo = selectedReaction === null || selectedReaction === void 0 ? void 0 : selectedReaction.EmojiComponent) !== null && _selectedReaction$Emo !== void 0 ? _selectedReaction$Emo : null;\n  const {\n    reactionDetailsSort: contextReactionDetailsSort,\n    sortReactionDetails: contextSortReactionDetails\n  } = useMessageContext('ReactionsListModal');\n  const legacySortReactionDetails = propSortReactionDetails !== null && propSortReactionDetails !== void 0 ? propSortReactionDetails : contextSortReactionDetails;\n  const reactionDetailsSort = (_ref3 = propReactionDetailsSort !== null && propReactionDetailsSort !== void 0 ? propReactionDetailsSort : contextReactionDetailsSort) !== null && _ref3 !== void 0 ? _ref3 : defaultReactionDetailsSort;\n  const {\n    isLoading: areReactionsLoading,\n    reactions: reactionDetails\n  } = useFetchReactions({\n    handleFetchReactions,\n    reactionType: selectedReactionType,\n    shouldFetch: modalProps.open,\n    sort: reactionDetailsSort\n  });\n  const reactionDetailsWithLegacyFallback = useMemo(() => legacySortReactionDetails ? [...reactionDetails].sort(legacySortReactionDetails) : reactionDetails, [legacySortReactionDetails, reactionDetails]);\n  return React.createElement(Modal, _objectSpread(_objectSpread({}, modalProps), {}, {\n    className: clsx('str-chat__message-reactions-details-modal', modalProps.className)\n  }), React.createElement(\"div\", {\n    className: 'str-chat__message-reactions-details',\n    \"data-testid\": 'reactions-list-modal'\n  }, React.createElement(\"div\", {\n    className: 'str-chat__message-reactions-details-reaction-types'\n  }, reactions.map(_ref4 => {\n    let {\n      EmojiComponent,\n      reactionCount,\n      reactionType\n    } = _ref4;\n    return EmojiComponent && React.createElement(\"div\", {\n      className: clsx('str-chat__message-reactions-details-reaction-type', {\n        'str-chat__message-reactions-details-reaction-type--selected': selectedReactionType === reactionType\n      }),\n      \"data-testid\": \"reaction-details-selector-\".concat(reactionType),\n      key: reactionType,\n      onClick: () => onSelectedReactionTypeChange === null || onSelectedReactionTypeChange === void 0 ? void 0 : onSelectedReactionTypeChange(reactionType)\n    }, React.createElement(\"span\", {\n      className: 'str-chat__message-reaction-emoji str-chat__message-reaction-emoji--with-fallback'\n    }, React.createElement(EmojiComponent, null)), \"\\u00A0\", React.createElement(\"span\", {\n      className: 'str-chat__message-reaction-count'\n    }, reactionCount));\n  })), SelectedEmojiComponent && React.createElement(\"div\", {\n    className: 'str-chat__message-reaction-emoji str-chat__message-reaction-emoji--with-fallback str-chat__message-reaction-emoji-big'\n  }, React.createElement(SelectedEmojiComponent, null)), React.createElement(\"div\", {\n    className: 'str-chat__message-reactions-details-reacting-users',\n    \"data-testid\": 'all-reacting-users'\n  }, areReactionsLoading ? React.createElement(LoadingIndicator, null) : reactionDetailsWithLegacyFallback.map(_ref5 => {\n    let {\n      user\n    } = _ref5;\n    return React.createElement(\"div\", {\n      className: 'str-chat__message-reactions-details-reacting-user',\n      key: user === null || user === void 0 ? void 0 : user.id\n    }, React.createElement(Avatar, {\n      className: 'stream-chat__avatar--reaction',\n      \"data-testid\": 'avatar',\n      image: user === null || user === void 0 ? void 0 : user.image,\n      name: (user === null || user === void 0 ? void 0 : user.name) || (user === null || user === void 0 ? void 0 : user.id)\n    }), React.createElement(\"span\", {\n      className: 'str-chat__user-item--name',\n      \"data-testid\": 'reaction-user-username'\n    }, (user === null || user === void 0 ? void 0 : user.name) || (user === null || user === void 0 ? void 0 : user.id)));\n  }))));\n}","map":{"version":3,"names":["React","useMemo","clsx","Modal","useFetchReactions","LoadingIndicator","Avatar","useMessageContext","defaultReactionDetailsSort","created_at","ReactionsListModal","_ref","_selectedReaction$Emo","_ref3","handleFetchReactions","onSelectedReactionTypeChange","reactionDetailsSort","propReactionDetailsSort","reactions","selectedReactionType","sortReactionDetails","propSortReactionDetails","modalProps","_objectWithoutProperties","_excluded","selectedReaction","find","_ref2","reactionType","SelectedEmojiComponent","EmojiComponent","contextReactionDetailsSort","contextSortReactionDetails","legacySortReactionDetails","isLoading","areReactionsLoading","reactionDetails","shouldFetch","open","sort","reactionDetailsWithLegacyFallback","createElement","_objectSpread","className","map","_ref4","reactionCount","concat","key","onClick","_ref5","user","id","image","name"],"sources":["/tmp/daft-chat-temp/node_modules/stream-chat-react/dist/components/Reactions/ReactionsListModal.js"],"sourcesContent":["import React, { useMemo } from 'react';\nimport clsx from 'clsx';\nimport { Modal } from '../Modal';\nimport { useFetchReactions } from './hooks/useFetchReactions';\nimport { LoadingIndicator } from '../Loading';\nimport { Avatar } from '../Avatar';\nimport { useMessageContext } from '../../context';\nconst defaultReactionDetailsSort = { created_at: -1 };\nexport function ReactionsListModal({ handleFetchReactions, onSelectedReactionTypeChange, reactionDetailsSort: propReactionDetailsSort, reactions, selectedReactionType, sortReactionDetails: propSortReactionDetails, ...modalProps }) {\n    const selectedReaction = reactions.find(({ reactionType }) => reactionType === selectedReactionType);\n    const SelectedEmojiComponent = selectedReaction?.EmojiComponent ?? null;\n    const { reactionDetailsSort: contextReactionDetailsSort, sortReactionDetails: contextSortReactionDetails, } = useMessageContext('ReactionsListModal');\n    const legacySortReactionDetails = propSortReactionDetails ?? contextSortReactionDetails;\n    const reactionDetailsSort = propReactionDetailsSort ?? contextReactionDetailsSort ?? defaultReactionDetailsSort;\n    const { isLoading: areReactionsLoading, reactions: reactionDetails } = useFetchReactions({\n        handleFetchReactions,\n        reactionType: selectedReactionType,\n        shouldFetch: modalProps.open,\n        sort: reactionDetailsSort,\n    });\n    const reactionDetailsWithLegacyFallback = useMemo(() => legacySortReactionDetails\n        ? [...reactionDetails].sort(legacySortReactionDetails)\n        : reactionDetails, [legacySortReactionDetails, reactionDetails]);\n    return (React.createElement(Modal, { ...modalProps, className: clsx('str-chat__message-reactions-details-modal', modalProps.className) },\n        React.createElement(\"div\", { className: 'str-chat__message-reactions-details', \"data-testid\": 'reactions-list-modal' },\n            React.createElement(\"div\", { className: 'str-chat__message-reactions-details-reaction-types' }, reactions.map(({ EmojiComponent, reactionCount, reactionType }) => EmojiComponent && (React.createElement(\"div\", { className: clsx('str-chat__message-reactions-details-reaction-type', {\n                    'str-chat__message-reactions-details-reaction-type--selected': selectedReactionType === reactionType,\n                }), \"data-testid\": `reaction-details-selector-${reactionType}`, key: reactionType, onClick: () => onSelectedReactionTypeChange?.(reactionType) },\n                React.createElement(\"span\", { className: 'str-chat__message-reaction-emoji str-chat__message-reaction-emoji--with-fallback' },\n                    React.createElement(EmojiComponent, null)),\n                \"\\u00A0\",\n                React.createElement(\"span\", { className: 'str-chat__message-reaction-count' }, reactionCount))))),\n            SelectedEmojiComponent && (React.createElement(\"div\", { className: 'str-chat__message-reaction-emoji str-chat__message-reaction-emoji--with-fallback str-chat__message-reaction-emoji-big' },\n                React.createElement(SelectedEmojiComponent, null))),\n            React.createElement(\"div\", { className: 'str-chat__message-reactions-details-reacting-users', \"data-testid\": 'all-reacting-users' }, areReactionsLoading ? (React.createElement(LoadingIndicator, null)) : (reactionDetailsWithLegacyFallback.map(({ user }) => (React.createElement(\"div\", { className: 'str-chat__message-reactions-details-reacting-user', key: user?.id },\n                React.createElement(Avatar, { className: 'stream-chat__avatar--reaction', \"data-testid\": 'avatar', image: user?.image, name: user?.name || user?.id }),\n                React.createElement(\"span\", { className: 'str-chat__user-item--name', \"data-testid\": 'reaction-user-username' }, user?.name || user?.id)))))))));\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}