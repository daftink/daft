{"ast":null,"code":"import React, { useEffect, useState } from 'react';\nimport { useTimeElapsed } from './hooks/useTimeElapsed';\nimport { useMessageInputContext } from '../../../context';\nimport { RecordingTimer } from './RecordingTimer';\nconst AudioRecordingWaveform = _ref => {\n  let {\n    maxDataPointsDrawn = 100\n  } = _ref;\n  const {\n    recordingController: {\n      recorder\n    }\n  } = useMessageInputContext();\n  const [amplitudes, setAmplitudes] = useState([]);\n  useEffect(() => {\n    if (!(recorder !== null && recorder !== void 0 && recorder.amplitudeRecorder)) return;\n    const amplitudesSubscription = recorder.amplitudeRecorder.amplitudes.subscribe(setAmplitudes);\n    return () => {\n      amplitudesSubscription.unsubscribe();\n    };\n  }, [recorder]);\n  if (!recorder) return null;\n  return React.createElement(\"div\", {\n    className: 'str-chat__waveform-box-container'\n  }, React.createElement(\"div\", {\n    className: 'str-chat__audio_recorder__waveform-box'\n  }, amplitudes.slice(-maxDataPointsDrawn).map((amplitude, i) => React.createElement(\"div\", {\n    className: 'str-chat__wave-progress-bar__amplitude-bar',\n    key: \"amplitude-\".concat(i, \"-voice-recording\"),\n    style: {\n      '--str-chat__wave-progress-bar__amplitude-bar-height': amplitude ? amplitude * 100 + '%' : '0%'\n    }\n  }))));\n};\nexport const AudioRecordingInProgress = () => {\n  const {\n    secondsElapsed,\n    startCounter,\n    stopCounter\n  } = useTimeElapsed();\n  const {\n    recordingController: {\n      recorder\n    }\n  } = useMessageInputContext();\n  useEffect(() => {\n    if (!(recorder !== null && recorder !== void 0 && recorder.mediaRecorder)) return;\n    const {\n      mediaRecorder\n    } = recorder;\n    if (mediaRecorder.state === 'recording') {\n      startCounter();\n    }\n    mediaRecorder.addEventListener('start', startCounter);\n    mediaRecorder.addEventListener('resume', startCounter);\n    mediaRecorder.addEventListener('stop', stopCounter);\n    mediaRecorder.addEventListener('pause', stopCounter);\n    return () => {\n      mediaRecorder.removeEventListener('start', startCounter);\n      mediaRecorder.removeEventListener('resume', startCounter);\n      mediaRecorder.removeEventListener('stop', stopCounter);\n      mediaRecorder.removeEventListener('pause', stopCounter);\n    };\n  }, [recorder, startCounter, stopCounter]);\n  return React.createElement(React.Fragment, null, React.createElement(RecordingTimer, {\n    durationSeconds: secondsElapsed\n  }), React.createElement(AudioRecordingWaveform, null));\n};","map":{"version":3,"names":["React","useEffect","useState","useTimeElapsed","useMessageInputContext","RecordingTimer","AudioRecordingWaveform","_ref","maxDataPointsDrawn","recordingController","recorder","amplitudes","setAmplitudes","amplitudeRecorder","amplitudesSubscription","subscribe","unsubscribe","createElement","className","slice","map","amplitude","i","key","concat","style","AudioRecordingInProgress","secondsElapsed","startCounter","stopCounter","mediaRecorder","state","addEventListener","removeEventListener","Fragment","durationSeconds"],"sources":["/tmp/daft-chat-temp/node_modules/stream-chat-react/dist/components/MediaRecorder/AudioRecorder/AudioRecordingInProgress.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useTimeElapsed } from './hooks/useTimeElapsed';\nimport { useMessageInputContext } from '../../../context';\nimport { RecordingTimer } from './RecordingTimer';\nconst AudioRecordingWaveform = ({ maxDataPointsDrawn = 100 }) => {\n    const { recordingController: { recorder }, } = useMessageInputContext();\n    const [amplitudes, setAmplitudes] = useState([]);\n    useEffect(() => {\n        if (!recorder?.amplitudeRecorder)\n            return;\n        const amplitudesSubscription = recorder.amplitudeRecorder.amplitudes.subscribe(setAmplitudes);\n        return () => {\n            amplitudesSubscription.unsubscribe();\n        };\n    }, [recorder]);\n    if (!recorder)\n        return null;\n    return (React.createElement(\"div\", { className: 'str-chat__waveform-box-container' },\n        React.createElement(\"div\", { className: 'str-chat__audio_recorder__waveform-box' }, amplitudes.slice(-maxDataPointsDrawn).map((amplitude, i) => (React.createElement(\"div\", { className: 'str-chat__wave-progress-bar__amplitude-bar', key: `amplitude-${i}-voice-recording`, style: {\n                '--str-chat__wave-progress-bar__amplitude-bar-height': amplitude\n                    ? amplitude * 100 + '%'\n                    : '0%',\n            } }))))));\n};\nexport const AudioRecordingInProgress = () => {\n    const { secondsElapsed, startCounter, stopCounter } = useTimeElapsed();\n    const { recordingController: { recorder }, } = useMessageInputContext();\n    useEffect(() => {\n        if (!recorder?.mediaRecorder)\n            return;\n        const { mediaRecorder } = recorder;\n        if (mediaRecorder.state === 'recording') {\n            startCounter();\n        }\n        mediaRecorder.addEventListener('start', startCounter);\n        mediaRecorder.addEventListener('resume', startCounter);\n        mediaRecorder.addEventListener('stop', stopCounter);\n        mediaRecorder.addEventListener('pause', stopCounter);\n        return () => {\n            mediaRecorder.removeEventListener('start', startCounter);\n            mediaRecorder.removeEventListener('resume', startCounter);\n            mediaRecorder.removeEventListener('stop', stopCounter);\n            mediaRecorder.removeEventListener('pause', stopCounter);\n        };\n    }, [recorder, startCounter, stopCounter]);\n    return (React.createElement(React.Fragment, null,\n        React.createElement(RecordingTimer, { durationSeconds: secondsElapsed }),\n        React.createElement(AudioRecordingWaveform, null)));\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}