{"ast":null,"code":"import _objectSpread from \"/tmp/daft-chat-temp/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport ReactPlayer from 'react-player';\nimport { ImageComponent } from '../Gallery';\nimport { SafeAnchor } from '../SafeAnchor';\nimport { PlayButton, ProgressBar } from './components';\nimport { useAudioController } from './hooks/useAudioController';\nimport { useChannelStateContext } from '../../context/ChannelStateContext';\nimport { useTranslationContext } from '../../context/TranslationContext';\nconst getHostFromURL = url => {\n  if (url !== undefined && url !== null) {\n    const [trimmedUrl] = url.replace(/^(?:https?:\\/\\/)?(?:www\\.)?/i, '').split('/');\n    return trimmedUrl;\n  }\n  return null;\n};\nconst UnableToRenderCard = _ref => {\n  let {\n    type\n  } = _ref;\n  const {\n    t\n  } = useTranslationContext('Card');\n  return React.createElement(\"div\", {\n    className: clsx('str-chat__message-attachment-card', {\n      [\"str-chat__message-attachment-card--\".concat(type)]: type\n    })\n  }, React.createElement(\"div\", {\n    className: 'str-chat__message-attachment-card--content'\n  }, React.createElement(\"div\", {\n    className: 'str-chat__message-attachment-card--text'\n  }, t('this content could not be displayed'))));\n};\nconst SourceLink = _ref2 => {\n  let {\n    author_name,\n    url\n  } = _ref2;\n  return React.createElement(\"div\", {\n    className: 'str-chat__message-attachment-card--source-link',\n    \"data-testid\": 'card-source-link'\n  }, React.createElement(SafeAnchor, {\n    className: 'str-chat__message-attachment-card--url',\n    href: url,\n    rel: 'noopener noreferrer',\n    target: '_blank'\n  }, author_name || getHostFromURL(url)));\n};\nconst CardHeader = props => {\n  const {\n    asset_url,\n    dimensions,\n    image,\n    image_url,\n    thumb_url,\n    title,\n    type\n  } = props;\n  let visual = null;\n  if (asset_url && type === 'video') {\n    visual = React.createElement(ReactPlayer, {\n      className: 'react-player',\n      controls: true,\n      height: '100%',\n      url: asset_url,\n      width: '100%'\n    });\n  } else if (image) {\n    visual = React.createElement(ImageComponent, {\n      dimensions: dimensions,\n      fallback: title || image,\n      image_url: image_url,\n      thumb_url: thumb_url\n    });\n  }\n  return visual ? React.createElement(\"div\", {\n    className: 'str-chat__message-attachment-card--header str-chat__message-attachment-card-react--header',\n    \"data-testid\": 'card-header'\n  }, visual) : null;\n};\nconst CardContent = props => {\n  const {\n    author_name,\n    og_scrape_url,\n    text,\n    title,\n    title_link,\n    type\n  } = props;\n  const url = title_link || og_scrape_url;\n  return React.createElement(\"div\", {\n    className: 'str-chat__message-attachment-card--content'\n  }, type === 'audio' ? React.createElement(CardAudio, {\n    og: props\n  }) : React.createElement(\"div\", {\n    className: 'str-chat__message-attachment-card--flex'\n  }, url && React.createElement(SourceLink, {\n    author_name: author_name,\n    url: url\n  }), title && React.createElement(\"div\", {\n    className: 'str-chat__message-attachment-card--title'\n  }, title), text && React.createElement(\"div\", {\n    className: 'str-chat__message-attachment-card--text'\n  }, text)));\n};\nexport const CardAudio = _ref3 => {\n  let {\n    og: {\n      asset_url,\n      author_name,\n      mime_type,\n      og_scrape_url,\n      text,\n      title,\n      title_link\n    }\n  } = _ref3;\n  const {\n    audioRef,\n    isPlaying,\n    progress,\n    seek,\n    togglePlay\n  } = useAudioController({\n    mimeType: mime_type\n  });\n  const url = title_link || og_scrape_url;\n  const dataTestId = 'card-audio-widget';\n  const rootClassName = 'str-chat__message-attachment-card-audio-widget';\n  return React.createElement(\"div\", {\n    className: rootClassName,\n    \"data-testid\": dataTestId\n  }, asset_url && React.createElement(React.Fragment, null, React.createElement(\"audio\", {\n    ref: audioRef\n  }, React.createElement(\"source\", {\n    \"data-testid\": 'audio-source',\n    src: asset_url,\n    type: 'audio/mp3'\n  })), React.createElement(\"div\", {\n    className: 'str-chat__message-attachment-card-audio-widget--first-row'\n  }, React.createElement(\"div\", {\n    className: 'str-chat__message-attachment-audio-widget--play-controls'\n  }, React.createElement(PlayButton, {\n    isPlaying: isPlaying,\n    onClick: togglePlay\n  })), React.createElement(ProgressBar, {\n    onClick: seek,\n    progress: progress\n  }))), React.createElement(\"div\", {\n    className: 'str-chat__message-attachment-audio-widget--second-row'\n  }, url && React.createElement(SourceLink, {\n    author_name: author_name,\n    url: url\n  }), title && React.createElement(\"div\", {\n    className: 'str-chat__message-attachment-audio-widget--title'\n  }, title), text && React.createElement(\"div\", {\n    className: 'str-chat__message-attachment-audio-widget--description'\n  }, text)));\n};\nconst UnMemoizedCard = props => {\n  const {\n    asset_url,\n    giphy,\n    image_url,\n    thumb_url,\n    title,\n    title_link,\n    type\n  } = props;\n  const {\n    giphyVersion: giphyVersionName\n  } = useChannelStateContext('CardHeader');\n  let image = thumb_url || image_url;\n  const dimensions = {};\n  if (type === 'giphy' && typeof giphy !== 'undefined') {\n    const giphyVersion = giphy[giphyVersionName];\n    image = giphyVersion.url;\n    dimensions.height = giphyVersion.height;\n    dimensions.width = giphyVersion.width;\n  }\n  if (!title && !title_link && !asset_url && !image) {\n    return React.createElement(UnableToRenderCard, null);\n  }\n  return React.createElement(\"div\", {\n    className: \"str-chat__message-attachment-card str-chat__message-attachment-card--\".concat(type)\n  }, React.createElement(CardHeader, _objectSpread(_objectSpread({}, props), {}, {\n    dimensions: dimensions,\n    image: image\n  })), React.createElement(CardContent, _objectSpread({}, props)));\n};\n/**\n * Simple Card Layout for displaying links\n */\nexport const Card = React.memo(UnMemoizedCard);","map":{"version":3,"names":["React","clsx","ReactPlayer","ImageComponent","SafeAnchor","PlayButton","ProgressBar","useAudioController","useChannelStateContext","useTranslationContext","getHostFromURL","url","undefined","trimmedUrl","replace","split","UnableToRenderCard","_ref","type","t","createElement","className","concat","SourceLink","_ref2","author_name","href","rel","target","CardHeader","props","asset_url","dimensions","image","image_url","thumb_url","title","visual","controls","height","width","fallback","CardContent","og_scrape_url","text","title_link","CardAudio","og","_ref3","mime_type","audioRef","isPlaying","progress","seek","togglePlay","mimeType","dataTestId","rootClassName","Fragment","ref","src","onClick","UnMemoizedCard","giphy","giphyVersion","giphyVersionName","_objectSpread","Card","memo"],"sources":["/tmp/daft-chat-temp/node_modules/stream-chat-react/dist/components/Attachment/Card.js"],"sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport ReactPlayer from 'react-player';\nimport { ImageComponent } from '../Gallery';\nimport { SafeAnchor } from '../SafeAnchor';\nimport { PlayButton, ProgressBar } from './components';\nimport { useAudioController } from './hooks/useAudioController';\nimport { useChannelStateContext } from '../../context/ChannelStateContext';\nimport { useTranslationContext } from '../../context/TranslationContext';\nconst getHostFromURL = (url) => {\n    if (url !== undefined && url !== null) {\n        const [trimmedUrl] = url.replace(/^(?:https?:\\/\\/)?(?:www\\.)?/i, '').split('/');\n        return trimmedUrl;\n    }\n    return null;\n};\nconst UnableToRenderCard = ({ type }) => {\n    const { t } = useTranslationContext('Card');\n    return (React.createElement(\"div\", { className: clsx('str-chat__message-attachment-card', {\n            [`str-chat__message-attachment-card--${type}`]: type,\n        }) },\n        React.createElement(\"div\", { className: 'str-chat__message-attachment-card--content' },\n            React.createElement(\"div\", { className: 'str-chat__message-attachment-card--text' }, t('this content could not be displayed')))));\n};\nconst SourceLink = ({ author_name, url, }) => (React.createElement(\"div\", { className: 'str-chat__message-attachment-card--source-link', \"data-testid\": 'card-source-link' },\n    React.createElement(SafeAnchor, { className: 'str-chat__message-attachment-card--url', href: url, rel: 'noopener noreferrer', target: '_blank' }, author_name || getHostFromURL(url))));\nconst CardHeader = (props) => {\n    const { asset_url, dimensions, image, image_url, thumb_url, title, type } = props;\n    let visual = null;\n    if (asset_url && type === 'video') {\n        visual = (React.createElement(ReactPlayer, { className: 'react-player', controls: true, height: '100%', url: asset_url, width: '100%' }));\n    }\n    else if (image) {\n        visual = (React.createElement(ImageComponent, { dimensions: dimensions, fallback: title || image, image_url: image_url, thumb_url: thumb_url }));\n    }\n    return visual ? (React.createElement(\"div\", { className: 'str-chat__message-attachment-card--header str-chat__message-attachment-card-react--header', \"data-testid\": 'card-header' }, visual)) : null;\n};\nconst CardContent = (props) => {\n    const { author_name, og_scrape_url, text, title, title_link, type } = props;\n    const url = title_link || og_scrape_url;\n    return (React.createElement(\"div\", { className: 'str-chat__message-attachment-card--content' }, type === 'audio' ? (React.createElement(CardAudio, { og: props })) : (React.createElement(\"div\", { className: 'str-chat__message-attachment-card--flex' },\n        url && React.createElement(SourceLink, { author_name: author_name, url: url }),\n        title && (React.createElement(\"div\", { className: 'str-chat__message-attachment-card--title' }, title)),\n        text && React.createElement(\"div\", { className: 'str-chat__message-attachment-card--text' }, text)))));\n};\nexport const CardAudio = ({ og: { asset_url, author_name, mime_type, og_scrape_url, text, title, title_link }, }) => {\n    const { audioRef, isPlaying, progress, seek, togglePlay } = useAudioController({\n        mimeType: mime_type,\n    });\n    const url = title_link || og_scrape_url;\n    const dataTestId = 'card-audio-widget';\n    const rootClassName = 'str-chat__message-attachment-card-audio-widget';\n    return (React.createElement(\"div\", { className: rootClassName, \"data-testid\": dataTestId },\n        asset_url && (React.createElement(React.Fragment, null,\n            React.createElement(\"audio\", { ref: audioRef },\n                React.createElement(\"source\", { \"data-testid\": 'audio-source', src: asset_url, type: 'audio/mp3' })),\n            React.createElement(\"div\", { className: 'str-chat__message-attachment-card-audio-widget--first-row' },\n                React.createElement(\"div\", { className: 'str-chat__message-attachment-audio-widget--play-controls' },\n                    React.createElement(PlayButton, { isPlaying: isPlaying, onClick: togglePlay })),\n                React.createElement(ProgressBar, { onClick: seek, progress: progress })))),\n        React.createElement(\"div\", { className: 'str-chat__message-attachment-audio-widget--second-row' },\n            url && React.createElement(SourceLink, { author_name: author_name, url: url }),\n            title && (React.createElement(\"div\", { className: 'str-chat__message-attachment-audio-widget--title' }, title)),\n            text && (React.createElement(\"div\", { className: 'str-chat__message-attachment-audio-widget--description' }, text)))));\n};\nconst UnMemoizedCard = (props) => {\n    const { asset_url, giphy, image_url, thumb_url, title, title_link, type } = props;\n    const { giphyVersion: giphyVersionName } = useChannelStateContext('CardHeader');\n    let image = thumb_url || image_url;\n    const dimensions = {};\n    if (type === 'giphy' && typeof giphy !== 'undefined') {\n        const giphyVersion = giphy[giphyVersionName];\n        image = giphyVersion.url;\n        dimensions.height = giphyVersion.height;\n        dimensions.width = giphyVersion.width;\n    }\n    if (!title && !title_link && !asset_url && !image) {\n        return React.createElement(UnableToRenderCard, null);\n    }\n    return (React.createElement(\"div\", { className: `str-chat__message-attachment-card str-chat__message-attachment-card--${type}` },\n        React.createElement(CardHeader, { ...props, dimensions: dimensions, image: image }),\n        React.createElement(CardContent, { ...props })));\n};\n/**\n * Simple Card Layout for displaying links\n */\nexport const Card = React.memo(UnMemoizedCard);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}