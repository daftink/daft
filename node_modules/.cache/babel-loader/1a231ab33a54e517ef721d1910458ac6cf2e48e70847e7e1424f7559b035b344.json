{"ast":null,"code":"import { useMemo } from 'react';\nexport const useCreateMessageInputContext = value => {\n  const {\n    additionalTextareaProps,\n    asyncMessagesMultiSendEnabled,\n    audioRecordingEnabled,\n    clearEditingState,\n    cooldownInterval,\n    cooldownRemaining,\n    emojiSearchIndex,\n    focus,\n    handleSubmit,\n    hideSendButton,\n    isThreadInput,\n    maxRows,\n    minRows,\n    onPaste,\n    parent,\n    recordingController,\n    setCooldownRemaining,\n    shouldSubmit,\n    textareaRef\n  } = value;\n  const parentId = parent === null || parent === void 0 ? void 0 : parent.id;\n  const messageInputContext = useMemo(() => ({\n    additionalTextareaProps,\n    asyncMessagesMultiSendEnabled,\n    audioRecordingEnabled,\n    clearEditingState,\n    cooldownInterval,\n    cooldownRemaining,\n    emojiSearchIndex,\n    focus,\n    handleSubmit,\n    hideSendButton,\n    isThreadInput,\n    maxRows,\n    minRows,\n    onPaste,\n    parent,\n    recordingController,\n    setCooldownRemaining,\n    shouldSubmit,\n    textareaRef\n  }),\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [asyncMessagesMultiSendEnabled, audioRecordingEnabled, cooldownInterval, cooldownRemaining, emojiSearchIndex, handleSubmit, hideSendButton, isThreadInput, minRows, parentId, recordingController]);\n  return messageInputContext;\n};","map":{"version":3,"names":["useMemo","useCreateMessageInputContext","value","additionalTextareaProps","asyncMessagesMultiSendEnabled","audioRecordingEnabled","clearEditingState","cooldownInterval","cooldownRemaining","emojiSearchIndex","focus","handleSubmit","hideSendButton","isThreadInput","maxRows","minRows","onPaste","parent","recordingController","setCooldownRemaining","shouldSubmit","textareaRef","parentId","id","messageInputContext"],"sources":["/tmp/daft-chat-temp/node_modules/stream-chat-react/dist/components/MessageInput/hooks/useCreateMessageInputContext.js"],"sourcesContent":["import { useMemo } from 'react';\nexport const useCreateMessageInputContext = (value) => {\n    const { additionalTextareaProps, asyncMessagesMultiSendEnabled, audioRecordingEnabled, clearEditingState, cooldownInterval, cooldownRemaining, emojiSearchIndex, focus, handleSubmit, hideSendButton, isThreadInput, maxRows, minRows, onPaste, parent, recordingController, setCooldownRemaining, shouldSubmit, textareaRef, } = value;\n    const parentId = parent?.id;\n    const messageInputContext = useMemo(() => ({\n        additionalTextareaProps,\n        asyncMessagesMultiSendEnabled,\n        audioRecordingEnabled,\n        clearEditingState,\n        cooldownInterval,\n        cooldownRemaining,\n        emojiSearchIndex,\n        focus,\n        handleSubmit,\n        hideSendButton,\n        isThreadInput,\n        maxRows,\n        minRows,\n        onPaste,\n        parent,\n        recordingController,\n        setCooldownRemaining,\n        shouldSubmit,\n        textareaRef,\n    }), \n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n        asyncMessagesMultiSendEnabled,\n        audioRecordingEnabled,\n        cooldownInterval,\n        cooldownRemaining,\n        emojiSearchIndex,\n        handleSubmit,\n        hideSendButton,\n        isThreadInput,\n        minRows,\n        parentId,\n        recordingController,\n    ]);\n    return messageInputContext;\n};\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,OAAO;AAC/B,OAAO,MAAMC,4BAA4B,GAAIC,KAAK,IAAK;EACnD,MAAM;IAAEC,uBAAuB;IAAEC,6BAA6B;IAAEC,qBAAqB;IAAEC,iBAAiB;IAAEC,gBAAgB;IAAEC,iBAAiB;IAAEC,gBAAgB;IAAEC,KAAK;IAAEC,YAAY;IAAEC,cAAc;IAAEC,aAAa;IAAEC,OAAO;IAAEC,OAAO;IAAEC,OAAO;IAAEC,MAAM;IAAEC,mBAAmB;IAAEC,oBAAoB;IAAEC,YAAY;IAAEC;EAAa,CAAC,GAAGnB,KAAK;EACvU,MAAMoB,QAAQ,GAAGL,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEM,EAAE;EAC3B,MAAMC,mBAAmB,GAAGxB,OAAO,CAAC,OAAO;IACvCG,uBAAuB;IACvBC,6BAA6B;IAC7BC,qBAAqB;IACrBC,iBAAiB;IACjBC,gBAAgB;IAChBC,iBAAiB;IACjBC,gBAAgB;IAChBC,KAAK;IACLC,YAAY;IACZC,cAAc;IACdC,aAAa;IACbC,OAAO;IACPC,OAAO;IACPC,OAAO;IACPC,MAAM;IACNC,mBAAmB;IACnBC,oBAAoB;IACpBC,YAAY;IACZC;EACJ,CAAC,CAAC;EACF;EACA,CACIjB,6BAA6B,EAC7BC,qBAAqB,EACrBE,gBAAgB,EAChBC,iBAAiB,EACjBC,gBAAgB,EAChBE,YAAY,EACZC,cAAc,EACdC,aAAa,EACbE,OAAO,EACPO,QAAQ,EACRJ,mBAAmB,CACtB,CAAC;EACF,OAAOM,mBAAmB;AAC9B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}