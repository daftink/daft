{"ast":null,"code":"import React,{useEffect,useState}from'react';import{StreamChat}from'stream-chat';import{Chat,ChannelList,Channel,ChannelHeader,MessageList,MessageInput,Thread,Window}from'stream-chat-react';import'stream-chat-css/dist/css/index.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const API_KEY='3nkn6wg7k7zt';const USER_ID='daftuser';export default function App(){const[client,setClient]=useState(null);const[activeChannel,setActiveChannel]=useState(null);useEffect(()=>{(async()=>{// 1) Connect the user\nconst chatClient=StreamChat.getInstance(API_KEY);const resp=await fetch('/token',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({userId:USER_ID})});const{token}=await resp.json();await chatClient.connectUser({id:USER_ID,name:'Daft User'},token);// 2) Get / create / watch your channel\nconst channel=chatClient.channel('messaging','daft-channel',{name:'Daft Chat'});await channel.watch();// creates the channel if needed\nsetActiveChannel(channel);setClient(chatClient);})();return()=>client===null||client===void 0?void 0:client.disconnectUser();},[]);if(!client||!activeChannel){return/*#__PURE__*/_jsx(\"div\",{style:{padding:20},children:\"Loading chat\\u2026\"});}// show all messaging channels you’re in on the left\nconst filters={type:'messaging',members:{$in:[USER_ID]}};const options={watch:true,state:true};return/*#__PURE__*/_jsx(Chat,{client:client,theme:\"messaging light\",children:/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',height:'100vh'},children:[/*#__PURE__*/_jsx(\"aside\",{style:{width:240},children:/*#__PURE__*/_jsx(ChannelList,{filters:filters,options:options,onChannelSelect:setActiveChannel})}),/*#__PURE__*/_jsxs(Channel,{channel:activeChannel,children:[/*#__PURE__*/_jsxs(Window,{children:[/*#__PURE__*/_jsx(ChannelHeader,{}),/*#__PURE__*/_jsx(MessageList,{}),/*#__PURE__*/_jsx(MessageInput,{})]}),/*#__PURE__*/_jsx(Thread,{})]})]})});}","map":{"version":3,"names":["React","useEffect","useState","StreamChat","Chat","ChannelList","Channel","ChannelHeader","MessageList","MessageInput","Thread","Window","jsx","_jsx","jsxs","_jsxs","API_KEY","USER_ID","App","client","setClient","activeChannel","setActiveChannel","chatClient","getInstance","resp","fetch","method","headers","body","JSON","stringify","userId","token","json","connectUser","id","name","channel","watch","disconnectUser","style","padding","children","filters","type","members","$in","options","state","theme","display","height","width","onChannelSelect"],"sources":["/tmp/daft-chat-temp/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { StreamChat } from 'stream-chat';\nimport {\n  Chat,\n  ChannelList,\n  Channel,\n  ChannelHeader,\n  MessageList,\n  MessageInput,\n  Thread,\n  Window,\n} from 'stream-chat-react';\nimport 'stream-chat-css/dist/css/index.css';\n\nconst API_KEY = '3nkn6wg7k7zt';\nconst USER_ID = 'daftuser';\n\nexport default function App() {\n  const [client, setClient] = useState(null);\n  const [activeChannel, setActiveChannel] = useState(null);\n\n  useEffect(() => {\n    (async () => {\n      // 1) Connect the user\n      const chatClient = StreamChat.getInstance(API_KEY);\n      const resp = await fetch('/token', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ userId: USER_ID }),\n      });\n      const { token } = await resp.json();\n      await chatClient.connectUser({ id: USER_ID, name: 'Daft User' }, token);\n\n      // 2) Get / create / watch your channel\n      const channel = chatClient.channel('messaging', 'daft-channel', {\n        name: 'Daft Chat',\n      });\n      await channel.watch();              // creates the channel if needed\n      setActiveChannel(channel);\n\n      setClient(chatClient);\n    })();\n\n    return () => client?.disconnectUser();\n  }, []);\n\n  if (!client || !activeChannel) {\n    return <div style={{ padding: 20 }}>Loading chat…</div>;\n  }\n\n  // show all messaging channels you’re in on the left\n  const filters = { type: 'messaging', members: { $in: [USER_ID] } };\n  const options = { watch: true, state: true };\n\n  return (\n    <Chat client={client} theme=\"messaging light\">\n      <div style={{ display: 'flex', height: '100vh' }}>\n        <aside style={{ width: 240 }}>\n          <ChannelList\n            filters={filters}\n            options={options}\n            onChannelSelect={setActiveChannel}\n          />\n        </aside>\n        <Channel channel={activeChannel}>\n          <Window>\n            <ChannelHeader />\n            <MessageList />\n            <MessageInput />\n          </Window>\n          <Thread />\n        </Channel>\n      </div>\n    </Chat>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}