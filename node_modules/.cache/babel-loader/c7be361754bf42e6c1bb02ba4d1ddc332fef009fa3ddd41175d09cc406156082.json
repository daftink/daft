{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport { getDisplayImage, getDisplayTitle, getGroupChannelDisplayInfo } from '../utils';\nimport { useChatContext } from '../../../context';\nexport const useChannelPreviewInfo = props => {\n  const {\n    channel,\n    overrideImage,\n    overrideTitle\n  } = props;\n  const {\n    client\n  } = useChatContext('useChannelPreviewInfo');\n  const [displayTitle, setDisplayTitle] = useState(() => overrideTitle || getDisplayTitle(channel, client.user));\n  const [displayImage, setDisplayImage] = useState(() => overrideImage || getDisplayImage(channel, client.user));\n  const [groupChannelDisplayInfo, setGroupDisplayChannelInfo] = useState(() => getGroupChannelDisplayInfo(channel));\n  useEffect(() => {\n    if (overrideTitle && overrideImage) return;\n    const updateInfo = () => {\n      if (!overrideTitle) setDisplayTitle(getDisplayTitle(channel, client.user));\n      if (!overrideImage) {\n        setDisplayImage(getDisplayImage(channel, client.user));\n        setGroupDisplayChannelInfo(getGroupChannelDisplayInfo(channel));\n      }\n    };\n    updateInfo();\n    client.on('user.updated', updateInfo);\n    return () => {\n      client.off('user.updated', updateInfo);\n    };\n  }, [channel, channel.data, client, overrideImage, overrideTitle]);\n  return {\n    displayImage: overrideImage || displayImage,\n    displayTitle: overrideTitle || displayTitle,\n    groupChannelDisplayInfo\n  };\n};","map":{"version":3,"names":["useEffect","useState","getDisplayImage","getDisplayTitle","getGroupChannelDisplayInfo","useChatContext","useChannelPreviewInfo","props","channel","overrideImage","overrideTitle","client","displayTitle","setDisplayTitle","user","displayImage","setDisplayImage","groupChannelDisplayInfo","setGroupDisplayChannelInfo","updateInfo","on","off","data"],"sources":["/tmp/daft-chat-temp/node_modules/stream-chat-react/dist/components/ChannelPreview/hooks/useChannelPreviewInfo.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { getDisplayImage, getDisplayTitle, getGroupChannelDisplayInfo } from '../utils';\nimport { useChatContext } from '../../../context';\nexport const useChannelPreviewInfo = (props) => {\n    const { channel, overrideImage, overrideTitle } = props;\n    const { client } = useChatContext('useChannelPreviewInfo');\n    const [displayTitle, setDisplayTitle] = useState(() => overrideTitle || getDisplayTitle(channel, client.user));\n    const [displayImage, setDisplayImage] = useState(() => overrideImage || getDisplayImage(channel, client.user));\n    const [groupChannelDisplayInfo, setGroupDisplayChannelInfo] = useState(() => getGroupChannelDisplayInfo(channel));\n    useEffect(() => {\n        if (overrideTitle && overrideImage)\n            return;\n        const updateInfo = () => {\n            if (!overrideTitle)\n                setDisplayTitle(getDisplayTitle(channel, client.user));\n            if (!overrideImage) {\n                setDisplayImage(getDisplayImage(channel, client.user));\n                setGroupDisplayChannelInfo(getGroupChannelDisplayInfo(channel));\n            }\n        };\n        updateInfo();\n        client.on('user.updated', updateInfo);\n        return () => {\n            client.off('user.updated', updateInfo);\n        };\n    }, [channel, channel.data, client, overrideImage, overrideTitle]);\n    return {\n        displayImage: overrideImage || displayImage,\n        displayTitle: overrideTitle || displayTitle,\n        groupChannelDisplayInfo,\n    };\n};\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,eAAe,EAAEC,eAAe,EAAEC,0BAA0B,QAAQ,UAAU;AACvF,SAASC,cAAc,QAAQ,kBAAkB;AACjD,OAAO,MAAMC,qBAAqB,GAAIC,KAAK,IAAK;EAC5C,MAAM;IAAEC,OAAO;IAAEC,aAAa;IAAEC;EAAc,CAAC,GAAGH,KAAK;EACvD,MAAM;IAAEI;EAAO,CAAC,GAAGN,cAAc,CAAC,uBAAuB,CAAC;EAC1D,MAAM,CAACO,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,MAAMS,aAAa,IAAIP,eAAe,CAACK,OAAO,EAAEG,MAAM,CAACG,IAAI,CAAC,CAAC;EAC9G,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,MAAMQ,aAAa,IAAIP,eAAe,CAACM,OAAO,EAAEG,MAAM,CAACG,IAAI,CAAC,CAAC;EAC9G,MAAM,CAACG,uBAAuB,EAAEC,0BAA0B,CAAC,GAAGjB,QAAQ,CAAC,MAAMG,0BAA0B,CAACI,OAAO,CAAC,CAAC;EACjHR,SAAS,CAAC,MAAM;IACZ,IAAIU,aAAa,IAAID,aAAa,EAC9B;IACJ,MAAMU,UAAU,GAAGA,CAAA,KAAM;MACrB,IAAI,CAACT,aAAa,EACdG,eAAe,CAACV,eAAe,CAACK,OAAO,EAAEG,MAAM,CAACG,IAAI,CAAC,CAAC;MAC1D,IAAI,CAACL,aAAa,EAAE;QAChBO,eAAe,CAACd,eAAe,CAACM,OAAO,EAAEG,MAAM,CAACG,IAAI,CAAC,CAAC;QACtDI,0BAA0B,CAACd,0BAA0B,CAACI,OAAO,CAAC,CAAC;MACnE;IACJ,CAAC;IACDW,UAAU,CAAC,CAAC;IACZR,MAAM,CAACS,EAAE,CAAC,cAAc,EAAED,UAAU,CAAC;IACrC,OAAO,MAAM;MACTR,MAAM,CAACU,GAAG,CAAC,cAAc,EAAEF,UAAU,CAAC;IAC1C,CAAC;EACL,CAAC,EAAE,CAACX,OAAO,EAAEA,OAAO,CAACc,IAAI,EAAEX,MAAM,EAAEF,aAAa,EAAEC,aAAa,CAAC,CAAC;EACjE,OAAO;IACHK,YAAY,EAAEN,aAAa,IAAIM,YAAY;IAC3CH,YAAY,EAAEF,aAAa,IAAIE,YAAY;IAC3CK;EACJ,CAAC;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}