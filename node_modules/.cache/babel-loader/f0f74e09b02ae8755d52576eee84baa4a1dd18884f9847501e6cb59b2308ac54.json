{"ast":null,"code":"import { useChannelStateContext } from '../../../context/ChannelStateContext';\nimport { useChatContext } from '../../../context/ChatContext';\nexport const useUserRole = (message, onlySenderCanEdit, disableQuotedMessages) => {\n  var _client$user, _client$user2, _message$user;\n  const {\n    channel,\n    channelCapabilities = {}\n  } = useChannelStateContext('useUserRole');\n  const {\n    client\n  } = useChatContext('useUserRole');\n  /**\n   * @deprecated as it relies on `membership.role` check which is already deprecated and shouldn't be used anymore.\n   * `isAdmin` will be removed in future release. See `channelCapabilities`.\n   */\n  const isAdmin = ((_client$user = client.user) === null || _client$user === void 0 ? void 0 : _client$user.role) === 'admin' || channel.state.membership.role === 'admin';\n  /**\n   * @deprecated as it relies on `membership.role` check which is already deprecated and shouldn't be used anymore.\n   * `isOwner` will be removed in future release. See `channelCapabilities`.\n   */\n  const isOwner = channel.state.membership.role === 'owner';\n  /**\n   * @deprecated as it relies on `membership.role` check which is already deprecated and shouldn't be used anymore.\n   * `isModerator` will be removed in future release. See `channelCapabilities`.\n   */\n  const isModerator = ((_client$user2 = client.user) === null || _client$user2 === void 0 ? void 0 : _client$user2.role) === 'channel_moderator' || channel.state.membership.role === 'channel_moderator' || channel.state.membership.role === 'moderator' || channel.state.membership.is_moderator === true || channel.state.membership.channel_role === 'channel_moderator';\n  const isMyMessage = client.userID === ((_message$user = message.user) === null || _message$user === void 0 ? void 0 : _message$user.id);\n  const canEdit = !message.poll && (!onlySenderCanEdit && channelCapabilities['update-any-message'] || isMyMessage && channelCapabilities['update-own-message']);\n  const canDelete = channelCapabilities['delete-any-message'] || isMyMessage && channelCapabilities['delete-own-message'];\n  const canFlag = !isMyMessage && channelCapabilities['flag-message'];\n  const canMarkUnread = channelCapabilities['read-events'];\n  const canMute = !isMyMessage && channelCapabilities['mute-channel'];\n  const canQuote = !disableQuotedMessages && channelCapabilities['quote-message'];\n  const canReact = channelCapabilities['send-reaction'];\n  const canReply = channelCapabilities['send-reply'];\n  return {\n    canDelete,\n    canEdit,\n    canFlag,\n    canMarkUnread,\n    canMute,\n    canQuote,\n    canReact,\n    canReply,\n    isAdmin,\n    isModerator,\n    isMyMessage,\n    isOwner\n  };\n};","map":{"version":3,"names":["useChannelStateContext","useChatContext","useUserRole","message","onlySenderCanEdit","disableQuotedMessages","_client$user","_client$user2","_message$user","channel","channelCapabilities","client","isAdmin","user","role","state","membership","isOwner","isModerator","is_moderator","channel_role","isMyMessage","userID","id","canEdit","poll","canDelete","canFlag","canMarkUnread","canMute","canQuote","canReact","canReply"],"sources":["/tmp/daft-chat-temp/node_modules/stream-chat-react/dist/components/Message/hooks/useUserRole.js"],"sourcesContent":["import { useChannelStateContext } from '../../../context/ChannelStateContext';\nimport { useChatContext } from '../../../context/ChatContext';\nexport const useUserRole = (message, onlySenderCanEdit, disableQuotedMessages) => {\n    const { channel, channelCapabilities = {} } = useChannelStateContext('useUserRole');\n    const { client } = useChatContext('useUserRole');\n    /**\n     * @deprecated as it relies on `membership.role` check which is already deprecated and shouldn't be used anymore.\n     * `isAdmin` will be removed in future release. See `channelCapabilities`.\n     */\n    const isAdmin = client.user?.role === 'admin' || channel.state.membership.role === 'admin';\n    /**\n     * @deprecated as it relies on `membership.role` check which is already deprecated and shouldn't be used anymore.\n     * `isOwner` will be removed in future release. See `channelCapabilities`.\n     */\n    const isOwner = channel.state.membership.role === 'owner';\n    /**\n     * @deprecated as it relies on `membership.role` check which is already deprecated and shouldn't be used anymore.\n     * `isModerator` will be removed in future release. See `channelCapabilities`.\n     */\n    const isModerator = client.user?.role === 'channel_moderator' ||\n        channel.state.membership.role === 'channel_moderator' ||\n        channel.state.membership.role === 'moderator' ||\n        channel.state.membership.is_moderator === true ||\n        channel.state.membership.channel_role === 'channel_moderator';\n    const isMyMessage = client.userID === message.user?.id;\n    const canEdit = !message.poll &&\n        ((!onlySenderCanEdit && channelCapabilities['update-any-message']) ||\n            (isMyMessage && channelCapabilities['update-own-message']));\n    const canDelete = channelCapabilities['delete-any-message'] ||\n        (isMyMessage && channelCapabilities['delete-own-message']);\n    const canFlag = !isMyMessage && channelCapabilities['flag-message'];\n    const canMarkUnread = channelCapabilities['read-events'];\n    const canMute = !isMyMessage && channelCapabilities['mute-channel'];\n    const canQuote = !disableQuotedMessages && channelCapabilities['quote-message'];\n    const canReact = channelCapabilities['send-reaction'];\n    const canReply = channelCapabilities['send-reply'];\n    return {\n        canDelete,\n        canEdit,\n        canFlag,\n        canMarkUnread,\n        canMute,\n        canQuote,\n        canReact,\n        canReply,\n        isAdmin,\n        isModerator,\n        isMyMessage,\n        isOwner,\n    };\n};\n"],"mappings":"AAAA,SAASA,sBAAsB,QAAQ,sCAAsC;AAC7E,SAASC,cAAc,QAAQ,8BAA8B;AAC7D,OAAO,MAAMC,WAAW,GAAGA,CAACC,OAAO,EAAEC,iBAAiB,EAAEC,qBAAqB,KAAK;EAAA,IAAAC,YAAA,EAAAC,aAAA,EAAAC,aAAA;EAC9E,MAAM;IAAEC,OAAO;IAAEC,mBAAmB,GAAG,CAAC;EAAE,CAAC,GAAGV,sBAAsB,CAAC,aAAa,CAAC;EACnF,MAAM;IAAEW;EAAO,CAAC,GAAGV,cAAc,CAAC,aAAa,CAAC;EAChD;AACJ;AACA;AACA;EACI,MAAMW,OAAO,GAAG,EAAAN,YAAA,GAAAK,MAAM,CAACE,IAAI,cAAAP,YAAA,uBAAXA,YAAA,CAAaQ,IAAI,MAAK,OAAO,IAAIL,OAAO,CAACM,KAAK,CAACC,UAAU,CAACF,IAAI,KAAK,OAAO;EAC1F;AACJ;AACA;AACA;EACI,MAAMG,OAAO,GAAGR,OAAO,CAACM,KAAK,CAACC,UAAU,CAACF,IAAI,KAAK,OAAO;EACzD;AACJ;AACA;AACA;EACI,MAAMI,WAAW,GAAG,EAAAX,aAAA,GAAAI,MAAM,CAACE,IAAI,cAAAN,aAAA,uBAAXA,aAAA,CAAaO,IAAI,MAAK,mBAAmB,IACzDL,OAAO,CAACM,KAAK,CAACC,UAAU,CAACF,IAAI,KAAK,mBAAmB,IACrDL,OAAO,CAACM,KAAK,CAACC,UAAU,CAACF,IAAI,KAAK,WAAW,IAC7CL,OAAO,CAACM,KAAK,CAACC,UAAU,CAACG,YAAY,KAAK,IAAI,IAC9CV,OAAO,CAACM,KAAK,CAACC,UAAU,CAACI,YAAY,KAAK,mBAAmB;EACjE,MAAMC,WAAW,GAAGV,MAAM,CAACW,MAAM,OAAAd,aAAA,GAAKL,OAAO,CAACU,IAAI,cAAAL,aAAA,uBAAZA,aAAA,CAAce,EAAE;EACtD,MAAMC,OAAO,GAAG,CAACrB,OAAO,CAACsB,IAAI,KACvB,CAACrB,iBAAiB,IAAIM,mBAAmB,CAAC,oBAAoB,CAAC,IAC5DW,WAAW,IAAIX,mBAAmB,CAAC,oBAAoB,CAAE,CAAC;EACnE,MAAMgB,SAAS,GAAGhB,mBAAmB,CAAC,oBAAoB,CAAC,IACtDW,WAAW,IAAIX,mBAAmB,CAAC,oBAAoB,CAAE;EAC9D,MAAMiB,OAAO,GAAG,CAACN,WAAW,IAAIX,mBAAmB,CAAC,cAAc,CAAC;EACnE,MAAMkB,aAAa,GAAGlB,mBAAmB,CAAC,aAAa,CAAC;EACxD,MAAMmB,OAAO,GAAG,CAACR,WAAW,IAAIX,mBAAmB,CAAC,cAAc,CAAC;EACnE,MAAMoB,QAAQ,GAAG,CAACzB,qBAAqB,IAAIK,mBAAmB,CAAC,eAAe,CAAC;EAC/E,MAAMqB,QAAQ,GAAGrB,mBAAmB,CAAC,eAAe,CAAC;EACrD,MAAMsB,QAAQ,GAAGtB,mBAAmB,CAAC,YAAY,CAAC;EAClD,OAAO;IACHgB,SAAS;IACTF,OAAO;IACPG,OAAO;IACPC,aAAa;IACbC,OAAO;IACPC,QAAQ;IACRC,QAAQ;IACRC,QAAQ;IACRpB,OAAO;IACPM,WAAW;IACXG,WAAW;IACXJ;EACJ,CAAC;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}