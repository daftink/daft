{"ast":null,"code":"import React from 'react';\nimport { useTranslationContext } from '../../context/TranslationContext';\nimport { ChatBubble } from './icons';\nconst UnMemoizedEmptyStateIndicator = props => {\n  const {\n    listType\n  } = props;\n  const {\n    t\n  } = useTranslationContext('EmptyStateIndicator');\n  if (listType === 'thread') return null;\n  if (listType === 'channel') {\n    const text = t('You have no channels currently');\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: 'str-chat__channel-list-empty'\n    }, React.createElement(ChatBubble, null), React.createElement(\"p\", {\n      role: 'listitem'\n    }, text)));\n  }\n  if (listType === 'message') {\n    const text = t('No chats here yet…');\n    return React.createElement(\"div\", {\n      className: 'str-chat__empty-channel'\n    }, React.createElement(ChatBubble, null), React.createElement(\"p\", {\n      className: 'str-chat__empty-channel-text',\n      role: 'listitem'\n    }, text));\n  }\n  return React.createElement(\"p\", null, \"No items exist\");\n};\nexport const EmptyStateIndicator = React.memo(UnMemoizedEmptyStateIndicator);","map":{"version":3,"names":["React","useTranslationContext","ChatBubble","UnMemoizedEmptyStateIndicator","props","listType","t","text","createElement","Fragment","className","role","EmptyStateIndicator","memo"],"sources":["/tmp/daft-chat-temp/node_modules/stream-chat-react/dist/components/EmptyStateIndicator/EmptyStateIndicator.js"],"sourcesContent":["import React from 'react';\nimport { useTranslationContext } from '../../context/TranslationContext';\nimport { ChatBubble } from './icons';\nconst UnMemoizedEmptyStateIndicator = (props) => {\n    const { listType } = props;\n    const { t } = useTranslationContext('EmptyStateIndicator');\n    if (listType === 'thread')\n        return null;\n    if (listType === 'channel') {\n        const text = t('You have no channels currently');\n        return (React.createElement(React.Fragment, null,\n            React.createElement(\"div\", { className: 'str-chat__channel-list-empty' },\n                React.createElement(ChatBubble, null),\n                React.createElement(\"p\", { role: 'listitem' }, text))));\n    }\n    if (listType === 'message') {\n        const text = t('No chats here yet…');\n        return (React.createElement(\"div\", { className: 'str-chat__empty-channel' },\n            React.createElement(ChatBubble, null),\n            React.createElement(\"p\", { className: 'str-chat__empty-channel-text', role: 'listitem' }, text)));\n    }\n    return React.createElement(\"p\", null, \"No items exist\");\n};\nexport const EmptyStateIndicator = React.memo(UnMemoizedEmptyStateIndicator);\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,qBAAqB,QAAQ,kCAAkC;AACxE,SAASC,UAAU,QAAQ,SAAS;AACpC,MAAMC,6BAA6B,GAAIC,KAAK,IAAK;EAC7C,MAAM;IAAEC;EAAS,CAAC,GAAGD,KAAK;EAC1B,MAAM;IAAEE;EAAE,CAAC,GAAGL,qBAAqB,CAAC,qBAAqB,CAAC;EAC1D,IAAII,QAAQ,KAAK,QAAQ,EACrB,OAAO,IAAI;EACf,IAAIA,QAAQ,KAAK,SAAS,EAAE;IACxB,MAAME,IAAI,GAAGD,CAAC,CAAC,gCAAgC,CAAC;IAChD,OAAQN,KAAK,CAACQ,aAAa,CAACR,KAAK,CAACS,QAAQ,EAAE,IAAI,EAC5CT,KAAK,CAACQ,aAAa,CAAC,KAAK,EAAE;MAAEE,SAAS,EAAE;IAA+B,CAAC,EACpEV,KAAK,CAACQ,aAAa,CAACN,UAAU,EAAE,IAAI,CAAC,EACrCF,KAAK,CAACQ,aAAa,CAAC,GAAG,EAAE;MAAEG,IAAI,EAAE;IAAW,CAAC,EAAEJ,IAAI,CAAC,CAAC,CAAC;EAClE;EACA,IAAIF,QAAQ,KAAK,SAAS,EAAE;IACxB,MAAME,IAAI,GAAGD,CAAC,CAAC,oBAAoB,CAAC;IACpC,OAAQN,KAAK,CAACQ,aAAa,CAAC,KAAK,EAAE;MAAEE,SAAS,EAAE;IAA0B,CAAC,EACvEV,KAAK,CAACQ,aAAa,CAACN,UAAU,EAAE,IAAI,CAAC,EACrCF,KAAK,CAACQ,aAAa,CAAC,GAAG,EAAE;MAAEE,SAAS,EAAE,8BAA8B;MAAEC,IAAI,EAAE;IAAW,CAAC,EAAEJ,IAAI,CAAC,CAAC;EACxG;EACA,OAAOP,KAAK,CAACQ,aAAa,CAAC,GAAG,EAAE,IAAI,EAAE,gBAAgB,CAAC;AAC3D,CAAC;AACD,OAAO,MAAMI,mBAAmB,GAAGZ,KAAK,CAACa,IAAI,CAACV,6BAA6B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}