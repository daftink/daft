{"ast":null,"code":"import React from 'react';\nexport const EmoticonItem = props => {\n  var _entity$tokenizedDisp;\n  const {\n    entity\n  } = props;\n  const hasEntity = Object.keys(entity).length;\n  if (!hasEntity) return null;\n  const {\n    parts,\n    token\n  } = (_entity$tokenizedDisp = entity.tokenizedDisplayName) !== null && _entity$tokenizedDisp !== void 0 ? _entity$tokenizedDisp : {};\n  const renderName = () => {\n    var _parts$map;\n    return (_parts$map = parts === null || parts === void 0 ? void 0 : parts.map((part, i) => part.toLowerCase() === token ? React.createElement(\"span\", {\n      className: 'str-chat__emoji-item--highlight',\n      key: \"part-\".concat(i)\n    }, part) : React.createElement(\"span\", {\n      className: 'str-chat__emoji-item--part',\n      key: \"part-\".concat(i)\n    }, part))) !== null && _parts$map !== void 0 ? _parts$map : null;\n  };\n  return React.createElement(\"div\", {\n    className: 'str-chat__emoji-item'\n  }, React.createElement(\"span\", {\n    className: 'str-chat__emoji-item--entity'\n  }, entity.native), React.createElement(\"span\", {\n    className: 'str-chat__emoji-item--name'\n  }, renderName()));\n};","map":{"version":3,"names":["React","EmoticonItem","props","_entity$tokenizedDisp","entity","hasEntity","Object","keys","length","parts","token","tokenizedDisplayName","renderName","_parts$map","map","part","i","toLowerCase","createElement","className","key","concat","native"],"sources":["/tmp/daft-chat-temp/node_modules/stream-chat-react/dist/components/TextareaComposer/SuggestionList/EmoticonItem.js"],"sourcesContent":["import React from 'react';\nexport const EmoticonItem = (props) => {\n    const { entity } = props;\n    const hasEntity = Object.keys(entity).length;\n    if (!hasEntity)\n        return null;\n    const { parts, token } = entity.tokenizedDisplayName ?? {};\n    const renderName = () => parts?.map((part, i) => part.toLowerCase() === token ? (React.createElement(\"span\", { className: 'str-chat__emoji-item--highlight', key: `part-${i}` }, part)) : (React.createElement(\"span\", { className: 'str-chat__emoji-item--part', key: `part-${i}` }, part))) ?? null;\n    return (React.createElement(\"div\", { className: 'str-chat__emoji-item' },\n        React.createElement(\"span\", { className: 'str-chat__emoji-item--entity' }, entity.native),\n        React.createElement(\"span\", { className: 'str-chat__emoji-item--name' }, renderName())));\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAAA,IAAAC,qBAAA;EACnC,MAAM;IAAEC;EAAO,CAAC,GAAGF,KAAK;EACxB,MAAMG,SAAS,GAAGC,MAAM,CAACC,IAAI,CAACH,MAAM,CAAC,CAACI,MAAM;EAC5C,IAAI,CAACH,SAAS,EACV,OAAO,IAAI;EACf,MAAM;IAAEI,KAAK;IAAEC;EAAM,CAAC,IAAAP,qBAAA,GAAGC,MAAM,CAACO,oBAAoB,cAAAR,qBAAA,cAAAA,qBAAA,GAAI,CAAC,CAAC;EAC1D,MAAMS,UAAU,GAAGA,CAAA;IAAA,IAAAC,UAAA;IAAA,QAAAA,UAAA,GAAMJ,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEK,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,KAAKD,IAAI,CAACE,WAAW,CAAC,CAAC,KAAKP,KAAK,GAAIV,KAAK,CAACkB,aAAa,CAAC,MAAM,EAAE;MAAEC,SAAS,EAAE,iCAAiC;MAAEC,GAAG,UAAAC,MAAA,CAAUL,CAAC;IAAG,CAAC,EAAED,IAAI,CAAC,GAAKf,KAAK,CAACkB,aAAa,CAAC,MAAM,EAAE;MAAEC,SAAS,EAAE,4BAA4B;MAAEC,GAAG,UAAAC,MAAA,CAAUL,CAAC;IAAG,CAAC,EAAED,IAAI,CAAE,CAAC,cAAAF,UAAA,cAAAA,UAAA,GAAI,IAAI;EAAA;EACrS,OAAQb,KAAK,CAACkB,aAAa,CAAC,KAAK,EAAE;IAAEC,SAAS,EAAE;EAAuB,CAAC,EACpEnB,KAAK,CAACkB,aAAa,CAAC,MAAM,EAAE;IAAEC,SAAS,EAAE;EAA+B,CAAC,EAAEf,MAAM,CAACkB,MAAM,CAAC,EACzFtB,KAAK,CAACkB,aAAa,CAAC,MAAM,EAAE;IAAEC,SAAS,EAAE;EAA6B,CAAC,EAAEP,UAAU,CAAC,CAAC,CAAC,CAAC;AAC/F,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}