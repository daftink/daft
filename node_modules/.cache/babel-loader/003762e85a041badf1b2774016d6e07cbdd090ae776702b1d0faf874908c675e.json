{"ast":null,"code":"import { useEffect, useMemo, useState } from 'react';\nimport { useChannelStateContext, useChatContext } from '../../../context';\nexport const useCooldownTimer = () => {\n  var _client$user2;\n  const {\n    client,\n    latestMessageDatesByChannels\n  } = useChatContext('useCooldownTimer');\n  const {\n    channel,\n    messages = []\n  } = useChannelStateContext('useCooldownTimer');\n  const [cooldownRemaining, setCooldownRemaining] = useState();\n  const {\n    cooldown: cooldownInterval = 0,\n    own_capabilities\n  } = channel.data || {};\n  const skipCooldown = own_capabilities === null || own_capabilities === void 0 ? void 0 : own_capabilities.includes('skip-slow-mode');\n  const ownLatestMessageDate = useMemo(() => {\n    var _latestMessageDatesBy, _sort$find;\n    return (_latestMessageDatesBy = latestMessageDatesByChannels[channel.cid]) !== null && _latestMessageDatesBy !== void 0 ? _latestMessageDatesBy : (_sort$find = [...messages].sort((a, b) => {\n      var _b$created_at, _a$created_at;\n      return ((_b$created_at = b.created_at) === null || _b$created_at === void 0 ? void 0 : _b$created_at.getTime()) - ((_a$created_at = a.created_at) === null || _a$created_at === void 0 ? void 0 : _a$created_at.getTime());\n    }).find(v => {\n      var _v$user, _client$user;\n      return ((_v$user = v.user) === null || _v$user === void 0 ? void 0 : _v$user.id) === ((_client$user = client.user) === null || _client$user === void 0 ? void 0 : _client$user.id);\n    })) === null || _sort$find === void 0 ? void 0 : _sort$find.created_at;\n  }, [messages, (_client$user2 = client.user) === null || _client$user2 === void 0 ? void 0 : _client$user2.id, latestMessageDatesByChannels, channel.cid]);\n  useEffect(() => {\n    const timeSinceOwnLastMessage = ownLatestMessageDate ?\n    // prevent negative values\n    Math.max(0, (new Date().getTime() - ownLatestMessageDate.getTime()) / 1000) : undefined;\n    const remaining = !skipCooldown && typeof timeSinceOwnLastMessage !== 'undefined' && cooldownInterval > timeSinceOwnLastMessage ? Math.round(cooldownInterval - timeSinceOwnLastMessage) : 0;\n    setCooldownRemaining(remaining);\n    if (!remaining) return;\n    const timeout = setTimeout(() => {\n      setCooldownRemaining(0);\n    }, remaining * 1000);\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [cooldownInterval, ownLatestMessageDate, skipCooldown]);\n  return {\n    cooldownInterval,\n    cooldownRemaining,\n    setCooldownRemaining\n  };\n};","map":{"version":3,"names":["useEffect","useMemo","useState","useChannelStateContext","useChatContext","useCooldownTimer","_client$user2","client","latestMessageDatesByChannels","channel","messages","cooldownRemaining","setCooldownRemaining","cooldown","cooldownInterval","own_capabilities","data","skipCooldown","includes","ownLatestMessageDate","_latestMessageDatesBy","_sort$find","cid","sort","a","b","_b$created_at","_a$created_at","created_at","getTime","find","v","_v$user","_client$user","user","id","timeSinceOwnLastMessage","Math","max","Date","undefined","remaining","round","timeout","setTimeout","clearTimeout"],"sources":["/tmp/daft-chat-temp/node_modules/stream-chat-react/dist/components/MessageInput/hooks/useCooldownTimer.js"],"sourcesContent":["import { useEffect, useMemo, useState } from 'react';\nimport { useChannelStateContext, useChatContext } from '../../../context';\nexport const useCooldownTimer = () => {\n    const { client, latestMessageDatesByChannels } = useChatContext('useCooldownTimer');\n    const { channel, messages = [] } = useChannelStateContext('useCooldownTimer');\n    const [cooldownRemaining, setCooldownRemaining] = useState();\n    const { cooldown: cooldownInterval = 0, own_capabilities } = (channel.data ||\n        {});\n    const skipCooldown = own_capabilities?.includes('skip-slow-mode');\n    const ownLatestMessageDate = useMemo(() => latestMessageDatesByChannels[channel.cid] ??\n        [...messages]\n            .sort((a, b) => b.created_at?.getTime() - a.created_at?.getTime())\n            .find((v) => v.user?.id === client.user?.id)?.created_at, [messages, client.user?.id, latestMessageDatesByChannels, channel.cid]);\n    useEffect(() => {\n        const timeSinceOwnLastMessage = ownLatestMessageDate\n            ? // prevent negative values\n                Math.max(0, (new Date().getTime() - ownLatestMessageDate.getTime()) / 1000)\n            : undefined;\n        const remaining = !skipCooldown &&\n            typeof timeSinceOwnLastMessage !== 'undefined' &&\n            cooldownInterval > timeSinceOwnLastMessage\n            ? Math.round(cooldownInterval - timeSinceOwnLastMessage)\n            : 0;\n        setCooldownRemaining(remaining);\n        if (!remaining)\n            return;\n        const timeout = setTimeout(() => {\n            setCooldownRemaining(0);\n        }, remaining * 1000);\n        return () => {\n            clearTimeout(timeout);\n        };\n    }, [cooldownInterval, ownLatestMessageDate, skipCooldown]);\n    return {\n        cooldownInterval,\n        cooldownRemaining,\n        setCooldownRemaining,\n    };\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}