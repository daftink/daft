{"ast":null,"code":"import clsx from 'clsx';\nimport React, { useState } from 'react';\nimport { LinkPreviewsManager } from 'stream-chat';\nimport { useStateStore } from '../../store';\nimport { PopperTooltip } from '../Tooltip';\nimport { useEnterLeaveHandlers } from '../Tooltip/hooks';\nimport { useMessageComposer } from './hooks';\nimport { CloseIcon, LinkIcon } from './icons';\nconst linkPreviewsManagerStateSelector = state => ({\n  linkPreviews: Array.from(state.previews.values()).filter(preview => LinkPreviewsManager.previewIsLoaded(preview) || LinkPreviewsManager.previewIsLoading(preview))\n});\nconst messageComposerStateSelector = state => ({\n  quotedMessage: state.quotedMessage\n});\nexport const LinkPreviewList = () => {\n  const messageComposer = useMessageComposer();\n  const {\n    linkPreviewsManager\n  } = messageComposer;\n  const {\n    quotedMessage\n  } = useStateStore(messageComposer.state, messageComposerStateSelector);\n  const {\n    linkPreviews\n  } = useStateStore(linkPreviewsManager.state, linkPreviewsManagerStateSelector);\n  const showLinkPreviews = linkPreviews.length > 0 && !quotedMessage;\n  if (!showLinkPreviews) return null;\n  return React.createElement(\"div\", {\n    className: 'str-chat__link-preview-list'\n  }, linkPreviews.map(linkPreview => React.createElement(LinkPreviewCard, {\n    key: linkPreview.og_scrape_url,\n    linkPreview: linkPreview\n  })));\n};\nexport const LinkPreviewCard = _ref => {\n  let {\n    linkPreview\n  } = _ref;\n  const {\n    linkPreviewsManager\n  } = useMessageComposer();\n  const {\n    handleEnter,\n    handleLeave,\n    tooltipVisible\n  } = useEnterLeaveHandlers();\n  const [referenceElement, setReferenceElement] = useState(null);\n  if (!LinkPreviewsManager.previewIsLoaded(linkPreview) && !LinkPreviewsManager.previewIsLoading(linkPreview)) return null;\n  return React.createElement(\"div\", {\n    className: clsx('str-chat__link-preview-card', {\n      'str-chat__link-preview-card--loading': LinkPreviewsManager.previewIsLoading(linkPreview)\n    }),\n    \"data-testid\": 'link-preview-card'\n  }, React.createElement(PopperTooltip, {\n    offset: [0, 5],\n    referenceElement: referenceElement,\n    visible: tooltipVisible\n  }, linkPreview.og_scrape_url), React.createElement(\"div\", {\n    className: 'str-chat__link-preview-card__icon-container',\n    onMouseEnter: handleEnter,\n    onMouseLeave: handleLeave,\n    ref: setReferenceElement\n  }, React.createElement(LinkIcon, null)), React.createElement(\"div\", {\n    className: 'str-chat__link-preview-card__content'\n  }, React.createElement(\"div\", {\n    className: 'str-chat__link-preview-card__content-title'\n  }, linkPreview.title), React.createElement(\"div\", {\n    className: 'str-chat__link-preview-card__content-description'\n  }, linkPreview.text)), React.createElement(\"button\", {\n    className: 'str-chat__link-preview-card__dismiss-button',\n    \"data-testid\": 'link-preview-card-dismiss-btn',\n    onClick: () => linkPreviewsManager.dismissPreview(linkPreview.og_scrape_url),\n    type: 'button'\n  }, React.createElement(CloseIcon, null)));\n};","map":{"version":3,"names":["clsx","React","useState","LinkPreviewsManager","useStateStore","PopperTooltip","useEnterLeaveHandlers","useMessageComposer","CloseIcon","LinkIcon","linkPreviewsManagerStateSelector","state","linkPreviews","Array","from","previews","values","filter","preview","previewIsLoaded","previewIsLoading","messageComposerStateSelector","quotedMessage","LinkPreviewList","messageComposer","linkPreviewsManager","showLinkPreviews","length","createElement","className","map","linkPreview","LinkPreviewCard","key","og_scrape_url","_ref","handleEnter","handleLeave","tooltipVisible","referenceElement","setReferenceElement","offset","visible","onMouseEnter","onMouseLeave","ref","title","text","onClick","dismissPreview","type"],"sources":["/tmp/daft-chat-temp/node_modules/stream-chat-react/dist/components/MessageInput/LinkPreviewList.js"],"sourcesContent":["import clsx from 'clsx';\nimport React, { useState } from 'react';\nimport { LinkPreviewsManager } from 'stream-chat';\nimport { useStateStore } from '../../store';\nimport { PopperTooltip } from '../Tooltip';\nimport { useEnterLeaveHandlers } from '../Tooltip/hooks';\nimport { useMessageComposer } from './hooks';\nimport { CloseIcon, LinkIcon } from './icons';\nconst linkPreviewsManagerStateSelector = (state) => ({\n    linkPreviews: Array.from(state.previews.values()).filter((preview) => LinkPreviewsManager.previewIsLoaded(preview) ||\n        LinkPreviewsManager.previewIsLoading(preview)),\n});\nconst messageComposerStateSelector = (state) => ({\n    quotedMessage: state.quotedMessage,\n});\nexport const LinkPreviewList = () => {\n    const messageComposer = useMessageComposer();\n    const { linkPreviewsManager } = messageComposer;\n    const { quotedMessage } = useStateStore(messageComposer.state, messageComposerStateSelector);\n    const { linkPreviews } = useStateStore(linkPreviewsManager.state, linkPreviewsManagerStateSelector);\n    const showLinkPreviews = linkPreviews.length > 0 && !quotedMessage;\n    if (!showLinkPreviews)\n        return null;\n    return (React.createElement(\"div\", { className: 'str-chat__link-preview-list' }, linkPreviews.map((linkPreview) => (React.createElement(LinkPreviewCard, { key: linkPreview.og_scrape_url, linkPreview: linkPreview })))));\n};\nexport const LinkPreviewCard = ({ linkPreview }) => {\n    const { linkPreviewsManager } = useMessageComposer();\n    const { handleEnter, handleLeave, tooltipVisible } = useEnterLeaveHandlers();\n    const [referenceElement, setReferenceElement] = useState(null);\n    if (!LinkPreviewsManager.previewIsLoaded(linkPreview) &&\n        !LinkPreviewsManager.previewIsLoading(linkPreview))\n        return null;\n    return (React.createElement(\"div\", { className: clsx('str-chat__link-preview-card', {\n            'str-chat__link-preview-card--loading': LinkPreviewsManager.previewIsLoading(linkPreview),\n        }), \"data-testid\": 'link-preview-card' },\n        React.createElement(PopperTooltip, { offset: [0, 5], referenceElement: referenceElement, visible: tooltipVisible }, linkPreview.og_scrape_url),\n        React.createElement(\"div\", { className: 'str-chat__link-preview-card__icon-container', onMouseEnter: handleEnter, onMouseLeave: handleLeave, ref: setReferenceElement },\n            React.createElement(LinkIcon, null)),\n        React.createElement(\"div\", { className: 'str-chat__link-preview-card__content' },\n            React.createElement(\"div\", { className: 'str-chat__link-preview-card__content-title' }, linkPreview.title),\n            React.createElement(\"div\", { className: 'str-chat__link-preview-card__content-description' }, linkPreview.text)),\n        React.createElement(\"button\", { className: 'str-chat__link-preview-card__dismiss-button', \"data-testid\": 'link-preview-card-dismiss-btn', onClick: () => linkPreviewsManager.dismissPreview(linkPreview.og_scrape_url), type: 'button' },\n            React.createElement(CloseIcon, null))));\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}