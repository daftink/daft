{"ast":null,"code":"import React, { useRef } from 'react';\nimport { ReactionSelector as DefaultReactionSelector } from './ReactionSelector';\nimport { DialogAnchor, useDialog, useDialogIsOpen } from '../Dialog';\nimport { useComponentContext, useMessageContext, useTranslationContext } from '../../context';\n/**\n * Internal convenience component - not to be exported. It just groups the button and the dialog anchor and thus prevents\n * cluttering the parent component.\n */\nexport const ReactionSelectorWithButton = _ref => {\n  let {\n    ReactionIcon\n  } = _ref;\n  const {\n    t\n  } = useTranslationContext('ReactionSelectorWithButton');\n  const {\n    isMyMessage,\n    message\n  } = useMessageContext('MessageOptions');\n  const {\n    ReactionSelector = DefaultReactionSelector\n  } = useComponentContext('MessageOptions');\n  const buttonRef = useRef(null);\n  const dialogId = \"reaction-selector--\".concat(message.id);\n  const dialog = useDialog({\n    id: dialogId\n  });\n  const dialogIsOpen = useDialogIsOpen(dialogId);\n  return React.createElement(React.Fragment, null, React.createElement(DialogAnchor, {\n    id: dialogId,\n    placement: isMyMessage() ? 'top-end' : 'top-start',\n    referenceElement: buttonRef.current,\n    trapFocus: true\n  }, React.createElement(ReactionSelector, null)), React.createElement(\"button\", {\n    \"aria-expanded\": dialogIsOpen,\n    \"aria-label\": t('aria/Open Reaction Selector'),\n    className: 'str-chat__message-reactions-button',\n    \"data-testid\": 'message-reaction-action',\n    onClick: () => dialog === null || dialog === void 0 ? void 0 : dialog.toggle(),\n    ref: buttonRef\n  }, React.createElement(ReactionIcon, {\n    className: 'str-chat__message-action-icon'\n  })));\n};","map":{"version":3,"names":["React","useRef","ReactionSelector","DefaultReactionSelector","DialogAnchor","useDialog","useDialogIsOpen","useComponentContext","useMessageContext","useTranslationContext","ReactionSelectorWithButton","_ref","ReactionIcon","t","isMyMessage","message","buttonRef","dialogId","concat","id","dialog","dialogIsOpen","createElement","Fragment","placement","referenceElement","current","trapFocus","className","onClick","toggle","ref"],"sources":["/tmp/daft-chat-temp/node_modules/stream-chat-react/dist/components/Reactions/ReactionSelectorWithButton.js"],"sourcesContent":["import React, { useRef } from 'react';\nimport { ReactionSelector as DefaultReactionSelector } from './ReactionSelector';\nimport { DialogAnchor, useDialog, useDialogIsOpen } from '../Dialog';\nimport { useComponentContext, useMessageContext, useTranslationContext, } from '../../context';\n/**\n * Internal convenience component - not to be exported. It just groups the button and the dialog anchor and thus prevents\n * cluttering the parent component.\n */\nexport const ReactionSelectorWithButton = ({ ReactionIcon, }) => {\n    const { t } = useTranslationContext('ReactionSelectorWithButton');\n    const { isMyMessage, message } = useMessageContext('MessageOptions');\n    const { ReactionSelector = DefaultReactionSelector } = useComponentContext('MessageOptions');\n    const buttonRef = useRef(null);\n    const dialogId = `reaction-selector--${message.id}`;\n    const dialog = useDialog({ id: dialogId });\n    const dialogIsOpen = useDialogIsOpen(dialogId);\n    return (React.createElement(React.Fragment, null,\n        React.createElement(DialogAnchor, { id: dialogId, placement: isMyMessage() ? 'top-end' : 'top-start', referenceElement: buttonRef.current, trapFocus: true },\n            React.createElement(ReactionSelector, null)),\n        React.createElement(\"button\", { \"aria-expanded\": dialogIsOpen, \"aria-label\": t('aria/Open Reaction Selector'), className: 'str-chat__message-reactions-button', \"data-testid\": 'message-reaction-action', onClick: () => dialog?.toggle(), ref: buttonRef },\n            React.createElement(ReactionIcon, { className: 'str-chat__message-action-icon' }))));\n};\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AACrC,SAASC,gBAAgB,IAAIC,uBAAuB,QAAQ,oBAAoB;AAChF,SAASC,YAAY,EAAEC,SAAS,EAAEC,eAAe,QAAQ,WAAW;AACpE,SAASC,mBAAmB,EAAEC,iBAAiB,EAAEC,qBAAqB,QAAS,eAAe;AAC9F;AACA;AACA;AACA;AACA,OAAO,MAAMC,0BAA0B,GAAGC,IAAA,IAAuB;EAAA,IAAtB;IAAEC;EAAc,CAAC,GAAAD,IAAA;EACxD,MAAM;IAAEE;EAAE,CAAC,GAAGJ,qBAAqB,CAAC,4BAA4B,CAAC;EACjE,MAAM;IAAEK,WAAW;IAAEC;EAAQ,CAAC,GAAGP,iBAAiB,CAAC,gBAAgB,CAAC;EACpE,MAAM;IAAEN,gBAAgB,GAAGC;EAAwB,CAAC,GAAGI,mBAAmB,CAAC,gBAAgB,CAAC;EAC5F,MAAMS,SAAS,GAAGf,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMgB,QAAQ,yBAAAC,MAAA,CAAyBH,OAAO,CAACI,EAAE,CAAE;EACnD,MAAMC,MAAM,GAAGf,SAAS,CAAC;IAAEc,EAAE,EAAEF;EAAS,CAAC,CAAC;EAC1C,MAAMI,YAAY,GAAGf,eAAe,CAACW,QAAQ,CAAC;EAC9C,OAAQjB,KAAK,CAACsB,aAAa,CAACtB,KAAK,CAACuB,QAAQ,EAAE,IAAI,EAC5CvB,KAAK,CAACsB,aAAa,CAAClB,YAAY,EAAE;IAAEe,EAAE,EAAEF,QAAQ;IAAEO,SAAS,EAAEV,WAAW,CAAC,CAAC,GAAG,SAAS,GAAG,WAAW;IAAEW,gBAAgB,EAAET,SAAS,CAACU,OAAO;IAAEC,SAAS,EAAE;EAAK,CAAC,EACxJ3B,KAAK,CAACsB,aAAa,CAACpB,gBAAgB,EAAE,IAAI,CAAC,CAAC,EAChDF,KAAK,CAACsB,aAAa,CAAC,QAAQ,EAAE;IAAE,eAAe,EAAED,YAAY;IAAE,YAAY,EAAER,CAAC,CAAC,6BAA6B,CAAC;IAAEe,SAAS,EAAE,oCAAoC;IAAE,aAAa,EAAE,yBAAyB;IAAEC,OAAO,EAAEA,CAAA,KAAMT,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEU,MAAM,CAAC,CAAC;IAAEC,GAAG,EAAEf;EAAU,CAAC,EACvPhB,KAAK,CAACsB,aAAa,CAACV,YAAY,EAAE;IAAEgB,SAAS,EAAE;EAAgC,CAAC,CAAC,CAAC,CAAC;AAC/F,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}