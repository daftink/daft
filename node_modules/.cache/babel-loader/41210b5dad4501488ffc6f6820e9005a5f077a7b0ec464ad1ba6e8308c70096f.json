{"ast":null,"code":"import React from 'react';\nimport { useTranslationContext } from '../../../context';\nimport { FileIcon } from '../../ReactFileUtilities';\nimport { CloseIcon, DownloadIcon, LoadingIndicatorIcon, RetryIcon } from '../icons';\nexport const FileAttachmentPreview = _ref => {\n  var _attachment$localMeta;\n  let {\n    attachment,\n    handleRetry,\n    removeAttachments\n  } = _ref;\n  const {\n    t\n  } = useTranslationContext('FilePreview');\n  const uploadState = (_attachment$localMeta = attachment.localMetadata) === null || _attachment$localMeta === void 0 ? void 0 : _attachment$localMeta.uploadState;\n  return React.createElement(\"div\", {\n    className: 'str-chat__attachment-preview-file',\n    \"data-testid\": 'attachment-preview-file'\n  }, React.createElement(\"div\", {\n    className: 'str-chat__attachment-preview-file-icon'\n  }, React.createElement(FileIcon, {\n    filename: attachment.title,\n    mimeType: attachment.mime_type\n  })), React.createElement(\"button\", {\n    \"aria-label\": t('aria/Remove attachment'),\n    className: 'str-chat__attachment-preview-delete',\n    \"data-testid\": 'file-preview-item-delete-button',\n    disabled: uploadState === 'uploading',\n    onClick: () => {\n      var _attachment$localMeta2, _attachment$localMeta3;\n      return ((_attachment$localMeta2 = attachment.localMetadata) === null || _attachment$localMeta2 === void 0 ? void 0 : _attachment$localMeta2.id) && removeAttachments([(_attachment$localMeta3 = attachment.localMetadata) === null || _attachment$localMeta3 === void 0 ? void 0 : _attachment$localMeta3.id]);\n    }\n  }, React.createElement(CloseIcon, null)), ['blocked', 'failed'].includes(uploadState) && !!handleRetry && React.createElement(\"button\", {\n    className: 'str-chat__attachment-preview-error str-chat__attachment-preview-error-file',\n    \"data-testid\": 'file-preview-item-retry-button',\n    onClick: () => {\n      handleRetry(attachment);\n    }\n  }, React.createElement(RetryIcon, null)), React.createElement(\"div\", {\n    className: 'str-chat__attachment-preview-file-end'\n  }, React.createElement(\"div\", {\n    className: 'str-chat__attachment-preview-file-name',\n    title: attachment.title\n  }, attachment.title), (typeof uploadState === 'undefined' || uploadState === 'finished') && !!attachment.asset_url && React.createElement(\"a\", {\n    \"aria-label\": t('aria/Download attachment'),\n    className: 'str-chat__attachment-preview-file-download',\n    download: true,\n    href: attachment.asset_url,\n    rel: 'noreferrer',\n    target: '_blank',\n    title: t('Download attachment {{ name }}', {\n      name: attachment.title\n    })\n  }, React.createElement(DownloadIcon, null)), uploadState === 'uploading' && React.createElement(LoadingIndicatorIcon, {\n    size: 17\n  })));\n};","map":{"version":3,"names":["React","useTranslationContext","FileIcon","CloseIcon","DownloadIcon","LoadingIndicatorIcon","RetryIcon","FileAttachmentPreview","_ref","_attachment$localMeta","attachment","handleRetry","removeAttachments","t","uploadState","localMetadata","createElement","className","filename","title","mimeType","mime_type","disabled","onClick","_attachment$localMeta2","_attachment$localMeta3","id","includes","asset_url","download","href","rel","target","name","size"],"sources":["/tmp/daft-chat-temp/node_modules/stream-chat-react/dist/components/MessageInput/AttachmentPreviewList/FileAttachmentPreview.js"],"sourcesContent":["import React from 'react';\nimport { useTranslationContext } from '../../../context';\nimport { FileIcon } from '../../ReactFileUtilities';\nimport { CloseIcon, DownloadIcon, LoadingIndicatorIcon, RetryIcon } from '../icons';\nexport const FileAttachmentPreview = ({ attachment, handleRetry, removeAttachments, }) => {\n    const { t } = useTranslationContext('FilePreview');\n    const uploadState = attachment.localMetadata?.uploadState;\n    return (React.createElement(\"div\", { className: 'str-chat__attachment-preview-file', \"data-testid\": 'attachment-preview-file' },\n        React.createElement(\"div\", { className: 'str-chat__attachment-preview-file-icon' },\n            React.createElement(FileIcon, { filename: attachment.title, mimeType: attachment.mime_type })),\n        React.createElement(\"button\", { \"aria-label\": t('aria/Remove attachment'), className: 'str-chat__attachment-preview-delete', \"data-testid\": 'file-preview-item-delete-button', disabled: uploadState === 'uploading', onClick: () => attachment.localMetadata?.id &&\n                removeAttachments([attachment.localMetadata?.id]) },\n            React.createElement(CloseIcon, null)),\n        ['blocked', 'failed'].includes(uploadState) && !!handleRetry && (React.createElement(\"button\", { className: 'str-chat__attachment-preview-error str-chat__attachment-preview-error-file', \"data-testid\": 'file-preview-item-retry-button', onClick: () => {\n                handleRetry(attachment);\n            } },\n            React.createElement(RetryIcon, null))),\n        React.createElement(\"div\", { className: 'str-chat__attachment-preview-file-end' },\n            React.createElement(\"div\", { className: 'str-chat__attachment-preview-file-name', title: attachment.title }, attachment.title),\n            (typeof uploadState === 'undefined' || uploadState === 'finished') &&\n                !!attachment.asset_url && (React.createElement(\"a\", { \"aria-label\": t('aria/Download attachment'), className: 'str-chat__attachment-preview-file-download', download: true, href: attachment.asset_url, rel: 'noreferrer', target: '_blank', title: t('Download attachment {{ name }}', { name: attachment.title }) },\n                React.createElement(DownloadIcon, null))),\n            uploadState === 'uploading' && React.createElement(LoadingIndicatorIcon, { size: 17 }))));\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,qBAAqB,QAAQ,kBAAkB;AACxD,SAASC,QAAQ,QAAQ,0BAA0B;AACnD,SAASC,SAAS,EAAEC,YAAY,EAAEC,oBAAoB,EAAEC,SAAS,QAAQ,UAAU;AACnF,OAAO,MAAMC,qBAAqB,GAAGC,IAAA,IAAqD;EAAA,IAAAC,qBAAA;EAAA,IAApD;IAAEC,UAAU;IAAEC,WAAW;IAAEC;EAAmB,CAAC,GAAAJ,IAAA;EACjF,MAAM;IAAEK;EAAE,CAAC,GAAGZ,qBAAqB,CAAC,aAAa,CAAC;EAClD,MAAMa,WAAW,IAAAL,qBAAA,GAAGC,UAAU,CAACK,aAAa,cAAAN,qBAAA,uBAAxBA,qBAAA,CAA0BK,WAAW;EACzD,OAAQd,KAAK,CAACgB,aAAa,CAAC,KAAK,EAAE;IAAEC,SAAS,EAAE,mCAAmC;IAAE,aAAa,EAAE;EAA0B,CAAC,EAC3HjB,KAAK,CAACgB,aAAa,CAAC,KAAK,EAAE;IAAEC,SAAS,EAAE;EAAyC,CAAC,EAC9EjB,KAAK,CAACgB,aAAa,CAACd,QAAQ,EAAE;IAAEgB,QAAQ,EAAER,UAAU,CAACS,KAAK;IAAEC,QAAQ,EAAEV,UAAU,CAACW;EAAU,CAAC,CAAC,CAAC,EAClGrB,KAAK,CAACgB,aAAa,CAAC,QAAQ,EAAE;IAAE,YAAY,EAAEH,CAAC,CAAC,wBAAwB,CAAC;IAAEI,SAAS,EAAE,qCAAqC;IAAE,aAAa,EAAE,iCAAiC;IAAEK,QAAQ,EAAER,WAAW,KAAK,WAAW;IAAES,OAAO,EAAEA,CAAA;MAAA,IAAAC,sBAAA,EAAAC,sBAAA;MAAA,OAAM,EAAAD,sBAAA,GAAAd,UAAU,CAACK,aAAa,cAAAS,sBAAA,uBAAxBA,sBAAA,CAA0BE,EAAE,KACzPd,iBAAiB,CAAC,EAAAa,sBAAA,GAACf,UAAU,CAACK,aAAa,cAAAU,sBAAA,uBAAxBA,sBAAA,CAA0BC,EAAE,CAAC,CAAC;IAAA;EAAC,CAAC,EACvD1B,KAAK,CAACgB,aAAa,CAACb,SAAS,EAAE,IAAI,CAAC,CAAC,EACzC,CAAC,SAAS,EAAE,QAAQ,CAAC,CAACwB,QAAQ,CAACb,WAAW,CAAC,IAAI,CAAC,CAACH,WAAW,IAAKX,KAAK,CAACgB,aAAa,CAAC,QAAQ,EAAE;IAAEC,SAAS,EAAE,4EAA4E;IAAE,aAAa,EAAE,gCAAgC;IAAEM,OAAO,EAAEA,CAAA,KAAM;MAClPZ,WAAW,CAACD,UAAU,CAAC;IAC3B;EAAE,CAAC,EACHV,KAAK,CAACgB,aAAa,CAACV,SAAS,EAAE,IAAI,CAAC,CAAE,EAC1CN,KAAK,CAACgB,aAAa,CAAC,KAAK,EAAE;IAAEC,SAAS,EAAE;EAAwC,CAAC,EAC7EjB,KAAK,CAACgB,aAAa,CAAC,KAAK,EAAE;IAAEC,SAAS,EAAE,wCAAwC;IAAEE,KAAK,EAAET,UAAU,CAACS;EAAM,CAAC,EAAET,UAAU,CAACS,KAAK,CAAC,EAC9H,CAAC,OAAOL,WAAW,KAAK,WAAW,IAAIA,WAAW,KAAK,UAAU,KAC7D,CAAC,CAACJ,UAAU,CAACkB,SAAS,IAAK5B,KAAK,CAACgB,aAAa,CAAC,GAAG,EAAE;IAAE,YAAY,EAAEH,CAAC,CAAC,0BAA0B,CAAC;IAAEI,SAAS,EAAE,4CAA4C;IAAEY,QAAQ,EAAE,IAAI;IAAEC,IAAI,EAAEpB,UAAU,CAACkB,SAAS;IAAEG,GAAG,EAAE,YAAY;IAAEC,MAAM,EAAE,QAAQ;IAAEb,KAAK,EAAEN,CAAC,CAAC,gCAAgC,EAAE;MAAEoB,IAAI,EAAEvB,UAAU,CAACS;IAAM,CAAC;EAAE,CAAC,EACrTnB,KAAK,CAACgB,aAAa,CAACZ,YAAY,EAAE,IAAI,CAAC,CAAE,EAC7CU,WAAW,KAAK,WAAW,IAAId,KAAK,CAACgB,aAAa,CAACX,oBAAoB,EAAE;IAAE6B,IAAI,EAAE;EAAG,CAAC,CAAC,CAAC,CAAC;AACpG,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}