{"ast":null,"code":"import React, { useCallback } from 'react';\nimport { VotingVisibility } from 'stream-chat';\nimport { MultipleAnswersField } from './MultipleAnswersField';\nimport { NameField } from './NameField';\nimport { OptionFieldSet } from './OptionFieldSet';\nimport { PollCreationDialogControls } from './PollCreationDialogControls';\nimport { ModalHeader } from '../../Modal/ModalHeader';\nimport { SimpleSwitchField } from '../../Form/SwitchField';\nimport { useMessageComposer } from '../../MessageInput';\nimport { useTranslationContext } from '../../../context';\nimport { useStateStore } from '../../../store';\nconst pollComposerStateSelector = state => ({\n  allow_answers: state.data.allow_answers,\n  allow_user_suggested_options: state.data.allow_user_suggested_options,\n  voting_visibility: state.data.voting_visibility\n});\nexport const PollCreationDialog = _ref => {\n  let {\n    close\n  } = _ref;\n  const {\n    t\n  } = useTranslationContext();\n  const {\n    pollComposer\n  } = useMessageComposer();\n  const {\n    allow_answers,\n    allow_user_suggested_options,\n    voting_visibility\n  } = useStateStore(pollComposer.state, pollComposerStateSelector);\n  const onClose = useCallback(() => {\n    pollComposer.initState();\n    close();\n  }, [pollComposer, close]);\n  return React.createElement(\"div\", {\n    className: 'str-chat__dialog str-chat__poll-creation-dialog',\n    \"data-testid\": 'poll-creation-dialog'\n  }, React.createElement(ModalHeader, {\n    close: onClose,\n    title: t('Create poll')\n  }), React.createElement(\"div\", {\n    className: 'str-chat__dialog__body'\n  }, React.createElement(\"form\", {\n    autoComplete: 'off'\n  }, React.createElement(NameField, null), React.createElement(OptionFieldSet, null), React.createElement(MultipleAnswersField, null), React.createElement(SimpleSwitchField, {\n    checked: voting_visibility === 'anonymous',\n    id: 'voting_visibility',\n    labelText: t('Anonymous poll'),\n    onChange: e => pollComposer.updateFields({\n      voting_visibility: e.target.checked ? VotingVisibility.anonymous : VotingVisibility.public\n    })\n  }), React.createElement(SimpleSwitchField, {\n    checked: allow_user_suggested_options,\n    id: 'allow_user_suggested_options',\n    labelText: t('Allow option suggestion'),\n    onChange: e => pollComposer.updateFields({\n      allow_user_suggested_options: e.target.checked\n    })\n  }), React.createElement(SimpleSwitchField, {\n    checked: allow_answers,\n    id: 'allow_answers',\n    labelText: t('Allow comments'),\n    onChange: e => pollComposer.updateFields({\n      allow_answers: e.target.checked\n    })\n  }))), React.createElement(PollCreationDialogControls, {\n    close: close\n  }));\n};","map":{"version":3,"names":["React","useCallback","VotingVisibility","MultipleAnswersField","NameField","OptionFieldSet","PollCreationDialogControls","ModalHeader","SimpleSwitchField","useMessageComposer","useTranslationContext","useStateStore","pollComposerStateSelector","state","allow_answers","data","allow_user_suggested_options","voting_visibility","PollCreationDialog","_ref","close","t","pollComposer","onClose","initState","createElement","className","title","autoComplete","checked","id","labelText","onChange","e","updateFields","target","anonymous","public"],"sources":["/tmp/daft-chat-temp/node_modules/stream-chat-react/dist/components/Poll/PollCreationDialog/PollCreationDialog.js"],"sourcesContent":["import React, { useCallback } from 'react';\nimport { VotingVisibility } from 'stream-chat';\nimport { MultipleAnswersField } from './MultipleAnswersField';\nimport { NameField } from './NameField';\nimport { OptionFieldSet } from './OptionFieldSet';\nimport { PollCreationDialogControls } from './PollCreationDialogControls';\nimport { ModalHeader } from '../../Modal/ModalHeader';\nimport { SimpleSwitchField } from '../../Form/SwitchField';\nimport { useMessageComposer } from '../../MessageInput';\nimport { useTranslationContext } from '../../../context';\nimport { useStateStore } from '../../../store';\nconst pollComposerStateSelector = (state) => ({\n    allow_answers: state.data.allow_answers,\n    allow_user_suggested_options: state.data.allow_user_suggested_options,\n    voting_visibility: state.data.voting_visibility,\n});\nexport const PollCreationDialog = ({ close }) => {\n    const { t } = useTranslationContext();\n    const { pollComposer } = useMessageComposer();\n    const { allow_answers, allow_user_suggested_options, voting_visibility } = useStateStore(pollComposer.state, pollComposerStateSelector);\n    const onClose = useCallback(() => {\n        pollComposer.initState();\n        close();\n    }, [pollComposer, close]);\n    return (React.createElement(\"div\", { className: 'str-chat__dialog str-chat__poll-creation-dialog', \"data-testid\": 'poll-creation-dialog' },\n        React.createElement(ModalHeader, { close: onClose, title: t('Create poll') }),\n        React.createElement(\"div\", { className: 'str-chat__dialog__body' },\n            React.createElement(\"form\", { autoComplete: 'off' },\n                React.createElement(NameField, null),\n                React.createElement(OptionFieldSet, null),\n                React.createElement(MultipleAnswersField, null),\n                React.createElement(SimpleSwitchField, { checked: voting_visibility === 'anonymous', id: 'voting_visibility', labelText: t('Anonymous poll'), onChange: (e) => pollComposer.updateFields({\n                        voting_visibility: e.target.checked\n                            ? VotingVisibility.anonymous\n                            : VotingVisibility.public,\n                    }) }),\n                React.createElement(SimpleSwitchField, { checked: allow_user_suggested_options, id: 'allow_user_suggested_options', labelText: t('Allow option suggestion'), onChange: (e) => pollComposer.updateFields({\n                        allow_user_suggested_options: e.target.checked,\n                    }) }),\n                React.createElement(SimpleSwitchField, { checked: allow_answers, id: 'allow_answers', labelText: t('Allow comments'), onChange: (e) => pollComposer.updateFields({ allow_answers: e.target.checked }) }))),\n        React.createElement(PollCreationDialogControls, { close: close })));\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}