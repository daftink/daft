{"ast":null,"code":"import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nexport const DragAndDropContainer = _ref => {\n  let {\n    children,\n    className,\n    draggable,\n    onSetNewOrder\n  } = _ref;\n  const [order, setOrder] = useState([]);\n  const [dragStartIndex, setDragStartIndex] = useState(null);\n  const [dragOverIndex, setDragOverIndex] = useState(null);\n  const [container, setContainer] = useState(null);\n  const moveDirection = dragStartIndex === null || dragOverIndex === null ? undefined : dragStartIndex <= dragOverIndex ? 'down' : 'up';\n  const childrenArray = React.Children.toArray(children);\n  useEffect(() => {\n    setOrder(React.Children.map(children, (_, index) => index) || []);\n  }, [children]);\n  useEffect(() => {\n    if (!container) return;\n    const handleDragStart = e => {\n      const target = e.target;\n      const draggableItem = target.closest('.str-chat__drag-and-drop-container__item');\n      if (e.dataTransfer) {\n        e.dataTransfer.effectAllowed = 'move';\n      }\n      if (draggableItem instanceof HTMLElement) {\n        var _draggableItem$parent, _e$dataTransfer;\n        const index = Array.from(((_draggableItem$parent = draggableItem.parentElement) === null || _draggableItem$parent === void 0 ? void 0 : _draggableItem$parent.children) || []).indexOf(draggableItem);\n        setDragStartIndex(index);\n        (_e$dataTransfer = e.dataTransfer) === null || _e$dataTransfer === void 0 || _e$dataTransfer.setData('text/plain', index.toString());\n        draggableItem.style.opacity = '0.3';\n      }\n    };\n    const handleDragOver = e => {\n      e.preventDefault();\n      const target = e.target;\n      const draggableItem = target.closest('.str-chat__drag-and-drop-container__item');\n      if (draggableItem instanceof HTMLElement) {\n        var _draggableItem$parent2;\n        const index = Array.from(((_draggableItem$parent2 = draggableItem.parentElement) === null || _draggableItem$parent2 === void 0 ? void 0 : _draggableItem$parent2.children) || []).indexOf(draggableItem);\n        setDragOverIndex(index);\n      }\n    };\n    const handleDragLeave = () => {\n      setDragOverIndex(null);\n    };\n    const handleDrop = e => {\n      var _e$dataTransfer2;\n      e.preventDefault();\n      const draggedIndex = parseInt(((_e$dataTransfer2 = e.dataTransfer) === null || _e$dataTransfer2 === void 0 ? void 0 : _e$dataTransfer2.getData('text/plain')) || '-1', 10);\n      const target = e.target;\n      const draggableItem = target.closest('.str-chat__drag-and-drop-container__item');\n      if (draggableItem instanceof HTMLElement) {\n        var _draggableItem$parent3;\n        const dropIndex = Array.from(((_draggableItem$parent3 = draggableItem.parentElement) === null || _draggableItem$parent3 === void 0 ? void 0 : _draggableItem$parent3.children) || []).indexOf(draggableItem);\n        if (draggedIndex !== -1 && draggedIndex !== dropIndex) {\n          setOrder(prevOrder => {\n            const newOrder = [...prevOrder];\n            const [removed] = newOrder.splice(draggedIndex, 1);\n            newOrder.splice(dropIndex, 0, removed);\n            onSetNewOrder === null || onSetNewOrder === void 0 || onSetNewOrder(newOrder);\n            return newOrder;\n          });\n        }\n      }\n      setDragStartIndex(null);\n      setDragOverIndex(null);\n    };\n    const handleDragEnd = e => {\n      const target = e.target;\n      if (target instanceof HTMLElement) {\n        target.style.opacity = '';\n      }\n      setDragStartIndex(null);\n      setDragOverIndex(null);\n    };\n    container.addEventListener('dragstart', handleDragStart);\n    container.addEventListener('dragover', handleDragOver);\n    container.addEventListener('dragleave', handleDragLeave);\n    container.addEventListener('drop', handleDrop);\n    container.addEventListener('dragend', handleDragEnd);\n    return () => {\n      container.removeEventListener('dragstart', handleDragStart);\n      container.removeEventListener('dragover', handleDragOver);\n      container.removeEventListener('dragleave', handleDragLeave);\n      container.removeEventListener('drop', handleDrop);\n      container.removeEventListener('dragend', handleDragEnd);\n    };\n  }, [container, onSetNewOrder]);\n  return React.createElement(\"div\", {\n    className: clsx('str-chat__drag-and-drop-container', className),\n    ref: setContainer\n  }, order.map((originalIndex, currentIndex) => {\n    const child = childrenArray[originalIndex];\n    return React.createElement(\"div\", {\n      className: clsx('str-chat__drag-and-drop-container__item', {\n        'str-chat__drag-and-drop-container__item--dragged-over-from-bottom': moveDirection === 'up' && dragOverIndex === currentIndex,\n        'str-chat__drag-and-drop-container__item--dragged-over-from-top': moveDirection === 'down' && dragOverIndex === currentIndex\n      }),\n      draggable: draggable,\n      key: React.isValidElement(child) ? child.key : \"draggable-item-\".concat(originalIndex)\n    }, child);\n  }));\n};","map":{"version":3,"names":["React","useEffect","useState","clsx","DragAndDropContainer","_ref","children","className","draggable","onSetNewOrder","order","setOrder","dragStartIndex","setDragStartIndex","dragOverIndex","setDragOverIndex","container","setContainer","moveDirection","undefined","childrenArray","Children","toArray","map","_","index","handleDragStart","e","target","draggableItem","closest","dataTransfer","effectAllowed","HTMLElement","_draggableItem$parent","_e$dataTransfer","Array","from","parentElement","indexOf","setData","toString","style","opacity","handleDragOver","preventDefault","_draggableItem$parent2","handleDragLeave","handleDrop","_e$dataTransfer2","draggedIndex","parseInt","getData","_draggableItem$parent3","dropIndex","prevOrder","newOrder","removed","splice","handleDragEnd","addEventListener","removeEventListener","createElement","ref","originalIndex","currentIndex","child","key","isValidElement","concat"],"sources":["/tmp/daft-chat-temp/node_modules/stream-chat-react/dist/components/DragAndDrop/DragAndDropContainer.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nexport const DragAndDropContainer = ({ children, className, draggable, onSetNewOrder, }) => {\n    const [order, setOrder] = useState([]);\n    const [dragStartIndex, setDragStartIndex] = useState(null);\n    const [dragOverIndex, setDragOverIndex] = useState(null);\n    const [container, setContainer] = useState(null);\n    const moveDirection = dragStartIndex === null || dragOverIndex === null\n        ? undefined\n        : dragStartIndex <= dragOverIndex\n            ? 'down'\n            : 'up';\n    const childrenArray = React.Children.toArray(children);\n    useEffect(() => {\n        setOrder(React.Children.map(children, (_, index) => index) || []);\n    }, [children]);\n    useEffect(() => {\n        if (!container)\n            return;\n        const handleDragStart = (e) => {\n            const target = e.target;\n            const draggableItem = target.closest('.str-chat__drag-and-drop-container__item');\n            if (e.dataTransfer) {\n                e.dataTransfer.effectAllowed = 'move';\n            }\n            if (draggableItem instanceof HTMLElement) {\n                const index = Array.from(draggableItem.parentElement?.children || []).indexOf(draggableItem);\n                setDragStartIndex(index);\n                e.dataTransfer?.setData('text/plain', index.toString());\n                draggableItem.style.opacity = '0.3';\n            }\n        };\n        const handleDragOver = (e) => {\n            e.preventDefault();\n            const target = e.target;\n            const draggableItem = target.closest('.str-chat__drag-and-drop-container__item');\n            if (draggableItem instanceof HTMLElement) {\n                const index = Array.from(draggableItem.parentElement?.children || []).indexOf(draggableItem);\n                setDragOverIndex(index);\n            }\n        };\n        const handleDragLeave = () => {\n            setDragOverIndex(null);\n        };\n        const handleDrop = (e) => {\n            e.preventDefault();\n            const draggedIndex = parseInt(e.dataTransfer?.getData('text/plain') || '-1', 10);\n            const target = e.target;\n            const draggableItem = target.closest('.str-chat__drag-and-drop-container__item');\n            if (draggableItem instanceof HTMLElement) {\n                const dropIndex = Array.from(draggableItem.parentElement?.children || []).indexOf(draggableItem);\n                if (draggedIndex !== -1 && draggedIndex !== dropIndex) {\n                    setOrder((prevOrder) => {\n                        const newOrder = [...prevOrder];\n                        const [removed] = newOrder.splice(draggedIndex, 1);\n                        newOrder.splice(dropIndex, 0, removed);\n                        onSetNewOrder?.(newOrder);\n                        return newOrder;\n                    });\n                }\n            }\n            setDragStartIndex(null);\n            setDragOverIndex(null);\n        };\n        const handleDragEnd = (e) => {\n            const target = e.target;\n            if (target instanceof HTMLElement) {\n                target.style.opacity = '';\n            }\n            setDragStartIndex(null);\n            setDragOverIndex(null);\n        };\n        container.addEventListener('dragstart', handleDragStart);\n        container.addEventListener('dragover', handleDragOver);\n        container.addEventListener('dragleave', handleDragLeave);\n        container.addEventListener('drop', handleDrop);\n        container.addEventListener('dragend', handleDragEnd);\n        return () => {\n            container.removeEventListener('dragstart', handleDragStart);\n            container.removeEventListener('dragover', handleDragOver);\n            container.removeEventListener('dragleave', handleDragLeave);\n            container.removeEventListener('drop', handleDrop);\n            container.removeEventListener('dragend', handleDragEnd);\n        };\n    }, [container, onSetNewOrder]);\n    return (React.createElement(\"div\", { className: clsx('str-chat__drag-and-drop-container', className), ref: setContainer }, order.map((originalIndex, currentIndex) => {\n        const child = childrenArray[originalIndex];\n        return (React.createElement(\"div\", { className: clsx('str-chat__drag-and-drop-container__item', {\n                'str-chat__drag-and-drop-container__item--dragged-over-from-bottom': moveDirection === 'up' && dragOverIndex === currentIndex,\n                'str-chat__drag-and-drop-container__item--dragged-over-from-top': moveDirection === 'down' && dragOverIndex === currentIndex,\n            }), draggable: draggable, key: React.isValidElement(child) ? child.key : `draggable-item-${originalIndex}` }, child));\n    })));\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}