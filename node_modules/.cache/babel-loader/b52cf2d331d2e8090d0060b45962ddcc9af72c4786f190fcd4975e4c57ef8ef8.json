{"ast":null,"code":"import _objectSpread from \"/tmp/daft-chat-temp/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/tmp/daft-chat-temp/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"activateSearch\", \"AppMenu\", \"ClearInputIcon\", \"exitSearch\", \"ExitSearchIcon\", \"inputIsFocused\", \"MenuIcon\", \"searchBarRef\", \"SearchInput\", \"SearchInputIcon\"];\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport { MenuIcon as DefaultMenuIcon, SearchIcon as DefaultSearchInputIcon, ReturnIcon, XIcon } from './icons';\nimport { SearchInput as DefaultSearchInput } from './SearchInput';\nconst SearchBarButton = _ref => {\n  let {\n    children,\n    className,\n    onClick\n  } = _ref;\n  return React.createElement(\"button\", {\n    className: clsx('str-chat__channel-search-bar-button', className),\n    \"data-testid\": 'search-bar-button',\n    onClick: onClick\n  }, children);\n};\n// todo: add context menu control logic\nexport const SearchBar = props => {\n  const {\n      activateSearch,\n      AppMenu,\n      ClearInputIcon = XIcon,\n      exitSearch,\n      ExitSearchIcon = ReturnIcon,\n      inputIsFocused,\n      MenuIcon = DefaultMenuIcon,\n      searchBarRef,\n      SearchInput = DefaultSearchInput,\n      SearchInputIcon = DefaultSearchInputIcon\n    } = props,\n    inputProps = _objectWithoutProperties(props, _excluded);\n  const [menuIsOpen, setMenuIsOpen] = useState(false);\n  const appMenuRef = useRef(null);\n  useEffect(() => {\n    if (!appMenuRef.current) return;\n    const handleKeyDown = event => {\n      if (menuIsOpen && event.key === 'Escape') {\n        setMenuIsOpen(false);\n      }\n    };\n    const clickListener = e => {\n      var _appMenuRef$current;\n      if (!(e.target instanceof HTMLElement) || !menuIsOpen || (_appMenuRef$current = appMenuRef.current) !== null && _appMenuRef$current !== void 0 && _appMenuRef$current.contains(e.target)) return;\n      setMenuIsOpen(false);\n    };\n    document.addEventListener('keydown', handleKeyDown);\n    document.addEventListener('click', clickListener);\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n      document.removeEventListener('click', clickListener);\n    };\n  }, [menuIsOpen]);\n  useEffect(() => {\n    if (!props.inputRef.current) return;\n    const input = props.inputRef.current;\n    const handleFocus = () => {\n      activateSearch();\n    };\n    const handleBlur = e => {\n      e.stopPropagation(); // handle blur/focus state with React state\n    };\n    input.addEventListener('focus', handleFocus);\n    input.addEventListener('blur', handleBlur);\n    return () => {\n      input.removeEventListener('focus', handleFocus);\n      input.removeEventListener('blur', handleBlur);\n    };\n  }, [activateSearch, props.inputRef]);\n  const handleClearClick = useCallback(() => {\n    var _inputProps$inputRef$;\n    exitSearch();\n    (_inputProps$inputRef$ = inputProps.inputRef.current) === null || _inputProps$inputRef$ === void 0 || _inputProps$inputRef$.focus();\n  }, [exitSearch, inputProps.inputRef]);\n  const closeAppMenu = useCallback(() => setMenuIsOpen(false), []);\n  return React.createElement(\"div\", {\n    className: 'str-chat__channel-search-bar',\n    \"data-testid\": 'search-bar',\n    ref: searchBarRef\n  }, inputIsFocused ? React.createElement(SearchBarButton, {\n    className: 'str-chat__channel-search-bar-button--exit-search',\n    onClick: exitSearch\n  }, React.createElement(ExitSearchIcon, null)) : AppMenu ? React.createElement(SearchBarButton, {\n    className: 'str-chat__channel-search-bar-button--menu',\n    onClick: () => setMenuIsOpen(prev => !prev)\n  }, React.createElement(MenuIcon, null)) : null, React.createElement(\"div\", {\n    className: clsx('str-chat__channel-search-input--wrapper', inputProps.query && 'str-chat__channel-search-input--wrapper-active')\n  }, React.createElement(\"div\", {\n    className: 'str-chat__channel-search-input--icon'\n  }, React.createElement(SearchInputIcon, null)), React.createElement(SearchInput, _objectSpread({}, inputProps)), React.createElement(\"button\", {\n    className: 'str-chat__channel-search-input--clear-button',\n    \"data-testid\": 'clear-input-button',\n    disabled: !inputProps.query,\n    onClick: handleClearClick\n  }, React.createElement(ClearInputIcon, null))), menuIsOpen && AppMenu && React.createElement(\"div\", {\n    ref: appMenuRef\n  }, React.createElement(AppMenu, {\n    close: closeAppMenu\n  })));\n};","map":{"version":3,"names":["React","useCallback","useEffect","useRef","useState","clsx","MenuIcon","DefaultMenuIcon","SearchIcon","DefaultSearchInputIcon","ReturnIcon","XIcon","SearchInput","DefaultSearchInput","SearchBarButton","_ref","children","className","onClick","createElement","SearchBar","props","activateSearch","AppMenu","ClearInputIcon","exitSearch","ExitSearchIcon","inputIsFocused","searchBarRef","SearchInputIcon","inputProps","_objectWithoutProperties","_excluded","menuIsOpen","setMenuIsOpen","appMenuRef","current","handleKeyDown","event","key","clickListener","e","_appMenuRef$current","target","HTMLElement","contains","document","addEventListener","removeEventListener","inputRef","input","handleFocus","handleBlur","stopPropagation","handleClearClick","_inputProps$inputRef$","focus","closeAppMenu","ref","prev","query","_objectSpread","disabled","close"],"sources":["/tmp/daft-chat-temp/node_modules/stream-chat-react/dist/components/ChannelSearch/SearchBar.js"],"sourcesContent":["import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport { MenuIcon as DefaultMenuIcon, SearchIcon as DefaultSearchInputIcon, ReturnIcon, XIcon, } from './icons';\nimport { SearchInput as DefaultSearchInput } from './SearchInput';\nconst SearchBarButton = ({ children, className, onClick, }) => (React.createElement(\"button\", { className: clsx('str-chat__channel-search-bar-button', className), \"data-testid\": 'search-bar-button', onClick: onClick }, children));\n// todo: add context menu control logic\nexport const SearchBar = (props) => {\n    const { activateSearch, AppMenu, ClearInputIcon = XIcon, exitSearch, ExitSearchIcon = ReturnIcon, inputIsFocused, MenuIcon = DefaultMenuIcon, searchBarRef, SearchInput = DefaultSearchInput, SearchInputIcon = DefaultSearchInputIcon, ...inputProps } = props;\n    const [menuIsOpen, setMenuIsOpen] = useState(false);\n    const appMenuRef = useRef(null);\n    useEffect(() => {\n        if (!appMenuRef.current)\n            return;\n        const handleKeyDown = (event) => {\n            if (menuIsOpen && event.key === 'Escape') {\n                setMenuIsOpen(false);\n            }\n        };\n        const clickListener = (e) => {\n            if (!(e.target instanceof HTMLElement) ||\n                !menuIsOpen ||\n                appMenuRef.current?.contains(e.target))\n                return;\n            setMenuIsOpen(false);\n        };\n        document.addEventListener('keydown', handleKeyDown);\n        document.addEventListener('click', clickListener);\n        return () => {\n            document.removeEventListener('keydown', handleKeyDown);\n            document.removeEventListener('click', clickListener);\n        };\n    }, [menuIsOpen]);\n    useEffect(() => {\n        if (!props.inputRef.current)\n            return;\n        const input = props.inputRef.current;\n        const handleFocus = () => {\n            activateSearch();\n        };\n        const handleBlur = (e) => {\n            e.stopPropagation(); // handle blur/focus state with React state\n        };\n        input.addEventListener('focus', handleFocus);\n        input.addEventListener('blur', handleBlur);\n        return () => {\n            input.removeEventListener('focus', handleFocus);\n            input.removeEventListener('blur', handleBlur);\n        };\n    }, [activateSearch, props.inputRef]);\n    const handleClearClick = useCallback(() => {\n        exitSearch();\n        inputProps.inputRef.current?.focus();\n    }, [exitSearch, inputProps.inputRef]);\n    const closeAppMenu = useCallback(() => setMenuIsOpen(false), []);\n    return (React.createElement(\"div\", { className: 'str-chat__channel-search-bar', \"data-testid\": 'search-bar', ref: searchBarRef },\n        inputIsFocused ? (React.createElement(SearchBarButton, { className: 'str-chat__channel-search-bar-button--exit-search', onClick: exitSearch },\n            React.createElement(ExitSearchIcon, null))) : AppMenu ? (React.createElement(SearchBarButton, { className: 'str-chat__channel-search-bar-button--menu', onClick: () => setMenuIsOpen((prev) => !prev) },\n            React.createElement(MenuIcon, null))) : null,\n        React.createElement(\"div\", { className: clsx('str-chat__channel-search-input--wrapper', inputProps.query && 'str-chat__channel-search-input--wrapper-active') },\n            React.createElement(\"div\", { className: 'str-chat__channel-search-input--icon' },\n                React.createElement(SearchInputIcon, null)),\n            React.createElement(SearchInput, { ...inputProps }),\n            React.createElement(\"button\", { className: 'str-chat__channel-search-input--clear-button', \"data-testid\": 'clear-input-button', disabled: !inputProps.query, onClick: handleClearClick },\n                React.createElement(ClearInputIcon, null))),\n        menuIsOpen && AppMenu && (React.createElement(\"div\", { ref: appMenuRef },\n            React.createElement(AppMenu, { close: closeAppMenu })))));\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACvE,OAAOC,IAAI,MAAM,MAAM;AACvB,SAASC,QAAQ,IAAIC,eAAe,EAAEC,UAAU,IAAIC,sBAAsB,EAAEC,UAAU,EAAEC,KAAK,QAAS,SAAS;AAC/G,SAASC,WAAW,IAAIC,kBAAkB,QAAQ,eAAe;AACjE,MAAMC,eAAe,GAAGC,IAAA;EAAA,IAAC;IAAEC,QAAQ;IAAEC,SAAS;IAAEC;EAAS,CAAC,GAAAH,IAAA;EAAA,OAAMf,KAAK,CAACmB,aAAa,CAAC,QAAQ,EAAE;IAAEF,SAAS,EAAEZ,IAAI,CAAC,qCAAqC,EAAEY,SAAS,CAAC;IAAE,aAAa,EAAE,mBAAmB;IAAEC,OAAO,EAAEA;EAAQ,CAAC,EAAEF,QAAQ,CAAC;AAAA,CAAC;AACrO;AACA,OAAO,MAAMI,SAAS,GAAIC,KAAK,IAAK;EAChC,MAAM;MAAEC,cAAc;MAAEC,OAAO;MAAEC,cAAc,GAAGb,KAAK;MAAEc,UAAU;MAAEC,cAAc,GAAGhB,UAAU;MAAEiB,cAAc;MAAErB,QAAQ,GAAGC,eAAe;MAAEqB,YAAY;MAAEhB,WAAW,GAAGC,kBAAkB;MAAEgB,eAAe,GAAGpB;IAAsC,CAAC,GAAGY,KAAK;IAApBS,UAAU,GAAAC,wBAAA,CAAKV,KAAK,EAAAW,SAAA;EAC/P,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAG9B,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM+B,UAAU,GAAGhC,MAAM,CAAC,IAAI,CAAC;EAC/BD,SAAS,CAAC,MAAM;IACZ,IAAI,CAACiC,UAAU,CAACC,OAAO,EACnB;IACJ,MAAMC,aAAa,GAAIC,KAAK,IAAK;MAC7B,IAAIL,UAAU,IAAIK,KAAK,CAACC,GAAG,KAAK,QAAQ,EAAE;QACtCL,aAAa,CAAC,KAAK,CAAC;MACxB;IACJ,CAAC;IACD,MAAMM,aAAa,GAAIC,CAAC,IAAK;MAAA,IAAAC,mBAAA;MACzB,IAAI,EAAED,CAAC,CAACE,MAAM,YAAYC,WAAW,CAAC,IAClC,CAACX,UAAU,KAAAS,mBAAA,GACXP,UAAU,CAACC,OAAO,cAAAM,mBAAA,eAAlBA,mBAAA,CAAoBG,QAAQ,CAACJ,CAAC,CAACE,MAAM,CAAC,EACtC;MACJT,aAAa,CAAC,KAAK,CAAC;IACxB,CAAC;IACDY,QAAQ,CAACC,gBAAgB,CAAC,SAAS,EAAEV,aAAa,CAAC;IACnDS,QAAQ,CAACC,gBAAgB,CAAC,OAAO,EAAEP,aAAa,CAAC;IACjD,OAAO,MAAM;MACTM,QAAQ,CAACE,mBAAmB,CAAC,SAAS,EAAEX,aAAa,CAAC;MACtDS,QAAQ,CAACE,mBAAmB,CAAC,OAAO,EAAER,aAAa,CAAC;IACxD,CAAC;EACL,CAAC,EAAE,CAACP,UAAU,CAAC,CAAC;EAChB/B,SAAS,CAAC,MAAM;IACZ,IAAI,CAACmB,KAAK,CAAC4B,QAAQ,CAACb,OAAO,EACvB;IACJ,MAAMc,KAAK,GAAG7B,KAAK,CAAC4B,QAAQ,CAACb,OAAO;IACpC,MAAMe,WAAW,GAAGA,CAAA,KAAM;MACtB7B,cAAc,CAAC,CAAC;IACpB,CAAC;IACD,MAAM8B,UAAU,GAAIX,CAAC,IAAK;MACtBA,CAAC,CAACY,eAAe,CAAC,CAAC,CAAC,CAAC;IACzB,CAAC;IACDH,KAAK,CAACH,gBAAgB,CAAC,OAAO,EAAEI,WAAW,CAAC;IAC5CD,KAAK,CAACH,gBAAgB,CAAC,MAAM,EAAEK,UAAU,CAAC;IAC1C,OAAO,MAAM;MACTF,KAAK,CAACF,mBAAmB,CAAC,OAAO,EAAEG,WAAW,CAAC;MAC/CD,KAAK,CAACF,mBAAmB,CAAC,MAAM,EAAEI,UAAU,CAAC;IACjD,CAAC;EACL,CAAC,EAAE,CAAC9B,cAAc,EAAED,KAAK,CAAC4B,QAAQ,CAAC,CAAC;EACpC,MAAMK,gBAAgB,GAAGrD,WAAW,CAAC,MAAM;IAAA,IAAAsD,qBAAA;IACvC9B,UAAU,CAAC,CAAC;IACZ,CAAA8B,qBAAA,GAAAzB,UAAU,CAACmB,QAAQ,CAACb,OAAO,cAAAmB,qBAAA,eAA3BA,qBAAA,CAA6BC,KAAK,CAAC,CAAC;EACxC,CAAC,EAAE,CAAC/B,UAAU,EAAEK,UAAU,CAACmB,QAAQ,CAAC,CAAC;EACrC,MAAMQ,YAAY,GAAGxD,WAAW,CAAC,MAAMiC,aAAa,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC;EAChE,OAAQlC,KAAK,CAACmB,aAAa,CAAC,KAAK,EAAE;IAAEF,SAAS,EAAE,8BAA8B;IAAE,aAAa,EAAE,YAAY;IAAEyC,GAAG,EAAE9B;EAAa,CAAC,EAC5HD,cAAc,GAAI3B,KAAK,CAACmB,aAAa,CAACL,eAAe,EAAE;IAAEG,SAAS,EAAE,kDAAkD;IAAEC,OAAO,EAAEO;EAAW,CAAC,EACzIzB,KAAK,CAACmB,aAAa,CAACO,cAAc,EAAE,IAAI,CAAC,CAAC,GAAIH,OAAO,GAAIvB,KAAK,CAACmB,aAAa,CAACL,eAAe,EAAE;IAAEG,SAAS,EAAE,2CAA2C;IAAEC,OAAO,EAAEA,CAAA,KAAMgB,aAAa,CAAEyB,IAAI,IAAK,CAACA,IAAI;EAAE,CAAC,EACvM3D,KAAK,CAACmB,aAAa,CAACb,QAAQ,EAAE,IAAI,CAAC,CAAC,GAAI,IAAI,EAChDN,KAAK,CAACmB,aAAa,CAAC,KAAK,EAAE;IAAEF,SAAS,EAAEZ,IAAI,CAAC,yCAAyC,EAAEyB,UAAU,CAAC8B,KAAK,IAAI,gDAAgD;EAAE,CAAC,EAC3J5D,KAAK,CAACmB,aAAa,CAAC,KAAK,EAAE;IAAEF,SAAS,EAAE;EAAuC,CAAC,EAC5EjB,KAAK,CAACmB,aAAa,CAACU,eAAe,EAAE,IAAI,CAAC,CAAC,EAC/C7B,KAAK,CAACmB,aAAa,CAACP,WAAW,EAAAiD,aAAA,KAAO/B,UAAU,CAAE,CAAC,EACnD9B,KAAK,CAACmB,aAAa,CAAC,QAAQ,EAAE;IAAEF,SAAS,EAAE,8CAA8C;IAAE,aAAa,EAAE,oBAAoB;IAAE6C,QAAQ,EAAE,CAAChC,UAAU,CAAC8B,KAAK;IAAE1C,OAAO,EAAEoC;EAAiB,CAAC,EACpLtD,KAAK,CAACmB,aAAa,CAACK,cAAc,EAAE,IAAI,CAAC,CAAC,CAAC,EACnDS,UAAU,IAAIV,OAAO,IAAKvB,KAAK,CAACmB,aAAa,CAAC,KAAK,EAAE;IAAEuC,GAAG,EAAEvB;EAAW,CAAC,EACpEnC,KAAK,CAACmB,aAAa,CAACI,OAAO,EAAE;IAAEwC,KAAK,EAAEN;EAAa,CAAC,CAAC,CAAE,CAAC;AACpE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}