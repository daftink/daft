{"ast":null,"code":"import _objectSpread from \"/tmp/daft-chat-temp/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/tmp/daft-chat-temp/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"big\", \"mimeType\", \"size\", \"sizeSmall\", \"type\"];\nimport React from 'react';\nimport { iconMap } from './iconMap';\nexport function mimeTypeToIcon() {\n  let type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'standard';\n  let mimeType = arguments.length > 1 ? arguments[1] : undefined;\n  const theMap = iconMap[type] || iconMap['standard'];\n  if (!mimeType) return theMap.fallback;\n  const icon = theMap[mimeType];\n  if (icon) return icon;\n  if (mimeType.startsWith('audio/')) return theMap['audio/'];\n  if (mimeType.startsWith('video/')) return theMap['video/'];\n  if (mimeType.startsWith('image/')) return theMap['image/'];\n  if (mimeType.startsWith('text/')) return theMap['text/'];\n  return theMap.fallback;\n}\nexport const FileIcon = props => {\n  const {\n      big = false,\n      mimeType,\n      size = 50,\n      sizeSmall = 20,\n      type = 'standard'\n    } = props,\n    rest = _objectWithoutProperties(props, _excluded);\n  const Icon = mimeTypeToIcon(type, mimeType);\n  return React.createElement(Icon, _objectSpread(_objectSpread({}, rest), {}, {\n    size: big ? size : sizeSmall\n  }));\n};","map":{"version":3,"names":["React","iconMap","mimeTypeToIcon","type","arguments","length","undefined","mimeType","theMap","fallback","icon","startsWith","FileIcon","props","big","size","sizeSmall","rest","_objectWithoutProperties","_excluded","Icon","createElement","_objectSpread"],"sources":["/tmp/daft-chat-temp/node_modules/stream-chat-react/dist/components/ReactFileUtilities/FileIcon/FileIcon.js"],"sourcesContent":["import React from 'react';\nimport { iconMap } from './iconMap';\nexport function mimeTypeToIcon(type = 'standard', mimeType) {\n    const theMap = iconMap[type] || iconMap['standard'];\n    if (!mimeType)\n        return theMap.fallback;\n    const icon = theMap[mimeType];\n    if (icon)\n        return icon;\n    if (mimeType.startsWith('audio/'))\n        return theMap['audio/'];\n    if (mimeType.startsWith('video/'))\n        return theMap['video/'];\n    if (mimeType.startsWith('image/'))\n        return theMap['image/'];\n    if (mimeType.startsWith('text/'))\n        return theMap['text/'];\n    return theMap.fallback;\n}\nexport const FileIcon = (props) => {\n    const { big = false, mimeType, size = 50, sizeSmall = 20, type = 'standard', ...rest } = props;\n    const Icon = mimeTypeToIcon(type, mimeType);\n    return React.createElement(Icon, { ...rest, size: big ? size : sizeSmall });\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,WAAW;AACnC,OAAO,SAASC,cAAcA,CAAA,EAA8B;EAAA,IAA7BC,IAAI,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,UAAU;EAAA,IAAEG,QAAQ,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACtD,MAAME,MAAM,GAAGP,OAAO,CAACE,IAAI,CAAC,IAAIF,OAAO,CAAC,UAAU,CAAC;EACnD,IAAI,CAACM,QAAQ,EACT,OAAOC,MAAM,CAACC,QAAQ;EAC1B,MAAMC,IAAI,GAAGF,MAAM,CAACD,QAAQ,CAAC;EAC7B,IAAIG,IAAI,EACJ,OAAOA,IAAI;EACf,IAAIH,QAAQ,CAACI,UAAU,CAAC,QAAQ,CAAC,EAC7B,OAAOH,MAAM,CAAC,QAAQ,CAAC;EAC3B,IAAID,QAAQ,CAACI,UAAU,CAAC,QAAQ,CAAC,EAC7B,OAAOH,MAAM,CAAC,QAAQ,CAAC;EAC3B,IAAID,QAAQ,CAACI,UAAU,CAAC,QAAQ,CAAC,EAC7B,OAAOH,MAAM,CAAC,QAAQ,CAAC;EAC3B,IAAID,QAAQ,CAACI,UAAU,CAAC,OAAO,CAAC,EAC5B,OAAOH,MAAM,CAAC,OAAO,CAAC;EAC1B,OAAOA,MAAM,CAACC,QAAQ;AAC1B;AACA,OAAO,MAAMG,QAAQ,GAAIC,KAAK,IAAK;EAC/B,MAAM;MAAEC,GAAG,GAAG,KAAK;MAAEP,QAAQ;MAAEQ,IAAI,GAAG,EAAE;MAAEC,SAAS,GAAG,EAAE;MAAEb,IAAI,GAAG;IAAoB,CAAC,GAAGU,KAAK;IAAdI,IAAI,GAAAC,wBAAA,CAAKL,KAAK,EAAAM,SAAA;EAC9F,MAAMC,IAAI,GAAGlB,cAAc,CAACC,IAAI,EAAEI,QAAQ,CAAC;EAC3C,OAAOP,KAAK,CAACqB,aAAa,CAACD,IAAI,EAAAE,aAAA,CAAAA,aAAA,KAAOL,IAAI;IAAEF,IAAI,EAAED,GAAG,GAAGC,IAAI,GAAGC;EAAS,EAAE,CAAC;AAC/E,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}