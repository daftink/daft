{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport { useChatContext } from '../../../../context/ChatContext';\nexport const useGiphyPreview = separateGiphyPreview => {\n  const [giphyPreviewMessage, setGiphyPreviewMessage] = useState();\n  const {\n    client\n  } = useChatContext('useGiphyPreview');\n  useEffect(() => {\n    if (!separateGiphyPreview) return;\n    const handleEvent = event => {\n      const {\n        message,\n        user\n      } = event;\n      if ((message === null || message === void 0 ? void 0 : message.command) === 'giphy' && (user === null || user === void 0 ? void 0 : user.id) === client.userID) {\n        setGiphyPreviewMessage(undefined);\n      }\n    };\n    client.on('message.new', handleEvent);\n    return () => client.off('message.new', handleEvent);\n  }, [client, separateGiphyPreview]);\n  return {\n    giphyPreviewMessage,\n    setGiphyPreviewMessage: separateGiphyPreview ? setGiphyPreviewMessage : undefined\n  };\n};","map":{"version":3,"names":["useEffect","useState","useChatContext","useGiphyPreview","separateGiphyPreview","giphyPreviewMessage","setGiphyPreviewMessage","client","handleEvent","event","message","user","command","id","userID","undefined","on","off"],"sources":["/tmp/daft-chat-temp/node_modules/stream-chat-react/dist/components/MessageList/hooks/VirtualizedMessageList/useGiphyPreview.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useChatContext } from '../../../../context/ChatContext';\nexport const useGiphyPreview = (separateGiphyPreview) => {\n    const [giphyPreviewMessage, setGiphyPreviewMessage] = useState();\n    const { client } = useChatContext('useGiphyPreview');\n    useEffect(() => {\n        if (!separateGiphyPreview)\n            return;\n        const handleEvent = (event) => {\n            const { message, user } = event;\n            if (message?.command === 'giphy' && user?.id === client.userID) {\n                setGiphyPreviewMessage(undefined);\n            }\n        };\n        client.on('message.new', handleEvent);\n        return () => client.off('message.new', handleEvent);\n    }, [client, separateGiphyPreview]);\n    return {\n        giphyPreviewMessage,\n        setGiphyPreviewMessage: separateGiphyPreview ? setGiphyPreviewMessage : undefined,\n    };\n};\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,cAAc,QAAQ,iCAAiC;AAChE,OAAO,MAAMC,eAAe,GAAIC,oBAAoB,IAAK;EACrD,MAAM,CAACC,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGL,QAAQ,CAAC,CAAC;EAChE,MAAM;IAAEM;EAAO,CAAC,GAAGL,cAAc,CAAC,iBAAiB,CAAC;EACpDF,SAAS,CAAC,MAAM;IACZ,IAAI,CAACI,oBAAoB,EACrB;IACJ,MAAMI,WAAW,GAAIC,KAAK,IAAK;MAC3B,MAAM;QAAEC,OAAO;QAAEC;MAAK,CAAC,GAAGF,KAAK;MAC/B,IAAI,CAAAC,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEE,OAAO,MAAK,OAAO,IAAI,CAAAD,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEE,EAAE,MAAKN,MAAM,CAACO,MAAM,EAAE;QAC5DR,sBAAsB,CAACS,SAAS,CAAC;MACrC;IACJ,CAAC;IACDR,MAAM,CAACS,EAAE,CAAC,aAAa,EAAER,WAAW,CAAC;IACrC,OAAO,MAAMD,MAAM,CAACU,GAAG,CAAC,aAAa,EAAET,WAAW,CAAC;EACvD,CAAC,EAAE,CAACD,MAAM,EAAEH,oBAAoB,CAAC,CAAC;EAClC,OAAO;IACHC,mBAAmB;IACnBC,sBAAsB,EAAEF,oBAAoB,GAAGE,sBAAsB,GAAGS;EAC5E,CAAC;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}