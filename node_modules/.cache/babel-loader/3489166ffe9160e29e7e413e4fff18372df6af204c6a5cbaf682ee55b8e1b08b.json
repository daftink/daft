{"ast":null,"code":"import _objectSpread from \"/tmp/daft-chat-temp/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/tmp/daft-chat-temp/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"calendar\", \"date\", \"formatDate\", \"position\", \"unread\"];\nimport React from 'react';\nimport { useTranslationContext } from '../../context/TranslationContext';\nimport { getDateString } from '../../i18n/utils';\nconst UnMemoizedDateSeparator = props => {\n  const {\n      calendar,\n      date: messageCreatedAt,\n      formatDate,\n      position = 'right',\n      unread\n    } = props,\n    restTimestampFormatterOptions = _objectWithoutProperties(props, _excluded);\n  const {\n    t,\n    tDateTimeParser\n  } = useTranslationContext('DateSeparator');\n  const formattedDate = getDateString(_objectSpread(_objectSpread({\n    calendar\n  }, restTimestampFormatterOptions), {}, {\n    formatDate,\n    messageCreatedAt,\n    t,\n    tDateTimeParser,\n    timestampTranslationKey: 'timestamp/DateSeparator'\n  }));\n  return React.createElement(\"div\", {\n    className: 'str-chat__date-separator',\n    \"data-testid\": 'date-separator'\n  }, (position === 'right' || position === 'center') && React.createElement(\"hr\", {\n    className: 'str-chat__date-separator-line'\n  }), React.createElement(\"div\", {\n    className: 'str-chat__date-separator-date'\n  }, unread ? \"\".concat(t('New'), \" - \").concat(formattedDate) : formattedDate), (position === 'left' || position === 'center') && React.createElement(\"hr\", {\n    className: 'str-chat__date-separator-line'\n  }));\n};\n/**\n * A simple date separator between messages.\n */\nexport const DateSeparator = React.memo(UnMemoizedDateSeparator);","map":{"version":3,"names":["React","useTranslationContext","getDateString","UnMemoizedDateSeparator","props","calendar","date","messageCreatedAt","formatDate","position","unread","restTimestampFormatterOptions","_objectWithoutProperties","_excluded","t","tDateTimeParser","formattedDate","_objectSpread","timestampTranslationKey","createElement","className","concat","DateSeparator","memo"],"sources":["/tmp/daft-chat-temp/node_modules/stream-chat-react/dist/components/DateSeparator/DateSeparator.js"],"sourcesContent":["import React from 'react';\nimport { useTranslationContext } from '../../context/TranslationContext';\nimport { getDateString } from '../../i18n/utils';\nconst UnMemoizedDateSeparator = (props) => {\n    const { calendar, date: messageCreatedAt, formatDate, position = 'right', unread, ...restTimestampFormatterOptions } = props;\n    const { t, tDateTimeParser } = useTranslationContext('DateSeparator');\n    const formattedDate = getDateString({\n        calendar,\n        ...restTimestampFormatterOptions,\n        formatDate,\n        messageCreatedAt,\n        t,\n        tDateTimeParser,\n        timestampTranslationKey: 'timestamp/DateSeparator',\n    });\n    return (React.createElement(\"div\", { className: 'str-chat__date-separator', \"data-testid\": 'date-separator' },\n        (position === 'right' || position === 'center') && (React.createElement(\"hr\", { className: 'str-chat__date-separator-line' })),\n        React.createElement(\"div\", { className: 'str-chat__date-separator-date' }, unread ? `${t('New')} - ${formattedDate}` : formattedDate),\n        (position === 'left' || position === 'center') && (React.createElement(\"hr\", { className: 'str-chat__date-separator-line' }))));\n};\n/**\n * A simple date separator between messages.\n */\nexport const DateSeparator = React.memo(UnMemoizedDateSeparator);\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,qBAAqB,QAAQ,kCAAkC;AACxE,SAASC,aAAa,QAAQ,kBAAkB;AAChD,MAAMC,uBAAuB,GAAIC,KAAK,IAAK;EACvC,MAAM;MAAEC,QAAQ;MAAEC,IAAI,EAAEC,gBAAgB;MAAEC,UAAU;MAAEC,QAAQ,GAAG,OAAO;MAAEC;IAAyC,CAAC,GAAGN,KAAK;IAAvCO,6BAA6B,GAAAC,wBAAA,CAAKR,KAAK,EAAAS,SAAA;EAC5H,MAAM;IAAEC,CAAC;IAAEC;EAAgB,CAAC,GAAGd,qBAAqB,CAAC,eAAe,CAAC;EACrE,MAAMe,aAAa,GAAGd,aAAa,CAAAe,aAAA,CAAAA,aAAA;IAC/BZ;EAAQ,GACLM,6BAA6B;IAChCH,UAAU;IACVD,gBAAgB;IAChBO,CAAC;IACDC,eAAe;IACfG,uBAAuB,EAAE;EAAyB,EACrD,CAAC;EACF,OAAQlB,KAAK,CAACmB,aAAa,CAAC,KAAK,EAAE;IAAEC,SAAS,EAAE,0BAA0B;IAAE,aAAa,EAAE;EAAiB,CAAC,EACzG,CAACX,QAAQ,KAAK,OAAO,IAAIA,QAAQ,KAAK,QAAQ,KAAMT,KAAK,CAACmB,aAAa,CAAC,IAAI,EAAE;IAAEC,SAAS,EAAE;EAAgC,CAAC,CAAE,EAC9HpB,KAAK,CAACmB,aAAa,CAAC,KAAK,EAAE;IAAEC,SAAS,EAAE;EAAgC,CAAC,EAAEV,MAAM,MAAAW,MAAA,CAAMP,CAAC,CAAC,KAAK,CAAC,SAAAO,MAAA,CAAML,aAAa,IAAKA,aAAa,CAAC,EACrI,CAACP,QAAQ,KAAK,MAAM,IAAIA,QAAQ,KAAK,QAAQ,KAAMT,KAAK,CAACmB,aAAa,CAAC,IAAI,EAAE;IAAEC,SAAS,EAAE;EAAgC,CAAC,CAAE,CAAC;AACtI,CAAC;AACD;AACA;AACA;AACA,OAAO,MAAME,aAAa,GAAGtB,KAAK,CAACuB,IAAI,CAACpB,uBAAuB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}