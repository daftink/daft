{"ast":null,"code":"import deepequal from 'react-fast-compare';\nimport emojiRegex from 'emoji-regex';\n/**\n * Following function validates a function which returns notification message.\n * It validates if the first parameter is function and also if return value of function is string or no.\n */\nexport const validateAndGetMessage = (func, args) => {\n  if (!func || typeof func !== 'function') return null;\n  // below is due to tests passing a single argument\n  // rather than an array.\n  if (!Array.isArray(args)) {\n    args = [args];\n  }\n  const returnValue = func(...args);\n  if (typeof returnValue !== 'string') return null;\n  return returnValue;\n};\n/**\n * Tell if the owner of the current message is muted\n */\nexport const isUserMuted = (message, mutes) => {\n  if (!mutes || !message) return false;\n  const userMuted = mutes.filter(el => {\n    var _message$user;\n    return el.target.id === ((_message$user = message.user) === null || _message$user === void 0 ? void 0 : _message$user.id);\n  });\n  return !!userMuted.length;\n};\nexport const MESSAGE_ACTIONS = {\n  delete: 'delete',\n  edit: 'edit',\n  flag: 'flag',\n  markUnread: 'markUnread',\n  mute: 'mute',\n  pin: 'pin',\n  quote: 'quote',\n  react: 'react',\n  remindMe: 'remindMe',\n  reply: 'reply',\n  saveForLater: 'saveForLater'\n};\n// @deprecated in favor of `channelCapabilities` - TODO: remove in next major release\nexport const defaultPinPermissions = {\n  commerce: {\n    admin: true,\n    anonymous: false,\n    channel_member: false,\n    channel_moderator: true,\n    guest: false,\n    member: false,\n    moderator: true,\n    owner: true,\n    user: false\n  },\n  gaming: {\n    admin: true,\n    anonymous: false,\n    channel_member: false,\n    channel_moderator: true,\n    guest: false,\n    member: false,\n    moderator: true,\n    owner: false,\n    user: false\n  },\n  livestream: {\n    admin: true,\n    anonymous: false,\n    channel_member: false,\n    channel_moderator: true,\n    guest: false,\n    member: false,\n    moderator: true,\n    owner: true,\n    user: false\n  },\n  messaging: {\n    admin: true,\n    anonymous: false,\n    channel_member: true,\n    channel_moderator: true,\n    guest: false,\n    member: true,\n    moderator: true,\n    owner: true,\n    user: false\n  },\n  team: {\n    admin: true,\n    anonymous: false,\n    channel_member: true,\n    channel_moderator: true,\n    guest: false,\n    member: true,\n    moderator: true,\n    owner: true,\n    user: false\n  }\n};\nexport const getMessageActions = (actions, _ref, channelConfig) => {\n  let {\n    canDelete,\n    canEdit,\n    canFlag,\n    canMarkUnread,\n    canMute,\n    canPin,\n    canQuote,\n    canReact,\n    canReply\n  } = _ref;\n  const messageActionsAfterPermission = [];\n  let messageActions = [];\n  if (actions && typeof actions === 'boolean') {\n    // If value of actions is true, then populate all the possible values\n    messageActions = Object.keys(MESSAGE_ACTIONS);\n  } else if (actions && actions.length > 0) {\n    messageActions = [...actions];\n  } else {\n    return [];\n  }\n  if (canDelete && messageActions.indexOf(MESSAGE_ACTIONS.delete) > -1) {\n    messageActionsAfterPermission.push(MESSAGE_ACTIONS.delete);\n  }\n  if (canEdit && messageActions.indexOf(MESSAGE_ACTIONS.edit) > -1) {\n    messageActionsAfterPermission.push(MESSAGE_ACTIONS.edit);\n  }\n  if (canFlag && messageActions.indexOf(MESSAGE_ACTIONS.flag) > -1) {\n    messageActionsAfterPermission.push(MESSAGE_ACTIONS.flag);\n  }\n  if (canMarkUnread && messageActions.indexOf(MESSAGE_ACTIONS.markUnread) > -1) {\n    messageActionsAfterPermission.push(MESSAGE_ACTIONS.markUnread);\n  }\n  if (canMute && messageActions.indexOf(MESSAGE_ACTIONS.mute) > -1) {\n    messageActionsAfterPermission.push(MESSAGE_ACTIONS.mute);\n  }\n  if (canPin && messageActions.indexOf(MESSAGE_ACTIONS.pin) > -1) {\n    messageActionsAfterPermission.push(MESSAGE_ACTIONS.pin);\n  }\n  if (canQuote && messageActions.indexOf(MESSAGE_ACTIONS.quote) > -1) {\n    messageActionsAfterPermission.push(MESSAGE_ACTIONS.quote);\n  }\n  if (canReact && messageActions.indexOf(MESSAGE_ACTIONS.react) > -1) {\n    messageActionsAfterPermission.push(MESSAGE_ACTIONS.react);\n  }\n  if (channelConfig !== null && channelConfig !== void 0 && channelConfig['user_message_reminders'] && messageActions.indexOf(MESSAGE_ACTIONS.remindMe)) {\n    messageActionsAfterPermission.push(MESSAGE_ACTIONS.remindMe);\n  }\n  if (canReply && messageActions.indexOf(MESSAGE_ACTIONS.reply) > -1) {\n    messageActionsAfterPermission.push(MESSAGE_ACTIONS.reply);\n  }\n  if (channelConfig !== null && channelConfig !== void 0 && channelConfig['user_message_reminders'] && messageActions.indexOf(MESSAGE_ACTIONS.saveForLater)) {\n    messageActionsAfterPermission.push(MESSAGE_ACTIONS.saveForLater);\n  }\n  return messageActionsAfterPermission;\n};\nexport const ACTIONS_NOT_WORKING_IN_THREAD = [MESSAGE_ACTIONS.pin, MESSAGE_ACTIONS.reply, MESSAGE_ACTIONS.markUnread];\n/**\n * @deprecated use `shouldRenderMessageActions` instead\n */\nexport const showMessageActionsBox = (actions, inThread) => shouldRenderMessageActions({\n  inThread,\n  messageActions: actions\n});\nexport const shouldRenderMessageActions = _ref2 => {\n  let {\n    customMessageActions,\n    CustomMessageActionsList,\n    inThread,\n    messageActions\n  } = _ref2;\n  if (typeof CustomMessageActionsList !== 'undefined' || typeof customMessageActions !== 'undefined') return true;\n  if (!messageActions.length) return false;\n  if (inThread && messageActions.filter(action => !ACTIONS_NOT_WORKING_IN_THREAD.includes(action)).length === 0) {\n    return false;\n  }\n  if (messageActions.length === 1 && (messageActions.includes(MESSAGE_ACTIONS.react) || messageActions.includes(MESSAGE_ACTIONS.reply))) {\n    return false;\n  }\n  if (messageActions.length === 2 && messageActions.includes(MESSAGE_ACTIONS.react) && messageActions.includes(MESSAGE_ACTIONS.reply)) {\n    return false;\n  }\n  return true;\n};\nfunction areMessagesEqual(prevMessage, nextMessage) {\n  const areBaseMessagesEqual = (prevMessage, nextMessage) => {\n    var _prevMessage$latest_r, _nextMessage$latest_r, _prevMessage$own_reac, _nextMessage$own_reac, _prevMessage$user, _nextMessage$user;\n    return prevMessage.deleted_at === nextMessage.deleted_at && ((_prevMessage$latest_r = prevMessage.latest_reactions) === null || _prevMessage$latest_r === void 0 ? void 0 : _prevMessage$latest_r.length) === ((_nextMessage$latest_r = nextMessage.latest_reactions) === null || _nextMessage$latest_r === void 0 ? void 0 : _nextMessage$latest_r.length) && ((_prevMessage$own_reac = prevMessage.own_reactions) === null || _prevMessage$own_reac === void 0 ? void 0 : _prevMessage$own_reac.length) === ((_nextMessage$own_reac = nextMessage.own_reactions) === null || _nextMessage$own_reac === void 0 ? void 0 : _nextMessage$own_reac.length) && prevMessage.pinned === nextMessage.pinned && prevMessage.reply_count === nextMessage.reply_count && prevMessage.status === nextMessage.status && prevMessage.text === nextMessage.text && prevMessage.type === nextMessage.type && prevMessage.updated_at === nextMessage.updated_at && ((_prevMessage$user = prevMessage.user) === null || _prevMessage$user === void 0 ? void 0 : _prevMessage$user.updated_at) === ((_nextMessage$user = nextMessage.user) === null || _nextMessage$user === void 0 ? void 0 : _nextMessage$user.updated_at);\n  };\n  return areBaseMessagesEqual(prevMessage, nextMessage) && Boolean(prevMessage.quoted_message) === Boolean(nextMessage.quoted_message) && (!prevMessage.quoted_message && !nextMessage.quoted_message || areBaseMessagesEqual(prevMessage.quoted_message, nextMessage.quoted_message));\n}\nexport const areMessagePropsEqual = (prevProps, nextProps) => {\n  const {\n    message: prevMessage,\n    Message: prevMessageUI\n  } = prevProps;\n  const {\n    message: nextMessage,\n    Message: nextMessageUI\n  } = nextProps;\n  if (prevMessageUI !== nextMessageUI) return false;\n  if (prevProps.endOfGroup !== nextProps.endOfGroup) return false;\n  if (nextProps.showDetailedReactions !== prevProps.showDetailedReactions) {\n    return false;\n  }\n  if (nextProps.closeReactionSelectorOnClick !== prevProps.closeReactionSelectorOnClick) {\n    return false;\n  }\n  const messagesAreEqual = areMessagesEqual(prevMessage, nextMessage);\n  if (!messagesAreEqual) return false;\n  const deepEqualProps = deepequal(nextProps.messageActions, prevProps.messageActions) && deepequal(nextProps.readBy, prevProps.readBy) && deepequal(nextProps.highlighted, prevProps.highlighted) && deepequal(nextProps.groupStyles, prevProps.groupStyles) &&\n  // last 3 messages can have different group styles\n  deepequal(nextProps.mutes, prevProps.mutes) && deepequal(nextProps.lastReceivedId, prevProps.lastReceivedId);\n  if (!deepEqualProps) return false;\n  return prevProps.messageListRect === nextProps.messageListRect // MessageList wrapper layout changes\n  ;\n};\nexport const areMessageUIPropsEqual = (prevProps, nextProps) => {\n  var _prevProps$mutes, _nextProps$mutes, _prevProps$readBy, _nextProps$readBy;\n  const {\n    lastReceivedId: prevLastReceivedId,\n    message: prevMessage\n  } = prevProps;\n  const {\n    lastReceivedId: nextLastReceivedId,\n    message: nextMessage\n  } = nextProps;\n  if (prevProps.editing !== nextProps.editing) return false;\n  if (prevProps.highlighted !== nextProps.highlighted) return false;\n  if (prevProps.endOfGroup !== nextProps.endOfGroup) return false;\n  if (((_prevProps$mutes = prevProps.mutes) === null || _prevProps$mutes === void 0 ? void 0 : _prevProps$mutes.length) !== ((_nextProps$mutes = nextProps.mutes) === null || _nextProps$mutes === void 0 ? void 0 : _nextProps$mutes.length)) return false;\n  if (((_prevProps$readBy = prevProps.readBy) === null || _prevProps$readBy === void 0 ? void 0 : _prevProps$readBy.length) !== ((_nextProps$readBy = nextProps.readBy) === null || _nextProps$readBy === void 0 ? void 0 : _nextProps$readBy.length)) return false;\n  if (prevProps.groupStyles !== nextProps.groupStyles) return false;\n  if (prevProps.showDetailedReactions !== nextProps.showDetailedReactions) {\n    return false;\n  }\n  if ((prevMessage.id === prevLastReceivedId || prevMessage.id === nextLastReceivedId) && prevLastReceivedId !== nextLastReceivedId) {\n    return false;\n  }\n  return areMessagesEqual(prevMessage, nextMessage);\n};\nexport const messageHasReactions = message => {\n  var _message$reaction_gro;\n  return Object.values((_message$reaction_gro = message === null || message === void 0 ? void 0 : message.reaction_groups) !== null && _message$reaction_gro !== void 0 ? _message$reaction_gro : {}).some(_ref3 => {\n    let {\n      count\n    } = _ref3;\n    return count > 0;\n  });\n};\nexport const messageHasAttachments = message => !!(message !== null && message !== void 0 && message.attachments) && !!message.attachments.length;\nexport const getImages = message => {\n  if (!(message !== null && message !== void 0 && message.attachments)) {\n    return [];\n  }\n  return message.attachments.filter(item => item.type === 'image');\n};\nexport const getNonImageAttachments = message => {\n  if (!(message !== null && message !== void 0 && message.attachments)) {\n    return [];\n  }\n  return message.attachments.filter(item => item.type !== 'image');\n};\n/**\n * Default Tooltip Username mapper implementation.\n *\n * @param user the user.\n */\nexport const mapToUserNameOrId = user => user.name || user.id;\nexport const getReadByTooltipText = (users, t, client, tooltipUserNameMapper) => {\n  let outStr = '';\n  if (!t) {\n    throw new Error('getReadByTooltipText was called, but translation function is not available');\n  }\n  if (!tooltipUserNameMapper) {\n    throw new Error('getReadByTooltipText was called, but tooltipUserNameMapper function is not available');\n  }\n  // first filter out client user, so restLength won't count it\n  const otherUsers = users.filter(item => item && (client === null || client === void 0 ? void 0 : client.user) && item.id !== client.user.id).map(tooltipUserNameMapper);\n  const slicedArr = otherUsers.slice(0, 5);\n  const restLength = otherUsers.length - slicedArr.length;\n  if (slicedArr.length === 1) {\n    outStr = \"\".concat(slicedArr[0], \" \");\n  } else if (slicedArr.length === 2) {\n    // joins all with \"and\" but =no commas\n    // example: \"bob and sam\"\n    outStr = t('{{ firstUser }} and {{ secondUser }}', {\n      firstUser: slicedArr[0],\n      secondUser: slicedArr[1]\n    });\n  } else if (slicedArr.length > 2) {\n    // joins all with commas, but last one gets \", and\" (oxford comma!)\n    // example: \"bob, joe, sam and 4 more\"\n    if (restLength === 0) {\n      // mutate slicedArr to remove last user to display it separately\n      const lastUser = slicedArr.splice(slicedArr.length - 1, 1);\n      outStr = t('{{ commaSeparatedUsers }}, and {{ lastUser }}', {\n        commaSeparatedUsers: slicedArr.join(', '),\n        lastUser\n      });\n    } else {\n      outStr = t('{{ commaSeparatedUsers }} and {{ moreCount }} more', {\n        commaSeparatedUsers: slicedArr.join(', '),\n        moreCount: restLength\n      });\n    }\n  }\n  return outStr;\n};\nexport const isOnlyEmojis = text => {\n  if (!text) return false;\n  const noEmojis = text.replace(emojiRegex(), '');\n  const noSpace = noEmojis.replace(/[\\s\\n]/gm, '');\n  return !noSpace;\n};\nexport const isMessageBounced = message => {\n  var _message$moderation_d, _message$moderation;\n  return message.type === 'error' && (((_message$moderation_d = message.moderation_details) === null || _message$moderation_d === void 0 ? void 0 : _message$moderation_d.action) === 'MESSAGE_RESPONSE_ACTION_BOUNCE' || ((_message$moderation = message.moderation) === null || _message$moderation === void 0 ? void 0 : _message$moderation.action) === 'bounce');\n};\nexport const isMessageBlocked = message => {\n  var _message$moderation_d2, _message$moderation2;\n  return message.type === 'error' && (((_message$moderation_d2 = message.moderation_details) === null || _message$moderation_d2 === void 0 ? void 0 : _message$moderation_d2.action) === 'MESSAGE_RESPONSE_ACTION_REMOVE' || ((_message$moderation2 = message.moderation) === null || _message$moderation2 === void 0 ? void 0 : _message$moderation2.action) === 'remove');\n};\nexport const isMessageEdited = message => !!message.message_text_updated_at;","map":{"version":3,"names":["deepequal","emojiRegex","validateAndGetMessage","func","args","Array","isArray","returnValue","isUserMuted","message","mutes","userMuted","filter","el","_message$user","target","id","user","length","MESSAGE_ACTIONS","delete","edit","flag","markUnread","mute","pin","quote","react","remindMe","reply","saveForLater","defaultPinPermissions","commerce","admin","anonymous","channel_member","channel_moderator","guest","member","moderator","owner","gaming","livestream","messaging","team","getMessageActions","actions","_ref","channelConfig","canDelete","canEdit","canFlag","canMarkUnread","canMute","canPin","canQuote","canReact","canReply","messageActionsAfterPermission","messageActions","Object","keys","indexOf","push","ACTIONS_NOT_WORKING_IN_THREAD","showMessageActionsBox","inThread","shouldRenderMessageActions","_ref2","customMessageActions","CustomMessageActionsList","action","includes","areMessagesEqual","prevMessage","nextMessage","areBaseMessagesEqual","_prevMessage$latest_r","_nextMessage$latest_r","_prevMessage$own_reac","_nextMessage$own_reac","_prevMessage$user","_nextMessage$user","deleted_at","latest_reactions","own_reactions","pinned","reply_count","status","text","type","updated_at","Boolean","quoted_message","areMessagePropsEqual","prevProps","nextProps","Message","prevMessageUI","nextMessageUI","endOfGroup","showDetailedReactions","closeReactionSelectorOnClick","messagesAreEqual","deepEqualProps","readBy","highlighted","groupStyles","lastReceivedId","messageListRect","areMessageUIPropsEqual","_prevProps$mutes","_nextProps$mutes","_prevProps$readBy","_nextProps$readBy","prevLastReceivedId","nextLastReceivedId","editing","messageHasReactions","_message$reaction_gro","values","reaction_groups","some","_ref3","count","messageHasAttachments","attachments","getImages","item","getNonImageAttachments","mapToUserNameOrId","name","getReadByTooltipText","users","t","client","tooltipUserNameMapper","outStr","Error","otherUsers","map","slicedArr","slice","restLength","concat","firstUser","secondUser","lastUser","splice","commaSeparatedUsers","join","moreCount","isOnlyEmojis","noEmojis","replace","noSpace","isMessageBounced","_message$moderation_d","_message$moderation","moderation_details","moderation","isMessageBlocked","_message$moderation_d2","_message$moderation2","isMessageEdited","message_text_updated_at"],"sources":["/tmp/daft-chat-temp/node_modules/stream-chat-react/dist/components/Message/utils.js"],"sourcesContent":["import deepequal from 'react-fast-compare';\nimport emojiRegex from 'emoji-regex';\n/**\n * Following function validates a function which returns notification message.\n * It validates if the first parameter is function and also if return value of function is string or no.\n */\nexport const validateAndGetMessage = (func, args) => {\n    if (!func || typeof func !== 'function')\n        return null;\n    // below is due to tests passing a single argument\n    // rather than an array.\n    if (!Array.isArray(args)) {\n        args = [args];\n    }\n    const returnValue = func(...args);\n    if (typeof returnValue !== 'string')\n        return null;\n    return returnValue;\n};\n/**\n * Tell if the owner of the current message is muted\n */\nexport const isUserMuted = (message, mutes) => {\n    if (!mutes || !message)\n        return false;\n    const userMuted = mutes.filter((el) => el.target.id === message.user?.id);\n    return !!userMuted.length;\n};\nexport const MESSAGE_ACTIONS = {\n    delete: 'delete',\n    edit: 'edit',\n    flag: 'flag',\n    markUnread: 'markUnread',\n    mute: 'mute',\n    pin: 'pin',\n    quote: 'quote',\n    react: 'react',\n    remindMe: 'remindMe',\n    reply: 'reply',\n    saveForLater: 'saveForLater',\n};\n// @deprecated in favor of `channelCapabilities` - TODO: remove in next major release\nexport const defaultPinPermissions = {\n    commerce: {\n        admin: true,\n        anonymous: false,\n        channel_member: false,\n        channel_moderator: true,\n        guest: false,\n        member: false,\n        moderator: true,\n        owner: true,\n        user: false,\n    },\n    gaming: {\n        admin: true,\n        anonymous: false,\n        channel_member: false,\n        channel_moderator: true,\n        guest: false,\n        member: false,\n        moderator: true,\n        owner: false,\n        user: false,\n    },\n    livestream: {\n        admin: true,\n        anonymous: false,\n        channel_member: false,\n        channel_moderator: true,\n        guest: false,\n        member: false,\n        moderator: true,\n        owner: true,\n        user: false,\n    },\n    messaging: {\n        admin: true,\n        anonymous: false,\n        channel_member: true,\n        channel_moderator: true,\n        guest: false,\n        member: true,\n        moderator: true,\n        owner: true,\n        user: false,\n    },\n    team: {\n        admin: true,\n        anonymous: false,\n        channel_member: true,\n        channel_moderator: true,\n        guest: false,\n        member: true,\n        moderator: true,\n        owner: true,\n        user: false,\n    },\n};\nexport const getMessageActions = (actions, { canDelete, canEdit, canFlag, canMarkUnread, canMute, canPin, canQuote, canReact, canReply, }, channelConfig) => {\n    const messageActionsAfterPermission = [];\n    let messageActions = [];\n    if (actions && typeof actions === 'boolean') {\n        // If value of actions is true, then populate all the possible values\n        messageActions = Object.keys(MESSAGE_ACTIONS);\n    }\n    else if (actions && actions.length > 0) {\n        messageActions = [...actions];\n    }\n    else {\n        return [];\n    }\n    if (canDelete && messageActions.indexOf(MESSAGE_ACTIONS.delete) > -1) {\n        messageActionsAfterPermission.push(MESSAGE_ACTIONS.delete);\n    }\n    if (canEdit && messageActions.indexOf(MESSAGE_ACTIONS.edit) > -1) {\n        messageActionsAfterPermission.push(MESSAGE_ACTIONS.edit);\n    }\n    if (canFlag && messageActions.indexOf(MESSAGE_ACTIONS.flag) > -1) {\n        messageActionsAfterPermission.push(MESSAGE_ACTIONS.flag);\n    }\n    if (canMarkUnread && messageActions.indexOf(MESSAGE_ACTIONS.markUnread) > -1) {\n        messageActionsAfterPermission.push(MESSAGE_ACTIONS.markUnread);\n    }\n    if (canMute && messageActions.indexOf(MESSAGE_ACTIONS.mute) > -1) {\n        messageActionsAfterPermission.push(MESSAGE_ACTIONS.mute);\n    }\n    if (canPin && messageActions.indexOf(MESSAGE_ACTIONS.pin) > -1) {\n        messageActionsAfterPermission.push(MESSAGE_ACTIONS.pin);\n    }\n    if (canQuote && messageActions.indexOf(MESSAGE_ACTIONS.quote) > -1) {\n        messageActionsAfterPermission.push(MESSAGE_ACTIONS.quote);\n    }\n    if (canReact && messageActions.indexOf(MESSAGE_ACTIONS.react) > -1) {\n        messageActionsAfterPermission.push(MESSAGE_ACTIONS.react);\n    }\n    if (channelConfig?.['user_message_reminders'] &&\n        messageActions.indexOf(MESSAGE_ACTIONS.remindMe)) {\n        messageActionsAfterPermission.push(MESSAGE_ACTIONS.remindMe);\n    }\n    if (canReply && messageActions.indexOf(MESSAGE_ACTIONS.reply) > -1) {\n        messageActionsAfterPermission.push(MESSAGE_ACTIONS.reply);\n    }\n    if (channelConfig?.['user_message_reminders'] &&\n        messageActions.indexOf(MESSAGE_ACTIONS.saveForLater)) {\n        messageActionsAfterPermission.push(MESSAGE_ACTIONS.saveForLater);\n    }\n    return messageActionsAfterPermission;\n};\nexport const ACTIONS_NOT_WORKING_IN_THREAD = [\n    MESSAGE_ACTIONS.pin,\n    MESSAGE_ACTIONS.reply,\n    MESSAGE_ACTIONS.markUnread,\n];\n/**\n * @deprecated use `shouldRenderMessageActions` instead\n */\nexport const showMessageActionsBox = (actions, inThread) => shouldRenderMessageActions({ inThread, messageActions: actions });\nexport const shouldRenderMessageActions = ({ customMessageActions, CustomMessageActionsList, inThread, messageActions, }) => {\n    if (typeof CustomMessageActionsList !== 'undefined' ||\n        typeof customMessageActions !== 'undefined')\n        return true;\n    if (!messageActions.length)\n        return false;\n    if (inThread &&\n        messageActions.filter((action) => !ACTIONS_NOT_WORKING_IN_THREAD.includes(action))\n            .length === 0) {\n        return false;\n    }\n    if (messageActions.length === 1 &&\n        (messageActions.includes(MESSAGE_ACTIONS.react) ||\n            messageActions.includes(MESSAGE_ACTIONS.reply))) {\n        return false;\n    }\n    if (messageActions.length === 2 &&\n        messageActions.includes(MESSAGE_ACTIONS.react) &&\n        messageActions.includes(MESSAGE_ACTIONS.reply)) {\n        return false;\n    }\n    return true;\n};\nfunction areMessagesEqual(prevMessage, nextMessage) {\n    const areBaseMessagesEqual = (prevMessage, nextMessage) => prevMessage.deleted_at === nextMessage.deleted_at &&\n        prevMessage.latest_reactions?.length === nextMessage.latest_reactions?.length &&\n        prevMessage.own_reactions?.length === nextMessage.own_reactions?.length &&\n        prevMessage.pinned === nextMessage.pinned &&\n        prevMessage.reply_count === nextMessage.reply_count &&\n        prevMessage.status === nextMessage.status &&\n        prevMessage.text === nextMessage.text &&\n        prevMessage.type === nextMessage.type &&\n        prevMessage.updated_at === nextMessage.updated_at &&\n        prevMessage.user?.updated_at === nextMessage.user?.updated_at;\n    return (areBaseMessagesEqual(prevMessage, nextMessage) &&\n        Boolean(prevMessage.quoted_message) === Boolean(nextMessage.quoted_message) &&\n        ((!prevMessage.quoted_message && !nextMessage.quoted_message) ||\n            areBaseMessagesEqual(prevMessage.quoted_message, nextMessage.quoted_message)));\n}\nexport const areMessagePropsEqual = (prevProps, nextProps) => {\n    const { message: prevMessage, Message: prevMessageUI } = prevProps;\n    const { message: nextMessage, Message: nextMessageUI } = nextProps;\n    if (prevMessageUI !== nextMessageUI)\n        return false;\n    if (prevProps.endOfGroup !== nextProps.endOfGroup)\n        return false;\n    if (nextProps.showDetailedReactions !== prevProps.showDetailedReactions) {\n        return false;\n    }\n    if (nextProps.closeReactionSelectorOnClick !== prevProps.closeReactionSelectorOnClick) {\n        return false;\n    }\n    const messagesAreEqual = areMessagesEqual(prevMessage, nextMessage);\n    if (!messagesAreEqual)\n        return false;\n    const deepEqualProps = deepequal(nextProps.messageActions, prevProps.messageActions) &&\n        deepequal(nextProps.readBy, prevProps.readBy) &&\n        deepequal(nextProps.highlighted, prevProps.highlighted) &&\n        deepequal(nextProps.groupStyles, prevProps.groupStyles) && // last 3 messages can have different group styles\n        deepequal(nextProps.mutes, prevProps.mutes) &&\n        deepequal(nextProps.lastReceivedId, prevProps.lastReceivedId);\n    if (!deepEqualProps)\n        return false;\n    return (prevProps.messageListRect === nextProps.messageListRect // MessageList wrapper layout changes\n    );\n};\nexport const areMessageUIPropsEqual = (prevProps, nextProps) => {\n    const { lastReceivedId: prevLastReceivedId, message: prevMessage } = prevProps;\n    const { lastReceivedId: nextLastReceivedId, message: nextMessage } = nextProps;\n    if (prevProps.editing !== nextProps.editing)\n        return false;\n    if (prevProps.highlighted !== nextProps.highlighted)\n        return false;\n    if (prevProps.endOfGroup !== nextProps.endOfGroup)\n        return false;\n    if (prevProps.mutes?.length !== nextProps.mutes?.length)\n        return false;\n    if (prevProps.readBy?.length !== nextProps.readBy?.length)\n        return false;\n    if (prevProps.groupStyles !== nextProps.groupStyles)\n        return false;\n    if (prevProps.showDetailedReactions !== nextProps.showDetailedReactions) {\n        return false;\n    }\n    if ((prevMessage.id === prevLastReceivedId || prevMessage.id === nextLastReceivedId) &&\n        prevLastReceivedId !== nextLastReceivedId) {\n        return false;\n    }\n    return areMessagesEqual(prevMessage, nextMessage);\n};\nexport const messageHasReactions = (message) => Object.values(message?.reaction_groups ?? {}).some(({ count }) => count > 0);\nexport const messageHasAttachments = (message) => !!message?.attachments && !!message.attachments.length;\nexport const getImages = (message) => {\n    if (!message?.attachments) {\n        return [];\n    }\n    return message.attachments.filter((item) => item.type === 'image');\n};\nexport const getNonImageAttachments = (message) => {\n    if (!message?.attachments) {\n        return [];\n    }\n    return message.attachments.filter((item) => item.type !== 'image');\n};\n/**\n * Default Tooltip Username mapper implementation.\n *\n * @param user the user.\n */\nexport const mapToUserNameOrId = (user) => user.name || user.id;\nexport const getReadByTooltipText = (users, t, client, tooltipUserNameMapper) => {\n    let outStr = '';\n    if (!t) {\n        throw new Error('getReadByTooltipText was called, but translation function is not available');\n    }\n    if (!tooltipUserNameMapper) {\n        throw new Error('getReadByTooltipText was called, but tooltipUserNameMapper function is not available');\n    }\n    // first filter out client user, so restLength won't count it\n    const otherUsers = users\n        .filter((item) => item && client?.user && item.id !== client.user.id)\n        .map(tooltipUserNameMapper);\n    const slicedArr = otherUsers.slice(0, 5);\n    const restLength = otherUsers.length - slicedArr.length;\n    if (slicedArr.length === 1) {\n        outStr = `${slicedArr[0]} `;\n    }\n    else if (slicedArr.length === 2) {\n        // joins all with \"and\" but =no commas\n        // example: \"bob and sam\"\n        outStr = t('{{ firstUser }} and {{ secondUser }}', {\n            firstUser: slicedArr[0],\n            secondUser: slicedArr[1],\n        });\n    }\n    else if (slicedArr.length > 2) {\n        // joins all with commas, but last one gets \", and\" (oxford comma!)\n        // example: \"bob, joe, sam and 4 more\"\n        if (restLength === 0) {\n            // mutate slicedArr to remove last user to display it separately\n            const lastUser = slicedArr.splice(slicedArr.length - 1, 1);\n            outStr = t('{{ commaSeparatedUsers }}, and {{ lastUser }}', {\n                commaSeparatedUsers: slicedArr.join(', '),\n                lastUser,\n            });\n        }\n        else {\n            outStr = t('{{ commaSeparatedUsers }} and {{ moreCount }} more', {\n                commaSeparatedUsers: slicedArr.join(', '),\n                moreCount: restLength,\n            });\n        }\n    }\n    return outStr;\n};\nexport const isOnlyEmojis = (text) => {\n    if (!text)\n        return false;\n    const noEmojis = text.replace(emojiRegex(), '');\n    const noSpace = noEmojis.replace(/[\\s\\n]/gm, '');\n    return !noSpace;\n};\nexport const isMessageBounced = (message) => message.type === 'error' &&\n    (message.moderation_details?.action === 'MESSAGE_RESPONSE_ACTION_BOUNCE' ||\n        message.moderation?.action === 'bounce');\nexport const isMessageBlocked = (message) => message.type === 'error' &&\n    (message.moderation_details?.action === 'MESSAGE_RESPONSE_ACTION_REMOVE' ||\n        message.moderation?.action === 'remove');\nexport const isMessageEdited = (message) => !!message.message_text_updated_at;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}