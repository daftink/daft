{"ast":null,"code":"import React,{useEffect,useState}from'react';import{StreamChat}from'stream-chat';import{Chat,Channel,ChannelHeader,MessageList,MessageInput}from'stream-chat-react';import'stream-chat-css/dist/css/index.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const API_KEY='3nkn6wg7k7zt';const USER_ID='daftuser';export default function App(){const[client,setClient]=useState(null);const[activeChannel,setActiveChannel]=useState(null);useEffect(()=>{(async()=>{// 1) bootstrap the client\nconst chatClient=StreamChat.getInstance(API_KEY);const res=await fetch('/token',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({userId:USER_ID})});if(!res.ok)throw new Error('token fetch failed: '+res.status);const{token}=await res.json();await chatClient.connectUser({id:USER_ID,name:'Daft User'},token);// 2) create & watch our channel\nconst channel=chatClient.channel('messaging','daft-channel',{name:'Daft Chat'});await channel.watch();// 3) hand off to React\nsetClient(chatClient);setActiveChannel(channel);})();return()=>client===null||client===void 0?void 0:client.disconnectUser();},[]);if(!client||!activeChannel){return/*#__PURE__*/_jsx(\"div\",{style:{padding:20},children:\"Loading chat\\u2026\"});}return/*#__PURE__*/_jsx(Chat,{client:client,theme:\"messaging light\",children:/*#__PURE__*/_jsxs(Channel,{channel:activeChannel,children:[/*#__PURE__*/_jsx(ChannelHeader,{}),/*#__PURE__*/_jsx(MessageList,{}),/*#__PURE__*/_jsx(MessageInput,{})]})});}","map":{"version":3,"names":["React","useEffect","useState","StreamChat","Chat","Channel","ChannelHeader","MessageList","MessageInput","jsx","_jsx","jsxs","_jsxs","API_KEY","USER_ID","App","client","setClient","activeChannel","setActiveChannel","chatClient","getInstance","res","fetch","method","headers","body","JSON","stringify","userId","ok","Error","status","token","json","connectUser","id","name","channel","watch","disconnectUser","style","padding","children","theme"],"sources":["/tmp/daft-chat-temp/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { StreamChat } from 'stream-chat';\nimport {\n  Chat,\n  Channel,\n  ChannelHeader,\n  MessageList,\n  MessageInput,\n} from 'stream-chat-react';\nimport 'stream-chat-css/dist/css/index.css';\n\nconst API_KEY  = '3nkn6wg7k7zt';\nconst USER_ID  = 'daftuser';\n\nexport default function App() {\n  const [client, setClient] = useState(null);\n  const [activeChannel, setActiveChannel] = useState(null);\n\n  useEffect(() => {\n    (async () => {\n      // 1) bootstrap the client\n      const chatClient = StreamChat.getInstance(API_KEY);\n      const res = await fetch('/token', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ userId: USER_ID }),\n      });\n      if (!res.ok) throw new Error('token fetch failed: ' + res.status);\n      const { token } = await res.json();\n      await chatClient.connectUser({ id: USER_ID, name: 'Daft User' }, token);\n\n      // 2) create & watch our channel\n      const channel = chatClient.channel('messaging', 'daft-channel', {\n        name: 'Daft Chat',\n      });\n      await channel.watch();\n\n      // 3) hand off to React\n      setClient(chatClient);\n      setActiveChannel(channel);\n    })();\n\n    return () => client?.disconnectUser();\n  }, []);\n\n  if (!client || !activeChannel) {\n    return <div style={{ padding: 20 }}>Loading chatâ€¦</div>;\n  }\n\n  return (\n    <Chat client={client} theme=\"messaging light\">\n      <Channel channel={activeChannel}>\n        <ChannelHeader />\n        <MessageList />\n        <MessageInput />\n      </Channel>\n    </Chat>\n  );\n}\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,UAAU,KAAQ,aAAa,CACxC,OACEC,IAAI,CACJC,OAAO,CACPC,aAAa,CACbC,WAAW,CACXC,YAAY,KACP,mBAAmB,CAC1B,MAAO,oCAAoC,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE5C,KAAM,CAAAC,OAAO,CAAI,cAAc,CAC/B,KAAM,CAAAC,OAAO,CAAI,UAAU,CAE3B,cAAe,SAAS,CAAAC,GAAGA,CAAA,CAAG,CAC5B,KAAM,CAACC,MAAM,CAAEC,SAAS,CAAC,CAAGf,QAAQ,CAAC,IAAI,CAAC,CAC1C,KAAM,CAACgB,aAAa,CAAEC,gBAAgB,CAAC,CAAGjB,QAAQ,CAAC,IAAI,CAAC,CAExDD,SAAS,CAAC,IAAM,CACd,CAAC,SAAY,CACX;AACA,KAAM,CAAAmB,UAAU,CAAGjB,UAAU,CAACkB,WAAW,CAACR,OAAO,CAAC,CAClD,KAAM,CAAAS,GAAG,CAAG,KAAM,CAAAC,KAAK,CAAC,QAAQ,CAAE,CAChCC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEC,MAAM,CAAEf,OAAQ,CAAC,CAC1C,CAAC,CAAC,CACF,GAAI,CAACQ,GAAG,CAACQ,EAAE,CAAE,KAAM,IAAI,CAAAC,KAAK,CAAC,sBAAsB,CAAGT,GAAG,CAACU,MAAM,CAAC,CACjE,KAAM,CAAEC,KAAM,CAAC,CAAG,KAAM,CAAAX,GAAG,CAACY,IAAI,CAAC,CAAC,CAClC,KAAM,CAAAd,UAAU,CAACe,WAAW,CAAC,CAAEC,EAAE,CAAEtB,OAAO,CAAEuB,IAAI,CAAE,WAAY,CAAC,CAAEJ,KAAK,CAAC,CAEvE;AACA,KAAM,CAAAK,OAAO,CAAGlB,UAAU,CAACkB,OAAO,CAAC,WAAW,CAAE,cAAc,CAAE,CAC9DD,IAAI,CAAE,WACR,CAAC,CAAC,CACF,KAAM,CAAAC,OAAO,CAACC,KAAK,CAAC,CAAC,CAErB;AACAtB,SAAS,CAACG,UAAU,CAAC,CACrBD,gBAAgB,CAACmB,OAAO,CAAC,CAC3B,CAAC,EAAE,CAAC,CAEJ,MAAO,IAAMtB,MAAM,SAANA,MAAM,iBAANA,MAAM,CAAEwB,cAAc,CAAC,CAAC,CACvC,CAAC,CAAE,EAAE,CAAC,CAEN,GAAI,CAACxB,MAAM,EAAI,CAACE,aAAa,CAAE,CAC7B,mBAAOR,IAAA,QAAK+B,KAAK,CAAE,CAAEC,OAAO,CAAE,EAAG,CAAE,CAAAC,QAAA,CAAC,oBAAa,CAAK,CAAC,CACzD,CAEA,mBACEjC,IAAA,CAACN,IAAI,EAACY,MAAM,CAAEA,MAAO,CAAC4B,KAAK,CAAC,iBAAiB,CAAAD,QAAA,cAC3C/B,KAAA,CAACP,OAAO,EAACiC,OAAO,CAAEpB,aAAc,CAAAyB,QAAA,eAC9BjC,IAAA,CAACJ,aAAa,GAAE,CAAC,cACjBI,IAAA,CAACH,WAAW,GAAE,CAAC,cACfG,IAAA,CAACF,YAAY,GAAE,CAAC,EACT,CAAC,CACN,CAAC,CAEX","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}