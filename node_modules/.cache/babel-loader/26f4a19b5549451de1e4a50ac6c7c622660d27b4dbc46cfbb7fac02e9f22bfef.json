{"ast":null,"code":"import _objectSpread from \"/tmp/daft-chat-temp/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/tmp/daft-chat-temp/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"onFileChange\", \"resetOnChange\"],\n  _excluded2 = [\"className\", \"onFileChange\"];\nimport clsx from 'clsx';\nimport { nanoid } from 'nanoid';\nimport React, { forwardRef, useCallback, useMemo } from 'react';\nimport { useHandleFileChangeWrapper } from './utils';\nimport { useMessageInputContext, useTranslationContext } from '../../context';\nimport { useMessageComposer } from '../MessageInput';\nimport { useAttachmentManagerState } from '../MessageInput/hooks/useAttachmentManagerState';\nimport { useStateStore } from '../../store';\nconst attachmentManagerConfigStateSelector = state => ({\n  acceptedFiles: state.attachments.acceptedFiles,\n  maxNumberOfFilesPerMessage: state.attachments.maxNumberOfFilesPerMessage\n});\n/**\n * @deprecated Use FileInput instead\n */\nexport const UploadButton = forwardRef(function UploadButton(_ref, ref) {\n  let {\n      onFileChange,\n      resetOnChange = true\n    } = _ref,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  const handleInputChange = useHandleFileChangeWrapper(resetOnChange, onFileChange);\n  return React.createElement(\"input\", _objectSpread({\n    onChange: handleInputChange,\n    ref: ref,\n    type: 'file'\n  }, rest));\n});\nexport const FileInput = UploadButton;\nexport const UploadFileInput = forwardRef(function UploadFileInput(_ref2, ref) {\n  let {\n      className,\n      onFileChange: onFileChangeCustom\n    } = _ref2,\n    props = _objectWithoutProperties(_ref2, _excluded2);\n  const {\n    t\n  } = useTranslationContext('UploadFileInput');\n  const {\n    cooldownRemaining\n  } = useMessageInputContext();\n  const messageComposer = useMessageComposer();\n  const {\n    attachmentManager\n  } = messageComposer;\n  const {\n    isUploadEnabled\n  } = useAttachmentManagerState();\n  const {\n    acceptedFiles,\n    maxNumberOfFilesPerMessage\n  } = useStateStore(messageComposer.configState, attachmentManagerConfigStateSelector);\n  const id = useMemo(() => nanoid(), []);\n  const onFileChange = useCallback(files => {\n    attachmentManager.uploadFiles(files);\n    onFileChangeCustom === null || onFileChangeCustom === void 0 || onFileChangeCustom(files);\n  }, [onFileChangeCustom, attachmentManager]);\n  return React.createElement(FileInput, _objectSpread(_objectSpread({\n    accept: acceptedFiles === null || acceptedFiles === void 0 ? void 0 : acceptedFiles.join(','),\n    \"aria-label\": t('aria/File upload'),\n    \"data-testid\": 'file-input',\n    disabled: !isUploadEnabled || !!cooldownRemaining,\n    id: id,\n    multiple: maxNumberOfFilesPerMessage > 1\n  }, props), {}, {\n    className: clsx('str-chat__file-input', className),\n    onFileChange: onFileChange,\n    ref: ref\n  }));\n});","map":{"version":3,"names":["clsx","nanoid","React","forwardRef","useCallback","useMemo","useHandleFileChangeWrapper","useMessageInputContext","useTranslationContext","useMessageComposer","useAttachmentManagerState","useStateStore","attachmentManagerConfigStateSelector","state","acceptedFiles","attachments","maxNumberOfFilesPerMessage","UploadButton","_ref","ref","onFileChange","resetOnChange","rest","_objectWithoutProperties","_excluded","handleInputChange","createElement","_objectSpread","onChange","type","FileInput","UploadFileInput","_ref2","className","onFileChangeCustom","props","_excluded2","t","cooldownRemaining","messageComposer","attachmentManager","isUploadEnabled","configState","id","files","uploadFiles","accept","join","disabled","multiple"],"sources":["/tmp/daft-chat-temp/node_modules/stream-chat-react/dist/components/ReactFileUtilities/UploadButton.js"],"sourcesContent":["import clsx from 'clsx';\nimport { nanoid } from 'nanoid';\nimport React, { forwardRef, useCallback, useMemo } from 'react';\nimport { useHandleFileChangeWrapper } from './utils';\nimport { useMessageInputContext, useTranslationContext } from '../../context';\nimport { useMessageComposer } from '../MessageInput';\nimport { useAttachmentManagerState } from '../MessageInput/hooks/useAttachmentManagerState';\nimport { useStateStore } from '../../store';\nconst attachmentManagerConfigStateSelector = (state) => ({\n    acceptedFiles: state.attachments.acceptedFiles,\n    maxNumberOfFilesPerMessage: state.attachments.maxNumberOfFilesPerMessage,\n});\n/**\n * @deprecated Use FileInput instead\n */\nexport const UploadButton = forwardRef(function UploadButton({ onFileChange, resetOnChange = true, ...rest }, ref) {\n    const handleInputChange = useHandleFileChangeWrapper(resetOnChange, onFileChange);\n    return React.createElement(\"input\", { onChange: handleInputChange, ref: ref, type: 'file', ...rest });\n});\nexport const FileInput = UploadButton;\nexport const UploadFileInput = forwardRef(function UploadFileInput({ className, onFileChange: onFileChangeCustom, ...props }, ref) {\n    const { t } = useTranslationContext('UploadFileInput');\n    const { cooldownRemaining } = useMessageInputContext();\n    const messageComposer = useMessageComposer();\n    const { attachmentManager } = messageComposer;\n    const { isUploadEnabled } = useAttachmentManagerState();\n    const { acceptedFiles, maxNumberOfFilesPerMessage } = useStateStore(messageComposer.configState, attachmentManagerConfigStateSelector);\n    const id = useMemo(() => nanoid(), []);\n    const onFileChange = useCallback((files) => {\n        attachmentManager.uploadFiles(files);\n        onFileChangeCustom?.(files);\n    }, [onFileChangeCustom, attachmentManager]);\n    return (React.createElement(FileInput, { accept: acceptedFiles?.join(','), \"aria-label\": t('aria/File upload'), \"data-testid\": 'file-input', disabled: !isUploadEnabled || !!cooldownRemaining, id: id, multiple: maxNumberOfFilesPerMessage > 1, ...props, className: clsx('str-chat__file-input', className), onFileChange: onFileChange, ref: ref }));\n});\n"],"mappings":";;;;AAAA,OAAOA,IAAI,MAAM,MAAM;AACvB,SAASC,MAAM,QAAQ,QAAQ;AAC/B,OAAOC,KAAK,IAAIC,UAAU,EAAEC,WAAW,EAAEC,OAAO,QAAQ,OAAO;AAC/D,SAASC,0BAA0B,QAAQ,SAAS;AACpD,SAASC,sBAAsB,EAAEC,qBAAqB,QAAQ,eAAe;AAC7E,SAASC,kBAAkB,QAAQ,iBAAiB;AACpD,SAASC,yBAAyB,QAAQ,iDAAiD;AAC3F,SAASC,aAAa,QAAQ,aAAa;AAC3C,MAAMC,oCAAoC,GAAIC,KAAK,KAAM;EACrDC,aAAa,EAAED,KAAK,CAACE,WAAW,CAACD,aAAa;EAC9CE,0BAA0B,EAAEH,KAAK,CAACE,WAAW,CAACC;AAClD,CAAC,CAAC;AACF;AACA;AACA;AACA,OAAO,MAAMC,YAAY,GAAGd,UAAU,CAAC,SAASc,YAAYA,CAAAC,IAAA,EAAkDC,GAAG,EAAE;EAAA,IAAtD;MAAEC,YAAY;MAAEC,aAAa,GAAG;IAAc,CAAC,GAAAH,IAAA;IAANI,IAAI,GAAAC,wBAAA,CAAAL,IAAA,EAAAM,SAAA;EACtG,MAAMC,iBAAiB,GAAGnB,0BAA0B,CAACe,aAAa,EAAED,YAAY,CAAC;EACjF,OAAOlB,KAAK,CAACwB,aAAa,CAAC,OAAO,EAAAC,aAAA;IAAIC,QAAQ,EAAEH,iBAAiB;IAAEN,GAAG,EAAEA,GAAG;IAAEU,IAAI,EAAE;EAAM,GAAKP,IAAI,CAAE,CAAC;AACzG,CAAC,CAAC;AACF,OAAO,MAAMQ,SAAS,GAAGb,YAAY;AACrC,OAAO,MAAMc,eAAe,GAAG5B,UAAU,CAAC,SAAS4B,eAAeA,CAAAC,KAAA,EAA4Db,GAAG,EAAE;EAAA,IAAhE;MAAEc,SAAS;MAAEb,YAAY,EAAEc;IAA6B,CAAC,GAAAF,KAAA;IAAPG,KAAK,GAAAZ,wBAAA,CAAAS,KAAA,EAAAI,UAAA;EACtH,MAAM;IAAEC;EAAE,CAAC,GAAG7B,qBAAqB,CAAC,iBAAiB,CAAC;EACtD,MAAM;IAAE8B;EAAkB,CAAC,GAAG/B,sBAAsB,CAAC,CAAC;EACtD,MAAMgC,eAAe,GAAG9B,kBAAkB,CAAC,CAAC;EAC5C,MAAM;IAAE+B;EAAkB,CAAC,GAAGD,eAAe;EAC7C,MAAM;IAAEE;EAAgB,CAAC,GAAG/B,yBAAyB,CAAC,CAAC;EACvD,MAAM;IAAEI,aAAa;IAAEE;EAA2B,CAAC,GAAGL,aAAa,CAAC4B,eAAe,CAACG,WAAW,EAAE9B,oCAAoC,CAAC;EACtI,MAAM+B,EAAE,GAAGtC,OAAO,CAAC,MAAMJ,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC;EACtC,MAAMmB,YAAY,GAAGhB,WAAW,CAAEwC,KAAK,IAAK;IACxCJ,iBAAiB,CAACK,WAAW,CAACD,KAAK,CAAC;IACpCV,kBAAkB,aAAlBA,kBAAkB,eAAlBA,kBAAkB,CAAGU,KAAK,CAAC;EAC/B,CAAC,EAAE,CAACV,kBAAkB,EAAEM,iBAAiB,CAAC,CAAC;EAC3C,OAAQtC,KAAK,CAACwB,aAAa,CAACI,SAAS,EAAAH,aAAA,CAAAA,aAAA;IAAImB,MAAM,EAAEhC,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEiC,IAAI,CAAC,GAAG,CAAC;IAAE,YAAY,EAAEV,CAAC,CAAC,kBAAkB,CAAC;IAAE,aAAa,EAAE,YAAY;IAAEW,QAAQ,EAAE,CAACP,eAAe,IAAI,CAAC,CAACH,iBAAiB;IAAEK,EAAE,EAAEA,EAAE;IAAEM,QAAQ,EAAEjC,0BAA0B,GAAG;EAAC,GAAKmB,KAAK;IAAEF,SAAS,EAAEjC,IAAI,CAAC,sBAAsB,EAAEiC,SAAS,CAAC;IAAEb,YAAY,EAAEA,YAAY;IAAED,GAAG,EAAEA;EAAG,EAAE,CAAC;AAC3V,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}