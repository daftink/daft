{"ast":null,"code":"import React, { useCallback } from 'react';\nimport { useDialogIsOpen, useOpenedDialogCount } from './hooks';\nimport { Portal } from '../Portal/Portal';\nimport { useDialogManager } from '../../context';\nexport const DialogPortalDestination = () => {\n  const {\n    dialogManager\n  } = useDialogManager();\n  const openedDialogCount = useOpenedDialogCount();\n  return React.createElement(\"div\", {\n    className: 'str-chat__dialog-overlay',\n    \"data-str-chat__portal-id\": dialogManager.id,\n    \"data-testid\": 'str-chat__dialog-overlay',\n    onClick: () => dialogManager.closeAll(),\n    style: {\n      '--str-chat__dialog-overlay-height': openedDialogCount > 0 ? '100%' : '0'\n    }\n  });\n};\nexport const DialogPortalEntry = _ref => {\n  let {\n    children,\n    dialogId\n  } = _ref;\n  const {\n    dialogManager\n  } = useDialogManager();\n  const dialogIsOpen = useDialogIsOpen(dialogId);\n  const getPortalDestination = useCallback(() => document.querySelector(\"div[data-str-chat__portal-id=\\\"\".concat(dialogManager.id, \"\\\"]\")), [dialogManager.id]);\n  return React.createElement(Portal, {\n    getPortalDestination: getPortalDestination,\n    isOpen: dialogIsOpen\n  }, children);\n};","map":{"version":3,"names":["React","useCallback","useDialogIsOpen","useOpenedDialogCount","Portal","useDialogManager","DialogPortalDestination","dialogManager","openedDialogCount","createElement","className","id","onClick","closeAll","style","DialogPortalEntry","_ref","children","dialogId","dialogIsOpen","getPortalDestination","document","querySelector","concat","isOpen"],"sources":["/tmp/daft-chat-temp/node_modules/stream-chat-react/dist/components/Dialog/DialogPortal.js"],"sourcesContent":["import React, { useCallback } from 'react';\nimport { useDialogIsOpen, useOpenedDialogCount } from './hooks';\nimport { Portal } from '../Portal/Portal';\nimport { useDialogManager } from '../../context';\nexport const DialogPortalDestination = () => {\n    const { dialogManager } = useDialogManager();\n    const openedDialogCount = useOpenedDialogCount();\n    return (React.createElement(\"div\", { className: 'str-chat__dialog-overlay', \"data-str-chat__portal-id\": dialogManager.id, \"data-testid\": 'str-chat__dialog-overlay', onClick: () => dialogManager.closeAll(), style: {\n            '--str-chat__dialog-overlay-height': openedDialogCount > 0 ? '100%' : '0',\n        } }));\n};\nexport const DialogPortalEntry = ({ children, dialogId, }) => {\n    const { dialogManager } = useDialogManager();\n    const dialogIsOpen = useDialogIsOpen(dialogId);\n    const getPortalDestination = useCallback(() => document.querySelector(`div[data-str-chat__portal-id=\"${dialogManager.id}\"]`), [dialogManager.id]);\n    return (React.createElement(Portal, { getPortalDestination: getPortalDestination, isOpen: dialogIsOpen }, children));\n};\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,WAAW,QAAQ,OAAO;AAC1C,SAASC,eAAe,EAAEC,oBAAoB,QAAQ,SAAS;AAC/D,SAASC,MAAM,QAAQ,kBAAkB;AACzC,SAASC,gBAAgB,QAAQ,eAAe;AAChD,OAAO,MAAMC,uBAAuB,GAAGA,CAAA,KAAM;EACzC,MAAM;IAAEC;EAAc,CAAC,GAAGF,gBAAgB,CAAC,CAAC;EAC5C,MAAMG,iBAAiB,GAAGL,oBAAoB,CAAC,CAAC;EAChD,OAAQH,KAAK,CAACS,aAAa,CAAC,KAAK,EAAE;IAAEC,SAAS,EAAE,0BAA0B;IAAE,0BAA0B,EAAEH,aAAa,CAACI,EAAE;IAAE,aAAa,EAAE,0BAA0B;IAAEC,OAAO,EAAEA,CAAA,KAAML,aAAa,CAACM,QAAQ,CAAC,CAAC;IAAEC,KAAK,EAAE;MAC7M,mCAAmC,EAAEN,iBAAiB,GAAG,CAAC,GAAG,MAAM,GAAG;IAC1E;EAAE,CAAC,CAAC;AACZ,CAAC;AACD,OAAO,MAAMO,iBAAiB,GAAGC,IAAA,IAA6B;EAAA,IAA5B;IAAEC,QAAQ;IAAEC;EAAU,CAAC,GAAAF,IAAA;EACrD,MAAM;IAAET;EAAc,CAAC,GAAGF,gBAAgB,CAAC,CAAC;EAC5C,MAAMc,YAAY,GAAGjB,eAAe,CAACgB,QAAQ,CAAC;EAC9C,MAAME,oBAAoB,GAAGnB,WAAW,CAAC,MAAMoB,QAAQ,CAACC,aAAa,mCAAAC,MAAA,CAAkChB,aAAa,CAACI,EAAE,QAAI,CAAC,EAAE,CAACJ,aAAa,CAACI,EAAE,CAAC,CAAC;EACjJ,OAAQX,KAAK,CAACS,aAAa,CAACL,MAAM,EAAE;IAAEgB,oBAAoB,EAAEA,oBAAoB;IAAEI,MAAM,EAAEL;EAAa,CAAC,EAAEF,QAAQ,CAAC;AACvH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}