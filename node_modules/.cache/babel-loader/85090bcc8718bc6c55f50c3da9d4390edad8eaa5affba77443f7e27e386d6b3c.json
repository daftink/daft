{"ast":null,"code":"import clsx from 'clsx';\nimport React, { useCallback } from 'react';\nimport { FieldError } from '../../Form/FieldError';\nimport { DragAndDropContainer } from '../../DragAndDrop/DragAndDropContainer';\nimport { useTranslationContext } from '../../../context';\nimport { useMessageComposer } from '../../MessageInput';\nimport { useStateStore } from '../../../store';\nconst pollComposerStateSelector = state => ({\n  errors: state.errors.options,\n  options: state.data.options\n});\nexport const OptionFieldSet = () => {\n  const {\n    pollComposer\n  } = useMessageComposer();\n  const {\n    errors,\n    options\n  } = useStateStore(pollComposer.state, pollComposerStateSelector);\n  const {\n    t\n  } = useTranslationContext('OptionFieldSet');\n  const onSetNewOrder = useCallback(newOrder => {\n    const prevOptions = pollComposer.options;\n    pollComposer.updateFields({\n      options: newOrder.map(index => prevOptions[index])\n    });\n  }, [pollComposer]);\n  const draggable = options.length > 1;\n  return React.createElement(\"fieldset\", {\n    className: 'str-chat__form__field str-chat__form__input-fieldset'\n  }, React.createElement(\"legend\", {\n    className: 'str-chat__form__field-label'\n  }, t('Options')), React.createElement(DragAndDropContainer, {\n    className: 'str-chat__form__input-fieldset__values',\n    draggable: draggable,\n    onSetNewOrder: onSetNewOrder\n  }, options.map((option, i) => {\n    const error = errors === null || errors === void 0 ? void 0 : errors[option.id];\n    return React.createElement(\"div\", {\n      className: clsx('str-chat__form__input-field', {\n        'str-chat__form__input-field--draggable': draggable,\n        'str-chat__form__input-field--has-error': error\n      }),\n      key: \"new-poll-option-\".concat(i)\n    }, React.createElement(\"div\", {\n      className: 'str-chat__form__input-field__value'\n    }, React.createElement(FieldError, {\n      className: 'str-chat__form__input-field__error',\n      \"data-testid\": 'poll-option-input-field-error',\n      text: error && t(error)\n    }), React.createElement(\"input\", {\n      id: option.id,\n      onBlur: () => {\n        pollComposer.handleFieldBlur('options');\n      },\n      onChange: e => {\n        pollComposer.updateFields({\n          options: {\n            index: i,\n            text: e.target.value\n          }\n        });\n      },\n      onKeyUp: event => {\n        if (event.key === 'Enter') {\n          var _document$getElementB;\n          const nextInputId = options[i + 1].id;\n          (_document$getElementB = document.getElementById(nextInputId)) === null || _document$getElementB === void 0 || _document$getElementB.focus();\n        }\n      },\n      placeholder: t('Add an option'),\n      type: 'text',\n      value: option.text\n    })), draggable && React.createElement(\"div\", {\n      className: 'str-chat__drag-handle'\n    }));\n  })));\n};","map":{"version":3,"names":["clsx","React","useCallback","FieldError","DragAndDropContainer","useTranslationContext","useMessageComposer","useStateStore","pollComposerStateSelector","state","errors","options","data","OptionFieldSet","pollComposer","t","onSetNewOrder","newOrder","prevOptions","updateFields","map","index","draggable","length","createElement","className","option","i","error","id","key","concat","text","onBlur","handleFieldBlur","onChange","e","target","value","onKeyUp","event","_document$getElementB","nextInputId","document","getElementById","focus","placeholder","type"],"sources":["/tmp/daft-chat-temp/node_modules/stream-chat-react/dist/components/Poll/PollCreationDialog/OptionFieldSet.js"],"sourcesContent":["import clsx from 'clsx';\nimport React, { useCallback } from 'react';\nimport { FieldError } from '../../Form/FieldError';\nimport { DragAndDropContainer } from '../../DragAndDrop/DragAndDropContainer';\nimport { useTranslationContext } from '../../../context';\nimport { useMessageComposer } from '../../MessageInput';\nimport { useStateStore } from '../../../store';\nconst pollComposerStateSelector = (state) => ({\n    errors: state.errors.options,\n    options: state.data.options,\n});\nexport const OptionFieldSet = () => {\n    const { pollComposer } = useMessageComposer();\n    const { errors, options } = useStateStore(pollComposer.state, pollComposerStateSelector);\n    const { t } = useTranslationContext('OptionFieldSet');\n    const onSetNewOrder = useCallback((newOrder) => {\n        const prevOptions = pollComposer.options;\n        pollComposer.updateFields({ options: newOrder.map((index) => prevOptions[index]) });\n    }, [pollComposer]);\n    const draggable = options.length > 1;\n    return (React.createElement(\"fieldset\", { className: 'str-chat__form__field str-chat__form__input-fieldset' },\n        React.createElement(\"legend\", { className: 'str-chat__form__field-label' }, t('Options')),\n        React.createElement(DragAndDropContainer, { className: 'str-chat__form__input-fieldset__values', draggable: draggable, onSetNewOrder: onSetNewOrder }, options.map((option, i) => {\n            const error = errors?.[option.id];\n            return (React.createElement(\"div\", { className: clsx('str-chat__form__input-field', {\n                    'str-chat__form__input-field--draggable': draggable,\n                    'str-chat__form__input-field--has-error': error,\n                }), key: `new-poll-option-${i}` },\n                React.createElement(\"div\", { className: 'str-chat__form__input-field__value' },\n                    React.createElement(FieldError, { className: 'str-chat__form__input-field__error', \"data-testid\": 'poll-option-input-field-error', text: error && t(error) }),\n                    React.createElement(\"input\", { id: option.id, onBlur: () => {\n                            pollComposer.handleFieldBlur('options');\n                        }, onChange: (e) => {\n                            pollComposer.updateFields({\n                                options: { index: i, text: e.target.value },\n                            });\n                        }, onKeyUp: (event) => {\n                            if (event.key === 'Enter') {\n                                const nextInputId = options[i + 1].id;\n                                document.getElementById(nextInputId)?.focus();\n                            }\n                        }, placeholder: t('Add an option'), type: 'text', value: option.text })),\n                draggable && React.createElement(\"div\", { className: 'str-chat__drag-handle' })));\n        }))));\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}