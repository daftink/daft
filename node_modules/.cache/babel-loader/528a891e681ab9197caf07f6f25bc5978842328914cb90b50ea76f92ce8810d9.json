{"ast":null,"code":"import React from 'react';\nimport { useChannelStateContext } from '../../context/ChannelStateContext';\nimport { useTranslationContext } from '../../context/TranslationContext';\nexport const ThreadStart = () => {\n  const {\n    thread\n  } = useChannelStateContext('ThreadStart');\n  const {\n    t\n  } = useTranslationContext('ThreadStart');\n  if (!(thread !== null && thread !== void 0 && thread.reply_count)) return null;\n  return React.createElement(\"div\", {\n    className: 'str-chat__thread-start'\n  }, t('replyCount', {\n    count: thread.reply_count\n  }));\n};","map":{"version":3,"names":["React","useChannelStateContext","useTranslationContext","ThreadStart","thread","t","reply_count","createElement","className","count"],"sources":["/tmp/daft-chat-temp/node_modules/stream-chat-react/dist/components/Thread/ThreadStart.js"],"sourcesContent":["import React from 'react';\nimport { useChannelStateContext } from '../../context/ChannelStateContext';\nimport { useTranslationContext } from '../../context/TranslationContext';\nexport const ThreadStart = () => {\n    const { thread } = useChannelStateContext('ThreadStart');\n    const { t } = useTranslationContext('ThreadStart');\n    if (!thread?.reply_count)\n        return null;\n    return (React.createElement(\"div\", { className: 'str-chat__thread-start' }, t('replyCount', { count: thread.reply_count })));\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,sBAAsB,QAAQ,mCAAmC;AAC1E,SAASC,qBAAqB,QAAQ,kCAAkC;AACxE,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAC7B,MAAM;IAAEC;EAAO,CAAC,GAAGH,sBAAsB,CAAC,aAAa,CAAC;EACxD,MAAM;IAAEI;EAAE,CAAC,GAAGH,qBAAqB,CAAC,aAAa,CAAC;EAClD,IAAI,EAACE,MAAM,aAANA,MAAM,eAANA,MAAM,CAAEE,WAAW,GACpB,OAAO,IAAI;EACf,OAAQN,KAAK,CAACO,aAAa,CAAC,KAAK,EAAE;IAAEC,SAAS,EAAE;EAAyB,CAAC,EAAEH,CAAC,CAAC,YAAY,EAAE;IAAEI,KAAK,EAAEL,MAAM,CAACE;EAAY,CAAC,CAAC,CAAC;AAC/H,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}