{"ast":null,"code":"import { Subscription } from '../observable/Subscription';\nimport { Subject } from '../observable/Subject';\nimport { BehaviorSubject } from '../observable/BehaviorSubject';\nexport var RecordingPermission;\n(function (RecordingPermission) {\n  RecordingPermission[\"CAM\"] = \"camera\";\n  RecordingPermission[\"MIC\"] = \"microphone\";\n})(RecordingPermission || (RecordingPermission = {}));\nconst MEDIA_TO_PERMISSION = {\n  audio: RecordingPermission.MIC,\n  video: RecordingPermission.CAM\n};\nexport class BrowserPermission {\n  constructor(_ref) {\n    let {\n      mediaType\n    } = _ref;\n    this.state = new BehaviorSubject(undefined);\n    this.status = new BehaviorSubject(undefined);\n    this.error = new Subject();\n    this.changeSubscriptions = [];\n    this.name = MEDIA_TO_PERMISSION[mediaType];\n  }\n  get isWatching() {\n    return this.changeSubscriptions.some(subscription => !subscription.closed);\n  }\n  async watch() {\n    if (!this.status.value) {\n      await this.check();\n      if (!this.status.value) return;\n    }\n    const status = this.status.value;\n    const handlePermissionChange = e => {\n      const {\n        state\n      } = e.target;\n      this.state.next(state);\n    };\n    status.addEventListener('change', handlePermissionChange);\n    this.changeSubscriptions.push(new Subscription(() => {\n      status.removeEventListener('change', handlePermissionChange);\n    }));\n  }\n  unwatch() {\n    this.changeSubscriptions.forEach(subscription => subscription.unsubscribe());\n  }\n  async check() {\n    if (!this.name) {\n      this.error.next(new Error('Unknown media recording permission'));\n      return;\n    }\n    let permissionState;\n    try {\n      const permissionStatus = await navigator.permissions.query({\n        name: this.name\n      });\n      permissionState = permissionStatus.state;\n      this.status.next(permissionStatus);\n    } catch (e) {\n      // permission does not exist - cannot be queried\n      // an example would be Firefox - camera, neither microphone perms can be queried\n      permissionState = 'granted';\n    }\n    this.state.next(permissionState);\n  }\n}","map":{"version":3,"names":["Subscription","Subject","BehaviorSubject","RecordingPermission","MEDIA_TO_PERMISSION","audio","MIC","video","CAM","BrowserPermission","constructor","_ref","mediaType","state","undefined","status","error","changeSubscriptions","name","isWatching","some","subscription","closed","watch","value","check","handlePermissionChange","e","target","next","addEventListener","push","removeEventListener","unwatch","forEach","unsubscribe","Error","permissionState","permissionStatus","navigator","permissions","query"],"sources":["/tmp/daft-chat-temp/node_modules/stream-chat-react/dist/components/MediaRecorder/classes/BrowserPermission.js"],"sourcesContent":["import { Subscription } from '../observable/Subscription';\nimport { Subject } from '../observable/Subject';\nimport { BehaviorSubject } from '../observable/BehaviorSubject';\nexport var RecordingPermission;\n(function (RecordingPermission) {\n    RecordingPermission[\"CAM\"] = \"camera\";\n    RecordingPermission[\"MIC\"] = \"microphone\";\n})(RecordingPermission || (RecordingPermission = {}));\nconst MEDIA_TO_PERMISSION = {\n    audio: RecordingPermission.MIC,\n    video: RecordingPermission.CAM,\n};\nexport class BrowserPermission {\n    constructor({ mediaType }) {\n        this.state = new BehaviorSubject(undefined);\n        this.status = new BehaviorSubject(undefined);\n        this.error = new Subject();\n        this.changeSubscriptions = [];\n        this.name = MEDIA_TO_PERMISSION[mediaType];\n    }\n    get isWatching() {\n        return this.changeSubscriptions.some((subscription) => !subscription.closed);\n    }\n    async watch() {\n        if (!this.status.value) {\n            await this.check();\n            if (!this.status.value)\n                return;\n        }\n        const status = this.status.value;\n        const handlePermissionChange = (e) => {\n            const { state } = e.target;\n            this.state.next(state);\n        };\n        status.addEventListener('change', handlePermissionChange);\n        this.changeSubscriptions.push(new Subscription(() => {\n            status.removeEventListener('change', handlePermissionChange);\n        }));\n    }\n    unwatch() {\n        this.changeSubscriptions.forEach((subscription) => subscription.unsubscribe());\n    }\n    async check() {\n        if (!this.name) {\n            this.error.next(new Error('Unknown media recording permission'));\n            return;\n        }\n        let permissionState;\n        try {\n            const permissionStatus = await navigator.permissions.query({\n                name: this.name,\n            });\n            permissionState = permissionStatus.state;\n            this.status.next(permissionStatus);\n        }\n        catch (e) {\n            // permission does not exist - cannot be queried\n            // an example would be Firefox - camera, neither microphone perms can be queried\n            permissionState = 'granted';\n        }\n        this.state.next(permissionState);\n    }\n}\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,4BAA4B;AACzD,SAASC,OAAO,QAAQ,uBAAuB;AAC/C,SAASC,eAAe,QAAQ,+BAA+B;AAC/D,OAAO,IAAIC,mBAAmB;AAC9B,CAAC,UAAUA,mBAAmB,EAAE;EAC5BA,mBAAmB,CAAC,KAAK,CAAC,GAAG,QAAQ;EACrCA,mBAAmB,CAAC,KAAK,CAAC,GAAG,YAAY;AAC7C,CAAC,EAAEA,mBAAmB,KAAKA,mBAAmB,GAAG,CAAC,CAAC,CAAC,CAAC;AACrD,MAAMC,mBAAmB,GAAG;EACxBC,KAAK,EAAEF,mBAAmB,CAACG,GAAG;EAC9BC,KAAK,EAAEJ,mBAAmB,CAACK;AAC/B,CAAC;AACD,OAAO,MAAMC,iBAAiB,CAAC;EAC3BC,WAAWA,CAAAC,IAAA,EAAgB;IAAA,IAAf;MAAEC;IAAU,CAAC,GAAAD,IAAA;IACrB,IAAI,CAACE,KAAK,GAAG,IAAIX,eAAe,CAACY,SAAS,CAAC;IAC3C,IAAI,CAACC,MAAM,GAAG,IAAIb,eAAe,CAACY,SAAS,CAAC;IAC5C,IAAI,CAACE,KAAK,GAAG,IAAIf,OAAO,CAAC,CAAC;IAC1B,IAAI,CAACgB,mBAAmB,GAAG,EAAE;IAC7B,IAAI,CAACC,IAAI,GAAGd,mBAAmB,CAACQ,SAAS,CAAC;EAC9C;EACA,IAAIO,UAAUA,CAAA,EAAG;IACb,OAAO,IAAI,CAACF,mBAAmB,CAACG,IAAI,CAAEC,YAAY,IAAK,CAACA,YAAY,CAACC,MAAM,CAAC;EAChF;EACA,MAAMC,KAAKA,CAAA,EAAG;IACV,IAAI,CAAC,IAAI,CAACR,MAAM,CAACS,KAAK,EAAE;MACpB,MAAM,IAAI,CAACC,KAAK,CAAC,CAAC;MAClB,IAAI,CAAC,IAAI,CAACV,MAAM,CAACS,KAAK,EAClB;IACR;IACA,MAAMT,MAAM,GAAG,IAAI,CAACA,MAAM,CAACS,KAAK;IAChC,MAAME,sBAAsB,GAAIC,CAAC,IAAK;MAClC,MAAM;QAAEd;MAAM,CAAC,GAAGc,CAAC,CAACC,MAAM;MAC1B,IAAI,CAACf,KAAK,CAACgB,IAAI,CAAChB,KAAK,CAAC;IAC1B,CAAC;IACDE,MAAM,CAACe,gBAAgB,CAAC,QAAQ,EAAEJ,sBAAsB,CAAC;IACzD,IAAI,CAACT,mBAAmB,CAACc,IAAI,CAAC,IAAI/B,YAAY,CAAC,MAAM;MACjDe,MAAM,CAACiB,mBAAmB,CAAC,QAAQ,EAAEN,sBAAsB,CAAC;IAChE,CAAC,CAAC,CAAC;EACP;EACAO,OAAOA,CAAA,EAAG;IACN,IAAI,CAAChB,mBAAmB,CAACiB,OAAO,CAAEb,YAAY,IAAKA,YAAY,CAACc,WAAW,CAAC,CAAC,CAAC;EAClF;EACA,MAAMV,KAAKA,CAAA,EAAG;IACV,IAAI,CAAC,IAAI,CAACP,IAAI,EAAE;MACZ,IAAI,CAACF,KAAK,CAACa,IAAI,CAAC,IAAIO,KAAK,CAAC,oCAAoC,CAAC,CAAC;MAChE;IACJ;IACA,IAAIC,eAAe;IACnB,IAAI;MACA,MAAMC,gBAAgB,GAAG,MAAMC,SAAS,CAACC,WAAW,CAACC,KAAK,CAAC;QACvDvB,IAAI,EAAE,IAAI,CAACA;MACf,CAAC,CAAC;MACFmB,eAAe,GAAGC,gBAAgB,CAACzB,KAAK;MACxC,IAAI,CAACE,MAAM,CAACc,IAAI,CAACS,gBAAgB,CAAC;IACtC,CAAC,CACD,OAAOX,CAAC,EAAE;MACN;MACA;MACAU,eAAe,GAAG,SAAS;IAC/B;IACA,IAAI,CAACxB,KAAK,CAACgB,IAAI,CAACQ,eAAe,CAAC;EACpC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}