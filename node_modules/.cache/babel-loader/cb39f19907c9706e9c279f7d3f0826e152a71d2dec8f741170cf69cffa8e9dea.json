{"ast":null,"code":"import _objectSpread from \"/tmp/daft-chat-temp/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/tmp/daft-chat-temp/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"children\", \"className\", \"focus\", \"id\", \"placement\", \"referenceElement\", \"tabIndex\", \"trapFocus\"];\nimport clsx from 'clsx';\nimport React, { useEffect, useState } from 'react';\nimport { FocusScope } from '@react-aria/focus';\nimport { usePopper } from 'react-popper';\nimport { DialogPortalEntry } from './DialogPortal';\nimport { useDialog, useDialogIsOpen } from './hooks';\nexport function useDialogAnchor(_ref) {\n  let {\n    open,\n    placement,\n    referenceElement\n  } = _ref;\n  const [popperElement, setPopperElement] = useState(null);\n  const {\n    attributes,\n    styles,\n    update\n  } = usePopper(referenceElement, popperElement, {\n    modifiers: [{\n      name: 'eventListeners',\n      options: {\n        // It's not safe to update popper position on resize and scroll, since popper's\n        // reference element might not be visible at the time.\n        resize: false,\n        scroll: false\n      }\n    }],\n    placement\n  });\n  useEffect(() => {\n    if (open && popperElement) {\n      // Since the popper's reference element might not be (and usually is not) visible\n      // all the time, it's safer to force popper update before showing it.\n      // update is non-null only if popperElement is non-null\n      update === null || update === void 0 || update();\n    }\n  }, [open, popperElement, update]);\n  if (popperElement && !open) {\n    setPopperElement(null);\n  }\n  return {\n    attributes,\n    setPopperElement,\n    styles\n  };\n}\nexport const DialogAnchor = _ref2 => {\n  let {\n      children,\n      className,\n      focus = true,\n      id,\n      placement = 'auto',\n      referenceElement = null,\n      tabIndex,\n      trapFocus\n    } = _ref2,\n    restDivProps = _objectWithoutProperties(_ref2, _excluded);\n  const dialog = useDialog({\n    id\n  });\n  const open = useDialogIsOpen(id);\n  const {\n    attributes,\n    setPopperElement,\n    styles\n  } = useDialogAnchor({\n    open,\n    placement,\n    referenceElement\n  });\n  useEffect(() => {\n    if (!open) return;\n    const hideOnEscape = event => {\n      if (event.key !== 'Escape') return;\n      dialog === null || dialog === void 0 || dialog.close();\n    };\n    document.addEventListener('keyup', hideOnEscape);\n    return () => {\n      document.removeEventListener('keyup', hideOnEscape);\n    };\n  }, [dialog, open]);\n  // prevent rendering the dialog contents if the dialog should not be open / shown\n  if (!open) {\n    return null;\n  }\n  return React.createElement(DialogPortalEntry, {\n    dialogId: id\n  }, React.createElement(FocusScope, {\n    autoFocus: focus,\n    contain: trapFocus,\n    restoreFocus: true\n  }, React.createElement(\"div\", _objectSpread(_objectSpread(_objectSpread({}, restDivProps), attributes.popper), {}, {\n    className: clsx('str-chat__dialog-contents', className),\n    \"data-testid\": 'str-chat__dialog-contents',\n    ref: setPopperElement,\n    style: styles.popper,\n    tabIndex: typeof tabIndex !== 'undefined' ? tabIndex : 0\n  }), children)));\n};","map":{"version":3,"names":["clsx","React","useEffect","useState","FocusScope","usePopper","DialogPortalEntry","useDialog","useDialogIsOpen","useDialogAnchor","_ref","open","placement","referenceElement","popperElement","setPopperElement","attributes","styles","update","modifiers","name","options","resize","scroll","DialogAnchor","_ref2","children","className","focus","id","tabIndex","trapFocus","restDivProps","_objectWithoutProperties","_excluded","dialog","hideOnEscape","event","key","close","document","addEventListener","removeEventListener","createElement","dialogId","autoFocus","contain","restoreFocus","_objectSpread","popper","ref","style"],"sources":["/tmp/daft-chat-temp/node_modules/stream-chat-react/dist/components/Dialog/DialogAnchor.js"],"sourcesContent":["import clsx from 'clsx';\nimport React, { useEffect, useState } from 'react';\nimport { FocusScope } from '@react-aria/focus';\nimport { usePopper } from 'react-popper';\nimport { DialogPortalEntry } from './DialogPortal';\nimport { useDialog, useDialogIsOpen } from './hooks';\nexport function useDialogAnchor({ open, placement, referenceElement, }) {\n    const [popperElement, setPopperElement] = useState(null);\n    const { attributes, styles, update } = usePopper(referenceElement, popperElement, {\n        modifiers: [\n            {\n                name: 'eventListeners',\n                options: {\n                    // It's not safe to update popper position on resize and scroll, since popper's\n                    // reference element might not be visible at the time.\n                    resize: false,\n                    scroll: false,\n                },\n            },\n        ],\n        placement,\n    });\n    useEffect(() => {\n        if (open && popperElement) {\n            // Since the popper's reference element might not be (and usually is not) visible\n            // all the time, it's safer to force popper update before showing it.\n            // update is non-null only if popperElement is non-null\n            update?.();\n        }\n    }, [open, popperElement, update]);\n    if (popperElement && !open) {\n        setPopperElement(null);\n    }\n    return {\n        attributes,\n        setPopperElement,\n        styles,\n    };\n}\nexport const DialogAnchor = ({ children, className, focus = true, id, placement = 'auto', referenceElement = null, tabIndex, trapFocus, ...restDivProps }) => {\n    const dialog = useDialog({ id });\n    const open = useDialogIsOpen(id);\n    const { attributes, setPopperElement, styles } = useDialogAnchor({\n        open,\n        placement,\n        referenceElement,\n    });\n    useEffect(() => {\n        if (!open)\n            return;\n        const hideOnEscape = (event) => {\n            if (event.key !== 'Escape')\n                return;\n            dialog?.close();\n        };\n        document.addEventListener('keyup', hideOnEscape);\n        return () => {\n            document.removeEventListener('keyup', hideOnEscape);\n        };\n    }, [dialog, open]);\n    // prevent rendering the dialog contents if the dialog should not be open / shown\n    if (!open) {\n        return null;\n    }\n    return (React.createElement(DialogPortalEntry, { dialogId: id },\n        React.createElement(FocusScope, { autoFocus: focus, contain: trapFocus, restoreFocus: true },\n            React.createElement(\"div\", { ...restDivProps, ...attributes.popper, className: clsx('str-chat__dialog-contents', className), \"data-testid\": 'str-chat__dialog-contents', ref: setPopperElement, style: styles.popper, tabIndex: typeof tabIndex !== 'undefined' ? tabIndex : 0 }, children))));\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}