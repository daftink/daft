{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport { useChatContext } from '../../../context/ChatContext';\nexport const useIsChannelMuted = channel => {\n  const {\n    client\n  } = useChatContext('useIsChannelMuted');\n  const [muted, setMuted] = useState(channel.muteStatus());\n  useEffect(() => {\n    const handleEvent = () => setMuted(channel.muteStatus());\n    client.on('notification.channel_mutes_updated', handleEvent);\n    return () => client.off('notification.channel_mutes_updated', handleEvent);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [muted]);\n  return muted;\n};","map":{"version":3,"names":["useEffect","useState","useChatContext","useIsChannelMuted","channel","client","muted","setMuted","muteStatus","handleEvent","on","off"],"sources":["/tmp/daft-chat-temp/node_modules/stream-chat-react/dist/components/ChannelPreview/hooks/useIsChannelMuted.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useChatContext } from '../../../context/ChatContext';\nexport const useIsChannelMuted = (channel) => {\n    const { client } = useChatContext('useIsChannelMuted');\n    const [muted, setMuted] = useState(channel.muteStatus());\n    useEffect(() => {\n        const handleEvent = () => setMuted(channel.muteStatus());\n        client.on('notification.channel_mutes_updated', handleEvent);\n        return () => client.off('notification.channel_mutes_updated', handleEvent);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [muted]);\n    return muted;\n};\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,cAAc,QAAQ,8BAA8B;AAC7D,OAAO,MAAMC,iBAAiB,GAAIC,OAAO,IAAK;EAC1C,MAAM;IAAEC;EAAO,CAAC,GAAGH,cAAc,CAAC,mBAAmB,CAAC;EACtD,MAAM,CAACI,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAACG,OAAO,CAACI,UAAU,CAAC,CAAC,CAAC;EACxDR,SAAS,CAAC,MAAM;IACZ,MAAMS,WAAW,GAAGA,CAAA,KAAMF,QAAQ,CAACH,OAAO,CAACI,UAAU,CAAC,CAAC,CAAC;IACxDH,MAAM,CAACK,EAAE,CAAC,oCAAoC,EAAED,WAAW,CAAC;IAC5D,OAAO,MAAMJ,MAAM,CAACM,GAAG,CAAC,oCAAoC,EAAEF,WAAW,CAAC;IAC1E;EACJ,CAAC,EAAE,CAACH,KAAK,CAAC,CAAC;EACX,OAAOA,KAAK;AAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}