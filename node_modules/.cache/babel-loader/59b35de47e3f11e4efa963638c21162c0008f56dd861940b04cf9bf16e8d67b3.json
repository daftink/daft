{"ast":null,"code":"import { useCallback } from 'react';\nimport { useChatContext } from '../../../context';\nimport { useStateStore } from '../../../store';\nexport const useMessageReminder = messageId => {\n  const {\n    client\n  } = useChatContext();\n  const reminderSelector = useCallback(state => ({\n    reminder: state.reminders.get(messageId)\n  }), [messageId]);\n  const {\n    reminder\n  } = useStateStore(client.reminders.state, reminderSelector);\n  return reminder;\n};","map":{"version":3,"names":["useCallback","useChatContext","useStateStore","useMessageReminder","messageId","client","reminderSelector","state","reminder","reminders","get"],"sources":["/tmp/daft-chat-temp/node_modules/stream-chat-react/dist/components/Message/hooks/useMessageReminder.js"],"sourcesContent":["import { useCallback } from 'react';\nimport { useChatContext } from '../../../context';\nimport { useStateStore } from '../../../store';\nexport const useMessageReminder = (messageId) => {\n    const { client } = useChatContext();\n    const reminderSelector = useCallback((state) => ({\n        reminder: state.reminders.get(messageId),\n    }), [messageId]);\n    const { reminder } = useStateStore(client.reminders.state, reminderSelector);\n    return reminder;\n};\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,cAAc,QAAQ,kBAAkB;AACjD,SAASC,aAAa,QAAQ,gBAAgB;AAC9C,OAAO,MAAMC,kBAAkB,GAAIC,SAAS,IAAK;EAC7C,MAAM;IAAEC;EAAO,CAAC,GAAGJ,cAAc,CAAC,CAAC;EACnC,MAAMK,gBAAgB,GAAGN,WAAW,CAAEO,KAAK,KAAM;IAC7CC,QAAQ,EAAED,KAAK,CAACE,SAAS,CAACC,GAAG,CAACN,SAAS;EAC3C,CAAC,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;EAChB,MAAM;IAAEI;EAAS,CAAC,GAAGN,aAAa,CAACG,MAAM,CAACI,SAAS,CAACF,KAAK,EAAED,gBAAgB,CAAC;EAC5E,OAAOE,QAAQ;AACnB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}