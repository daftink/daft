{"ast":null,"code":"import { useCallback, useEffect } from 'react';\nimport { useDialogManager } from '../../../context';\nimport { useStateStore } from '../../../store';\nexport const useDialog = _ref => {\n  let {\n    id\n  } = _ref;\n  const {\n    dialogManager\n  } = useDialogManager();\n  useEffect(() => () => {\n    // Since this cleanup can run even if the component is still mounted\n    // and dialog id is unchanged (e.g. in <StrictMode />), it's safer to\n    // mark state as unused and only remove it after a timeout, rather than\n    // to remove it immediately.\n    dialogManager.markForRemoval(id);\n  }, [dialogManager, id]);\n  return dialogManager.getOrCreate({\n    id\n  });\n};\nexport const useDialogIsOpen = id => {\n  const {\n    dialogManager\n  } = useDialogManager();\n  const dialogIsOpenSelector = useCallback(_ref2 => {\n    var _dialogsById$id;\n    let {\n      dialogsById\n    } = _ref2;\n    return {\n      isOpen: !!((_dialogsById$id = dialogsById[id]) !== null && _dialogsById$id !== void 0 && _dialogsById$id.isOpen)\n    };\n  }, [id]);\n  return useStateStore(dialogManager.state, dialogIsOpenSelector).isOpen;\n};\nconst openedDialogCountSelector = nextValue => ({\n  openedDialogCount: Object.values(nextValue.dialogsById).reduce((count, dialog) => {\n    if (dialog.isOpen) return count + 1;\n    return count;\n  }, 0)\n});\nexport const useOpenedDialogCount = () => {\n  const {\n    dialogManager\n  } = useDialogManager();\n  return useStateStore(dialogManager.state, openedDialogCountSelector).openedDialogCount;\n};","map":{"version":3,"names":["useCallback","useEffect","useDialogManager","useStateStore","useDialog","_ref","id","dialogManager","markForRemoval","getOrCreate","useDialogIsOpen","dialogIsOpenSelector","_ref2","_dialogsById$id","dialogsById","isOpen","state","openedDialogCountSelector","nextValue","openedDialogCount","Object","values","reduce","count","dialog","useOpenedDialogCount"],"sources":["/tmp/daft-chat-temp/node_modules/stream-chat-react/dist/components/Dialog/hooks/useDialog.js"],"sourcesContent":["import { useCallback, useEffect } from 'react';\nimport { useDialogManager } from '../../../context';\nimport { useStateStore } from '../../../store';\nexport const useDialog = ({ id }) => {\n    const { dialogManager } = useDialogManager();\n    useEffect(() => () => {\n        // Since this cleanup can run even if the component is still mounted\n        // and dialog id is unchanged (e.g. in <StrictMode />), it's safer to\n        // mark state as unused and only remove it after a timeout, rather than\n        // to remove it immediately.\n        dialogManager.markForRemoval(id);\n    }, [dialogManager, id]);\n    return dialogManager.getOrCreate({ id });\n};\nexport const useDialogIsOpen = (id) => {\n    const { dialogManager } = useDialogManager();\n    const dialogIsOpenSelector = useCallback(({ dialogsById }) => ({ isOpen: !!dialogsById[id]?.isOpen }), [id]);\n    return useStateStore(dialogManager.state, dialogIsOpenSelector).isOpen;\n};\nconst openedDialogCountSelector = (nextValue) => ({\n    openedDialogCount: Object.values(nextValue.dialogsById).reduce((count, dialog) => {\n        if (dialog.isOpen)\n            return count + 1;\n        return count;\n    }, 0),\n});\nexport const useOpenedDialogCount = () => {\n    const { dialogManager } = useDialogManager();\n    return useStateStore(dialogManager.state, openedDialogCountSelector).openedDialogCount;\n};\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,SAAS,QAAQ,OAAO;AAC9C,SAASC,gBAAgB,QAAQ,kBAAkB;AACnD,SAASC,aAAa,QAAQ,gBAAgB;AAC9C,OAAO,MAAMC,SAAS,GAAGC,IAAA,IAAY;EAAA,IAAX;IAAEC;EAAG,CAAC,GAAAD,IAAA;EAC5B,MAAM;IAAEE;EAAc,CAAC,GAAGL,gBAAgB,CAAC,CAAC;EAC5CD,SAAS,CAAC,MAAM,MAAM;IAClB;IACA;IACA;IACA;IACAM,aAAa,CAACC,cAAc,CAACF,EAAE,CAAC;EACpC,CAAC,EAAE,CAACC,aAAa,EAAED,EAAE,CAAC,CAAC;EACvB,OAAOC,aAAa,CAACE,WAAW,CAAC;IAAEH;EAAG,CAAC,CAAC;AAC5C,CAAC;AACD,OAAO,MAAMI,eAAe,GAAIJ,EAAE,IAAK;EACnC,MAAM;IAAEC;EAAc,CAAC,GAAGL,gBAAgB,CAAC,CAAC;EAC5C,MAAMS,oBAAoB,GAAGX,WAAW,CAACY,KAAA;IAAA,IAAAC,eAAA;IAAA,IAAC;MAAEC;IAAY,CAAC,GAAAF,KAAA;IAAA,OAAM;MAAEG,MAAM,EAAE,CAAC,GAAAF,eAAA,GAACC,WAAW,CAACR,EAAE,CAAC,cAAAO,eAAA,eAAfA,eAAA,CAAiBE,MAAM;IAAC,CAAC;EAAA,CAAC,EAAE,CAACT,EAAE,CAAC,CAAC;EAC5G,OAAOH,aAAa,CAACI,aAAa,CAACS,KAAK,EAAEL,oBAAoB,CAAC,CAACI,MAAM;AAC1E,CAAC;AACD,MAAME,yBAAyB,GAAIC,SAAS,KAAM;EAC9CC,iBAAiB,EAAEC,MAAM,CAACC,MAAM,CAACH,SAAS,CAACJ,WAAW,CAAC,CAACQ,MAAM,CAAC,CAACC,KAAK,EAAEC,MAAM,KAAK;IAC9E,IAAIA,MAAM,CAACT,MAAM,EACb,OAAOQ,KAAK,GAAG,CAAC;IACpB,OAAOA,KAAK;EAChB,CAAC,EAAE,CAAC;AACR,CAAC,CAAC;AACF,OAAO,MAAME,oBAAoB,GAAGA,CAAA,KAAM;EACtC,MAAM;IAAElB;EAAc,CAAC,GAAGL,gBAAgB,CAAC,CAAC;EAC5C,OAAOC,aAAa,CAACI,aAAa,CAACS,KAAK,EAAEC,yBAAyB,CAAC,CAACE,iBAAiB;AAC1F,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}