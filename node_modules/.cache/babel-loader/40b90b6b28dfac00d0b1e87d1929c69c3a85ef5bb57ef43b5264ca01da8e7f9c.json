{"ast":null,"code":"import { useEffect } from 'react';\nexport const useMobileNavigation = (channelListRef, navOpen, closeMobileNav) => {\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (closeMobileNav && channelListRef.current && !channelListRef.current.contains(event.target) && navOpen) {\n        closeMobileNav();\n      }\n    };\n    document.addEventListener('click', handleClickOutside);\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n    };\n  }, [channelListRef, closeMobileNav, navOpen]);\n};","map":{"version":3,"names":["useEffect","useMobileNavigation","channelListRef","navOpen","closeMobileNav","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener"],"sources":["/tmp/daft-chat-temp/node_modules/stream-chat-react/dist/components/ChannelList/hooks/useMobileNavigation.js"],"sourcesContent":["import { useEffect } from 'react';\nexport const useMobileNavigation = (channelListRef, navOpen, closeMobileNav) => {\n    useEffect(() => {\n        const handleClickOutside = (event) => {\n            if (closeMobileNav &&\n                channelListRef.current &&\n                !channelListRef.current.contains(event.target) &&\n                navOpen) {\n                closeMobileNav();\n            }\n        };\n        document.addEventListener('click', handleClickOutside);\n        return () => {\n            document.removeEventListener('click', handleClickOutside);\n        };\n    }, [channelListRef, closeMobileNav, navOpen]);\n};\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAO,MAAMC,mBAAmB,GAAGA,CAACC,cAAc,EAAEC,OAAO,EAAEC,cAAc,KAAK;EAC5EJ,SAAS,CAAC,MAAM;IACZ,MAAMK,kBAAkB,GAAIC,KAAK,IAAK;MAClC,IAAIF,cAAc,IACdF,cAAc,CAACK,OAAO,IACtB,CAACL,cAAc,CAACK,OAAO,CAACC,QAAQ,CAACF,KAAK,CAACG,MAAM,CAAC,IAC9CN,OAAO,EAAE;QACTC,cAAc,CAAC,CAAC;MACpB;IACJ,CAAC;IACDM,QAAQ,CAACC,gBAAgB,CAAC,OAAO,EAAEN,kBAAkB,CAAC;IACtD,OAAO,MAAM;MACTK,QAAQ,CAACE,mBAAmB,CAAC,OAAO,EAAEP,kBAAkB,CAAC;IAC7D,CAAC;EACL,CAAC,EAAE,CAACH,cAAc,EAAEE,cAAc,EAAED,OAAO,CAAC,CAAC;AACjD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}