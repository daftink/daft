{"ast":null,"code":"import _objectSpread from \"/tmp/daft-chat-temp/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport React, { useContext } from 'react';\nexport const ChannelActionContext = React.createContext(undefined);\nexport const ChannelActionProvider = _ref => {\n  let {\n    children,\n    value\n  } = _ref;\n  return React.createElement(ChannelActionContext.Provider, {\n    value: value\n  }, children);\n};\nexport const useChannelActionContext = componentName => {\n  const contextValue = useContext(ChannelActionContext);\n  if (!contextValue) {\n    console.warn(\"The useChannelActionContext hook was called outside of the ChannelActionContext provider. Make sure this hook is called within a child of the Channel component. The errored call is located in the \".concat(componentName, \" component.\"));\n    return {};\n  }\n  return contextValue;\n};\n/**\n * Typescript currently does not support partial inference, so if ChannelActionContext\n * typing is desired while using the HOC withChannelActionContext, the Props for the\n * wrapped component must be provided as the first generic.\n */\nexport const withChannelActionContext = Component => {\n  const WithChannelActionContextComponent = props => {\n    const channelActionContext = useChannelActionContext();\n    return React.createElement(Component, _objectSpread(_objectSpread({}, props), channelActionContext));\n  };\n  WithChannelActionContextComponent.displayName = (Component.displayName || Component.name || 'Component').replace('Base', '');\n  return WithChannelActionContextComponent;\n};","map":{"version":3,"names":["React","useContext","ChannelActionContext","createContext","undefined","ChannelActionProvider","_ref","children","value","createElement","Provider","useChannelActionContext","componentName","contextValue","console","warn","concat","withChannelActionContext","Component","WithChannelActionContextComponent","props","channelActionContext","_objectSpread","displayName","name","replace"],"sources":["/tmp/daft-chat-temp/node_modules/stream-chat-react/dist/context/ChannelActionContext.js"],"sourcesContent":["import React, { useContext } from 'react';\nexport const ChannelActionContext = React.createContext(undefined);\nexport const ChannelActionProvider = ({ children, value, }) => (React.createElement(ChannelActionContext.Provider, { value: value }, children));\nexport const useChannelActionContext = (componentName) => {\n    const contextValue = useContext(ChannelActionContext);\n    if (!contextValue) {\n        console.warn(`The useChannelActionContext hook was called outside of the ChannelActionContext provider. Make sure this hook is called within a child of the Channel component. The errored call is located in the ${componentName} component.`);\n        return {};\n    }\n    return contextValue;\n};\n/**\n * Typescript currently does not support partial inference, so if ChannelActionContext\n * typing is desired while using the HOC withChannelActionContext, the Props for the\n * wrapped component must be provided as the first generic.\n */\nexport const withChannelActionContext = (Component) => {\n    const WithChannelActionContextComponent = (props) => {\n        const channelActionContext = useChannelActionContext();\n        return React.createElement(Component, { ...props, ...channelActionContext });\n    };\n    WithChannelActionContextComponent.displayName = (Component.displayName ||\n        Component.name ||\n        'Component').replace('Base', '');\n    return WithChannelActionContextComponent;\n};\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,OAAO,MAAMC,oBAAoB,GAAGF,KAAK,CAACG,aAAa,CAACC,SAAS,CAAC;AAClE,OAAO,MAAMC,qBAAqB,GAAGC,IAAA;EAAA,IAAC;IAAEC,QAAQ;IAAEC;EAAO,CAAC,GAAAF,IAAA;EAAA,OAAMN,KAAK,CAACS,aAAa,CAACP,oBAAoB,CAACQ,QAAQ,EAAE;IAAEF,KAAK,EAAEA;EAAM,CAAC,EAAED,QAAQ,CAAC;AAAA,CAAC;AAC/I,OAAO,MAAMI,uBAAuB,GAAIC,aAAa,IAAK;EACtD,MAAMC,YAAY,GAAGZ,UAAU,CAACC,oBAAoB,CAAC;EACrD,IAAI,CAACW,YAAY,EAAE;IACfC,OAAO,CAACC,IAAI,wMAAAC,MAAA,CAAwMJ,aAAa,gBAAa,CAAC;IAC/O,OAAO,CAAC,CAAC;EACb;EACA,OAAOC,YAAY;AACvB,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMI,wBAAwB,GAAIC,SAAS,IAAK;EACnD,MAAMC,iCAAiC,GAAIC,KAAK,IAAK;IACjD,MAAMC,oBAAoB,GAAGV,uBAAuB,CAAC,CAAC;IACtD,OAAOX,KAAK,CAACS,aAAa,CAACS,SAAS,EAAAI,aAAA,CAAAA,aAAA,KAAOF,KAAK,GAAKC,oBAAoB,CAAE,CAAC;EAChF,CAAC;EACDF,iCAAiC,CAACI,WAAW,GAAG,CAACL,SAAS,CAACK,WAAW,IAClEL,SAAS,CAACM,IAAI,IACd,WAAW,EAAEC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC;EACpC,OAAON,iCAAiC;AAC5C,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}