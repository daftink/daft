{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport { useMessageContext } from '../../../context';\nexport function useFetchReactions(options) {\n  const {\n    handleFetchReactions: contextHandleFetchReactions\n  } = useMessageContext('useFetchReactions');\n  const [reactions, setReactions] = useState([]);\n  const {\n    handleFetchReactions: propHandleFetchReactions,\n    reactionType,\n    shouldFetch,\n    sort\n  } = options;\n  const [isLoading, setIsLoading] = useState(shouldFetch);\n  const handleFetchReactions = propHandleFetchReactions !== null && propHandleFetchReactions !== void 0 ? propHandleFetchReactions : contextHandleFetchReactions;\n  useEffect(() => {\n    if (!shouldFetch) {\n      return;\n    }\n    let cancel = false;\n    (async () => {\n      try {\n        setIsLoading(true);\n        const reactions = await handleFetchReactions(reactionType, sort);\n        if (!cancel) {\n          setReactions(reactions);\n        }\n      } catch (e) {\n        if (!cancel) {\n          setReactions([]);\n        }\n      } finally {\n        if (!cancel) {\n          setIsLoading(false);\n        }\n      }\n    })();\n    return () => {\n      cancel = true;\n    };\n  }, [handleFetchReactions, reactionType, shouldFetch, sort]);\n  return {\n    isLoading,\n    reactions\n  };\n}","map":{"version":3,"names":["useEffect","useState","useMessageContext","useFetchReactions","options","handleFetchReactions","contextHandleFetchReactions","reactions","setReactions","propHandleFetchReactions","reactionType","shouldFetch","sort","isLoading","setIsLoading","cancel","e"],"sources":["/tmp/daft-chat-temp/node_modules/stream-chat-react/dist/components/Reactions/hooks/useFetchReactions.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useMessageContext } from '../../../context';\nexport function useFetchReactions(options) {\n    const { handleFetchReactions: contextHandleFetchReactions } = useMessageContext('useFetchReactions');\n    const [reactions, setReactions] = useState([]);\n    const { handleFetchReactions: propHandleFetchReactions, reactionType, shouldFetch, sort, } = options;\n    const [isLoading, setIsLoading] = useState(shouldFetch);\n    const handleFetchReactions = propHandleFetchReactions ?? contextHandleFetchReactions;\n    useEffect(() => {\n        if (!shouldFetch) {\n            return;\n        }\n        let cancel = false;\n        (async () => {\n            try {\n                setIsLoading(true);\n                const reactions = await handleFetchReactions(reactionType, sort);\n                if (!cancel) {\n                    setReactions(reactions);\n                }\n            }\n            catch (e) {\n                if (!cancel) {\n                    setReactions([]);\n                }\n            }\n            finally {\n                if (!cancel) {\n                    setIsLoading(false);\n                }\n            }\n        })();\n        return () => {\n            cancel = true;\n        };\n    }, [handleFetchReactions, reactionType, shouldFetch, sort]);\n    return { isLoading, reactions };\n}\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,iBAAiB,QAAQ,kBAAkB;AACpD,OAAO,SAASC,iBAAiBA,CAACC,OAAO,EAAE;EACvC,MAAM;IAAEC,oBAAoB,EAAEC;EAA4B,CAAC,GAAGJ,iBAAiB,CAAC,mBAAmB,CAAC;EACpG,MAAM,CAACK,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM;IAAEI,oBAAoB,EAAEI,wBAAwB;IAAEC,YAAY;IAAEC,WAAW;IAAEC;EAAM,CAAC,GAAGR,OAAO;EACpG,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAACU,WAAW,CAAC;EACvD,MAAMN,oBAAoB,GAAGI,wBAAwB,aAAxBA,wBAAwB,cAAxBA,wBAAwB,GAAIH,2BAA2B;EACpFN,SAAS,CAAC,MAAM;IACZ,IAAI,CAACW,WAAW,EAAE;MACd;IACJ;IACA,IAAII,MAAM,GAAG,KAAK;IAClB,CAAC,YAAY;MACT,IAAI;QACAD,YAAY,CAAC,IAAI,CAAC;QAClB,MAAMP,SAAS,GAAG,MAAMF,oBAAoB,CAACK,YAAY,EAAEE,IAAI,CAAC;QAChE,IAAI,CAACG,MAAM,EAAE;UACTP,YAAY,CAACD,SAAS,CAAC;QAC3B;MACJ,CAAC,CACD,OAAOS,CAAC,EAAE;QACN,IAAI,CAACD,MAAM,EAAE;UACTP,YAAY,CAAC,EAAE,CAAC;QACpB;MACJ,CAAC,SACO;QACJ,IAAI,CAACO,MAAM,EAAE;UACTD,YAAY,CAAC,KAAK,CAAC;QACvB;MACJ;IACJ,CAAC,EAAE,CAAC;IACJ,OAAO,MAAM;MACTC,MAAM,GAAG,IAAI;IACjB,CAAC;EACL,CAAC,EAAE,CAACV,oBAAoB,EAAEK,YAAY,EAAEC,WAAW,EAAEC,IAAI,CAAC,CAAC;EAC3D,OAAO;IAAEC,SAAS;IAAEN;EAAU,CAAC;AACnC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}