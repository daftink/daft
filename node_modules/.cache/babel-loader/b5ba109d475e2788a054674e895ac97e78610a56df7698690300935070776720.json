{"ast":null,"code":"import { useChannelActionContext } from '../../../context/ChannelActionContext';\nexport const useOpenThreadHandler = (message, customOpenThread) => {\n  const {\n    openThread: channelOpenThread\n  } = useChannelActionContext('useOpenThreadHandler');\n  const openThread = customOpenThread || channelOpenThread;\n  return event => {\n    if (!openThread || !message) {\n      console.warn('Open thread handler was called but it is missing one of its parameters');\n      return;\n    }\n    openThread(message, event);\n  };\n};","map":{"version":3,"names":["useChannelActionContext","useOpenThreadHandler","message","customOpenThread","openThread","channelOpenThread","event","console","warn"],"sources":["/tmp/daft-chat-temp/node_modules/stream-chat-react/dist/components/Message/hooks/useOpenThreadHandler.js"],"sourcesContent":["import { useChannelActionContext } from '../../../context/ChannelActionContext';\nexport const useOpenThreadHandler = (message, customOpenThread) => {\n    const { openThread: channelOpenThread } = useChannelActionContext('useOpenThreadHandler');\n    const openThread = customOpenThread || channelOpenThread;\n    return (event) => {\n        if (!openThread || !message) {\n            console.warn('Open thread handler was called but it is missing one of its parameters');\n            return;\n        }\n        openThread(message, event);\n    };\n};\n"],"mappings":"AAAA,SAASA,uBAAuB,QAAQ,uCAAuC;AAC/E,OAAO,MAAMC,oBAAoB,GAAGA,CAACC,OAAO,EAAEC,gBAAgB,KAAK;EAC/D,MAAM;IAAEC,UAAU,EAAEC;EAAkB,CAAC,GAAGL,uBAAuB,CAAC,sBAAsB,CAAC;EACzF,MAAMI,UAAU,GAAGD,gBAAgB,IAAIE,iBAAiB;EACxD,OAAQC,KAAK,IAAK;IACd,IAAI,CAACF,UAAU,IAAI,CAACF,OAAO,EAAE;MACzBK,OAAO,CAACC,IAAI,CAAC,wEAAwE,CAAC;MACtF;IACJ;IACAJ,UAAU,CAACF,OAAO,EAAEI,KAAK,CAAC;EAC9B,CAAC;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}