{"ast":null,"code":"import clsx from 'clsx';\nimport React from 'react';\nexport const Anchor = _ref => {\n  let {\n    children,\n    href\n  } = _ref;\n  const isEmail = href === null || href === void 0 ? void 0 : href.startsWith('mailto:');\n  const isUrl = href === null || href === void 0 ? void 0 : href.startsWith('http');\n  if (!href || !isEmail && !isUrl) return React.createElement(React.Fragment, null, children);\n  return React.createElement(\"a\", {\n    className: clsx({\n      'str-chat__message-url-link': isUrl\n    }),\n    href: href,\n    rel: 'nofollow noreferrer noopener',\n    target: '_blank'\n  }, children);\n};","map":{"version":3,"names":["clsx","React","Anchor","_ref","children","href","isEmail","startsWith","isUrl","createElement","Fragment","className","rel","target"],"sources":["/tmp/daft-chat-temp/node_modules/stream-chat-react/dist/components/Message/renderText/componentRenderers/Anchor.js"],"sourcesContent":["import clsx from 'clsx';\nimport React from 'react';\nexport const Anchor = ({ children, href }) => {\n    const isEmail = href?.startsWith('mailto:');\n    const isUrl = href?.startsWith('http');\n    if (!href || (!isEmail && !isUrl))\n        return React.createElement(React.Fragment, null, children);\n    return (React.createElement(\"a\", { className: clsx({ 'str-chat__message-url-link': isUrl }), href: href, rel: 'nofollow noreferrer noopener', target: '_blank' }, children));\n};\n"],"mappings":"AAAA,OAAOA,IAAI,MAAM,MAAM;AACvB,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,MAAMC,MAAM,GAAGC,IAAA,IAAwB;EAAA,IAAvB;IAAEC,QAAQ;IAAEC;EAAK,CAAC,GAAAF,IAAA;EACrC,MAAMG,OAAO,GAAGD,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEE,UAAU,CAAC,SAAS,CAAC;EAC3C,MAAMC,KAAK,GAAGH,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEE,UAAU,CAAC,MAAM,CAAC;EACtC,IAAI,CAACF,IAAI,IAAK,CAACC,OAAO,IAAI,CAACE,KAAM,EAC7B,OAAOP,KAAK,CAACQ,aAAa,CAACR,KAAK,CAACS,QAAQ,EAAE,IAAI,EAAEN,QAAQ,CAAC;EAC9D,OAAQH,KAAK,CAACQ,aAAa,CAAC,GAAG,EAAE;IAAEE,SAAS,EAAEX,IAAI,CAAC;MAAE,4BAA4B,EAAEQ;IAAM,CAAC,CAAC;IAAEH,IAAI,EAAEA,IAAI;IAAEO,GAAG,EAAE,8BAA8B;IAAEC,MAAM,EAAE;EAAS,CAAC,EAAET,QAAQ,CAAC;AAC/K,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}