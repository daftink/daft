{"ast":null,"code":"import { useMessageComposer } from './hooks';\nimport React from 'react';\nimport { useStateStore } from '../../store';\nimport { useTranslationContext } from '../../context';\nconst stateSelector = state => ({\n  showReplyInChannel: state.showReplyInChannel\n});\nexport const SendToChannelCheckbox = () => {\n  const {\n    t\n  } = useTranslationContext();\n  const messageComposer = useMessageComposer();\n  const {\n    showReplyInChannel\n  } = useStateStore(messageComposer.state, stateSelector);\n  if (messageComposer.editedMessage || !messageComposer.threadId) return null;\n  return React.createElement(\"div\", {\n    className: 'str-chat__send-to-channel-checkbox__container'\n  }, React.createElement(\"div\", {\n    className: 'str-chat__send-to-channel-checkbox__field'\n  }, React.createElement(\"input\", {\n    id: 'send-to-channel-checkbox',\n    onClick: messageComposer.toggleShowReplyInChannel,\n    type: 'checkbox',\n    value: showReplyInChannel.toString()\n  }), React.createElement(\"label\", {\n    htmlFor: 'send-to-channel-checkbox'\n  }, Object.keys(messageComposer.channel.state.members).length === 2 ? t('Also send as a direct message') : t('Also send in channel'))));\n};","map":{"version":3,"names":["useMessageComposer","React","useStateStore","useTranslationContext","stateSelector","state","showReplyInChannel","SendToChannelCheckbox","t","messageComposer","editedMessage","threadId","createElement","className","id","onClick","toggleShowReplyInChannel","type","value","toString","htmlFor","Object","keys","channel","members","length"],"sources":["/tmp/daft-chat-temp/node_modules/stream-chat-react/dist/components/MessageInput/SendToChannelCheckbox.js"],"sourcesContent":["import { useMessageComposer } from './hooks';\nimport React from 'react';\nimport { useStateStore } from '../../store';\nimport { useTranslationContext } from '../../context';\nconst stateSelector = (state) => ({\n    showReplyInChannel: state.showReplyInChannel,\n});\nexport const SendToChannelCheckbox = () => {\n    const { t } = useTranslationContext();\n    const messageComposer = useMessageComposer();\n    const { showReplyInChannel } = useStateStore(messageComposer.state, stateSelector);\n    if (messageComposer.editedMessage || !messageComposer.threadId)\n        return null;\n    return (React.createElement(\"div\", { className: 'str-chat__send-to-channel-checkbox__container' },\n        React.createElement(\"div\", { className: 'str-chat__send-to-channel-checkbox__field' },\n            React.createElement(\"input\", { id: 'send-to-channel-checkbox', onClick: messageComposer.toggleShowReplyInChannel, type: 'checkbox', value: showReplyInChannel.toString() }),\n            React.createElement(\"label\", { htmlFor: 'send-to-channel-checkbox' }, Object.keys(messageComposer.channel.state.members).length === 2\n                ? t('Also send as a direct message')\n                : t('Also send in channel')))));\n};\n"],"mappings":"AAAA,SAASA,kBAAkB,QAAQ,SAAS;AAC5C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,QAAQ,aAAa;AAC3C,SAASC,qBAAqB,QAAQ,eAAe;AACrD,MAAMC,aAAa,GAAIC,KAAK,KAAM;EAC9BC,kBAAkB,EAAED,KAAK,CAACC;AAC9B,CAAC,CAAC;AACF,OAAO,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;EACvC,MAAM;IAAEC;EAAE,CAAC,GAAGL,qBAAqB,CAAC,CAAC;EACrC,MAAMM,eAAe,GAAGT,kBAAkB,CAAC,CAAC;EAC5C,MAAM;IAAEM;EAAmB,CAAC,GAAGJ,aAAa,CAACO,eAAe,CAACJ,KAAK,EAAED,aAAa,CAAC;EAClF,IAAIK,eAAe,CAACC,aAAa,IAAI,CAACD,eAAe,CAACE,QAAQ,EAC1D,OAAO,IAAI;EACf,OAAQV,KAAK,CAACW,aAAa,CAAC,KAAK,EAAE;IAAEC,SAAS,EAAE;EAAgD,CAAC,EAC7FZ,KAAK,CAACW,aAAa,CAAC,KAAK,EAAE;IAAEC,SAAS,EAAE;EAA4C,CAAC,EACjFZ,KAAK,CAACW,aAAa,CAAC,OAAO,EAAE;IAAEE,EAAE,EAAE,0BAA0B;IAAEC,OAAO,EAAEN,eAAe,CAACO,wBAAwB;IAAEC,IAAI,EAAE,UAAU;IAAEC,KAAK,EAAEZ,kBAAkB,CAACa,QAAQ,CAAC;EAAE,CAAC,CAAC,EAC3KlB,KAAK,CAACW,aAAa,CAAC,OAAO,EAAE;IAAEQ,OAAO,EAAE;EAA2B,CAAC,EAAEC,MAAM,CAACC,IAAI,CAACb,eAAe,CAACc,OAAO,CAAClB,KAAK,CAACmB,OAAO,CAAC,CAACC,MAAM,KAAK,CAAC,GAC/HjB,CAAC,CAAC,+BAA+B,CAAC,GAClCA,CAAC,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC;AAC9C,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}